var _$_2795 = ["clear", "cl_csm_shadows 0", "cl_csm_rope_shadows 0", "cl_csm_world_shadows 0", "cl_csm_world_shadows_in_viewmodelcascade 0", "cl_csm_static_prop_shadows 0", "cl_csm_sprite_shadows 0", "cl_csm_translucent_shadows 0", "cl_csm_viewmodel_shadows 0", "cl_csm_entity_shadows 0", "r_shadows 0", "r_3dsky 0", "fps_max 600", "echo [ weather-yaw ]", "echo [ weather-yaw ] injected", "echo [ weather-yaw ] last update : 01.04.2021", "echo welcome & back king [ ", " ]", "weatheryaw", "Options", "Ragebot", "Anti-Aim", "Misc", "Color", "fast dt", "fast recharge", "safe awp", "low hc in air scout", "2x miss for safety", "wait for on shot", "dmg override", "pistol dmg", "scout dmg", "awp dmg", "auto dmg", "edge yaw", "safe base aa", "anti target", "flick inverter", "fakelag fucker", "slow motion", "anti brute", "auto direction", "indicator", "aa-circle", "arrow indicator", "viewmodel on scope", "molotov-radius", "weather peek", "strafe fix", "weather graph", "weather rogdoll", "animfucker", "buy awp", "number marker", "hitmarker", "hitmarker on cross", "hitlog", "buylog", "aspect ratio", "weather line", "spectator list", "weather-hotkey", "ot-hotkey", "killsay", "clantag", "watermark", "watermark color", "hotkey color", "spectator color", "number marker color", "hitmarker color", "hitmarker on cross color", "weather peek color", "indicator color", "arrow indicator color", "weather graph color", "molotov-radius color", "viewmodel on scope color", "hitlog & buylog color", "thps dstnc", "flick legit aa", "static legit aa", "freestand", "pingspike", "override", "wait for on shot key", "weather peek hotkey", "JAVASCRIPT", "Script items", "Draw", "SetEnabled", "play music\\kill_03", "length", "s", "v", "h", "floor", "round", "r", "g", "b", "linew", "PI", "cos", "sin", "CInferno", "moltow", "attacker", "userid", "dmg_health", "Roboto Medium", "-", "MISC", "yhis", "player_hurt", "dwthis", "CBasePlayer", "m_vecVelocity[0]", "sqrt", "m_fFlags", "CreateMove", "on_otopek", "on_resm", "weapon_fire", "on_sÄ±k", "Aril", "untitled-font-1", "Extra", "Slow walk", "push", "Rage Anti-Aim", "Jitter offset", "Fake duck", "fake duck", "GENERAL", "Movement", "Auto peek", "auto peek", "Rage", "General", "Force safe point", "force safe", "Force body aim", "force baim", "Exploits", "Doubletap", "doubletap", "Hide shots", "hide shots", "damage override", "force on shot", "Misc.", "Edge jump", "edge jump", "Fake angles", "Inverter", "a-a inverter", "a", "privotkey", "DT_BasePlayer", "m_hObserverTarget", "Script Items", "type", "Verdana", "getObservators", "drawObservators", "round_start", "onRoundStart", "drk", "getHours", "getMinutes", "getSeconds", "0", ":", "latency: ", "ms ", " ticks: ", "  time: ", "!", "packet: choke", "choke: 0%", "loss: 0% (+- 0.5)", "velocity: ", "toFixed", " u/s ", "   fps: ", "lagcomp: ", "broken", "unsafe", "wegraph", "r_aspectratio", "FrameStageNotify", "aspectratio", "window_x", "window_y", "|", "Spectators", "weaspec", "hypot", "atan", "x", "y", "z", "playerhurt", "bullet_impact", "onBullethit", "r_drawvgui", "fov_cs_debug", "Visual", "WORLD", "View", "Thirdperson", "CCSPlayer", "m_bIsScoped", "fov_cs_debug 90", "FOV while scoped", "Entities", "Removals", "fov_cs_debug 0", "Unload", "clrscp", "scl", "m_nTickBase", "m_flNextAttack", "CBaseCombatWeapon", "m_flNextPrimaryAttack", "Enable", "Disable", "Recharge", "_TBC_CREATE_MOVE", "_TBC_UNLOAD", "on_weapon_fire", "player_connect_full", "on_player_connect", "on_create_move", "Turn speed", "d", "functionname", "Fake-Lag", "Enabled", "fuckfakelag", "drawcros", "event_player_hurtdm", "HEAVY PISTOL", "Targeting", "Minimum damage", "SCOUT", "AWP", "AUTOSNIPER", "toUpperCase", "r8 revolver", "desert eagle", "scar 20", "g3sg1", "ssg 08", "awp", "Arial", "Arial Bold", "", "indicatorty", "onCMts", "darkmystery", "hello, ", "\x0A", "", "CCSRagdoll", "m_vecRagdollVelocity", "CBaseAnimating", "m_vecForce", "ragdollForce", "eyepos", "position", "time", "shift", "withmarker", "imapctmaker", "PERFORMANCE & INFORMATION", "Information", "Restrictions", "Hide real angle", "At targets", "Auto direction", "Yaw offset", "Pitch", "static_legit_aa", "target_index", "ceil", "ragebot_fire", "on_ragebot_fire", "on_player_hurt", "on_shot_move", "player_death", "on_player_death", "reset_miss_logs", "low delta : normal", "body aim : active", "safe point : active", "hideshot : on", "doubletap : on", "damage : on", "direction : safe", "weindicator", "keybinds_x", "keybinds_y", "MuseoSansCyrl-500", "Hotkeys_x", "Hotkeys_y", "   safe point on", "  body aim on", "   double tap on", "   hide shots on", " flick legit aa", "  static legit aa", "  force onshot", "  freestand on", "  pingspike on", "damage on", "Hotkeys", " Hotkeys", "mainhotkey", "SuperDoubleTap", "GetScreenSize", "IsHotkeyActive", "sharkhvh", "GetValue", "indexOf", "GetUsername", "SetRealOffset", "SetOverride", "CFlashbang", "CSmokeGrenade", "CDecoyGrenade", "Line", "abs", "min", "GetFakeYaw", "Selected arrow color", "GetColor", "[astercord] Freestanding", "GetClassName", "ASTERCORD", "SetValue", "[astercord] Hide real", "DYNAMIC", "FREESTAND", "StringCustom", "DEFAULT", "dual berettas", "usp s", "CHEGrenade", "CIncendiaryGrenade", "CC4", "DT (onshot)", "DT (active weapon)", "DMG", "SAFE", "HEAD", "Backwards Hotkey", "Tickcount", "CWeaponAWP", "          Last update: 13/10/20", "Left Hotkey", "AddHotkey", "AddColorPicker", "AddCheckbox", "[astercord] Safe AWP", "Minimum damage override", "AddSliderInt", "Safe_Head", "0x0", "0xd", "GetLocalPlayer", "0xe", "0x3", "[astercord] Dodge AA Mode", "0xf", "0x10", "0x11", "SetFakeOffset", "0x12", "0xc", "0x13", "0x1d", "Arc", "GetViewAngles", "GetRealYaw", "0x21", "GetCharge", "0x1e", "AddFont", "GetWeapon", "GetName", "Curtime", "0x1a", "0x1", "IsAlive", "0x25", "toString", "TextSizeCustom", "0x43", "drawString", "RegisterCallback", "0x44", "0x45", "arrowffo", "switchind", "Indicator | X-Pos", "Indicator | Y-Pos", "DT SP", "SP", "Safe point override", "draw_fb", "fucking 5 iq ugly monkey go watch my videos and l2p ***", "u suck btw tbh ngl asap", "cringe af l2p", "die fanboy", "random", "say ", "onPlayerDeath", " |w", " <we", " wea", " weat", " weath", " weathe", " weather", " weathery", " weatheryaw ", " weathery ", " weather ", " weathe ", " weath ", " weat ", " wea< ", " we| ", "  ", " |w ", " <we ", "Slide walk", "stackleg", "generic", "head", "chest", "stomach", "left arm", "right arm", "left leg", "right leg", "?", "body", "hitchance", "safepoint", "hitbox", "exploit", "Hit ", "hitgroup", "health", "weapon", "T", "B", "H", "true", "false", "hegrenade", "Naded ", "inferno", "Burned ", "knife", "Knifed ", "[weather-yaw] ", "[", "] ", "\'s ", " for ", " (", " remaining) aimed=", "(", "%%) safety=", ") (", ")\x0A", ")", " remaining) \x0A", " remaining)", " bought ", "death", "dead", "spread", "prediction error", "Missed ", "%%) due to ", ", safety=", "item_purchase", "item_alma", "onmis", "removelogs", "thd", "baseyaw", "Accuracy", "Hitchance", "Accuracy boost", "lowhcinair", "offline", "MuseoSansCyrl-900", "                 | ", " | ", "tick | ", "WEATHER", "crack", "ssg08", "scar20", "mp_round_restart_delay", "forEach", "apply", "The first item of the round was purchased at ", "s, you purchased at ", "s.\x0A", "round_end", "roundEnded", "onDrawbuy", "purchased", "startdly", "yawbase", "Miscellaneous", "Extended backtracking", "flick_legit_aa", "EVENT_WEAPON_FIRES", "HUD_REDRAWS", "FRAME_NET_UPDATE_START", "dt", "Individual speeds:", "Forward Speed:", "Back Speed:", "Side Speed:", "motion", "real_type", "lby_type", "real_additional_type", "moving_real_type", "m_iClip1", "reset", "weapon_tak", "player_shot", "onCreateMove", " ", "[ weather-yaw ]", "[ weather-yaw ] injected", "welcome & back king  ", " \x03 [ weather-yaw ]", " \x04 [ weather-yaw ] injected", " \x08 welcome & back king  [", "]", "ExecuteCommand", "AddDropdown", "IsValid", "FilledRect", "SetColor", "WorldToScreen", "Polygon", "GetEntities", "GetRenderOrigin", "GetInt", "GetEntityFromUserID", "Realtime", "SetMovement", "GetProp", "IsKeyPressed", "GetString", "GetServerString", "GradientRect", "GetPlayers", "IsMenuOpen", "Latency", "Tickrate", "Frametime", "SetString", "Rect", "GetCursorPosition", "IsTeammate", "GetFloat", "GetEyePosition", "GetHitboxPosition", "ToggleHotkey", "SetFloat", "SetInt", "TickInterval", "DisableRecharge", "OverrideTolerance", "OverrideShift", "EnableRecharge", "GetEnemies", "IgnoreTarget", "Print", "FrameStage", "GetClassID", "SetProp", "GetTarget", "ForceTargetSafety", "IsLocalPlayer", "SetClanTag", "PrintColor", "IsDormant", "SetLBYOffset", "PrintChat"];
var _0x2583 = [_$_2795[0], _$_2795[1], _$_2795[2], _$_2795[3], _$_2795[4], _$_2795[5], _$_2795[6], _$_2795[7], _$_2795[8], _$_2795[9], _$_2795[10], _$_2795[11], _$_2795[12], _$_2795[13], _$_2795[14], _$_2795[15], _$_2795[16], _$_2795[17], _$_2795[18], _$_2795[19], _$_2795[20], _$_2795[21], _$_2795[22], _$_2795[23], _$_2795[24], _$_2795[25], _$_2795[26], _$_2795[27], _$_2795[28], _$_2795[29], _$_2795[30], _$_2795[31], _$_2795[32], _$_2795[33], _$_2795[34], _$_2795[35], _$_2795[36], _$_2795[37], _$_2795[38], _$_2795[39], _$_2795[40], _$_2795[41], _$_2795[42], _$_2795[43], _$_2795[44], _$_2795[45], _$_2795[46], _$_2795[47], _$_2795[48], _$_2795[49], _$_2795[50], _$_2795[51], _$_2795[52], _$_2795[53], _$_2795[54], _$_2795[55], _$_2795[56], _$_2795[57], _$_2795[58], _$_2795[59], _$_2795[60], _$_2795[61], _$_2795[62], _$_2795[63], _$_2795[64], _$_2795[65], _$_2795[66], _$_2795[67], _$_2795[68], _$_2795[69], _$_2795[70], _$_2795[71], _$_2795[72], _$_2795[73], _$_2795[74], _$_2795[75], _$_2795[76], _$_2795[77], _$_2795[78], _$_2795[79], _$_2795[80], _$_2795[81], _$_2795[82], _$_2795[83], _$_2795[84], _$_2795[85], _$_2795[86], _$_2795[87], _$_2795[88], _$_2795[89], _$_2795[90], _$_2795[91], _$_2795[92], _$_2795[93], _$_2795[94], _$_2795[95], _$_2795[96], _$_2795[97], _$_2795[98], _$_2795[99], _$_2795[100], _$_2795[101], _$_2795[102], _$_2795[103], _$_2795[104], _$_2795[105], _$_2795[106], _$_2795[107], _$_2795[108], _$_2795[109], _$_2795[110], _$_2795[111], _$_2795[112], _$_2795[113], _$_2795[114], _$_2795[115], _$_2795[116], _$_2795[117], _$_2795[118], _$_2795[119], _$_2795[120], _$_2795[121], _$_2795[122], _$_2795[123], _$_2795[124], _$_2795[125], _$_2795[126], _$_2795[127], _$_2795[128], _$_2795[129], _$_2795[130], _$_2795[131], _$_2795[132], _$_2795[133], _$_2795[134], _$_2795[135], _$_2795[136], _$_2795[137], _$_2795[138], _$_2795[139], _$_2795[140], _$_2795[141], _$_2795[142], _$_2795[143], _$_2795[144], _$_2795[145], _$_2795[146], _$_2795[147], _$_2795[148], _$_2795[149], _$_2795[150], _$_2795[151], _$_2795[152], _$_2795[153], _$_2795[154], _$_2795[155], _$_2795[156], _$_2795[157], _$_2795[158], _$_2795[159], _$_2795[160], _$_2795[161], _$_2795[162], _$_2795[163], _$_2795[164], _$_2795[165], _$_2795[166], _$_2795[167], _$_2795[168], _$_2795[169], _$_2795[170], _$_2795[171], _$_2795[172], _$_2795[173], _$_2795[174], _$_2795[175], _$_2795[176], _$_2795[177], _$_2795[178], _$_2795[179], _$_2795[180], _$_2795[181], _$_2795[182], _$_2795[183], _$_2795[184], _$_2795[185], _$_2795[186], _$_2795[187], _$_2795[188], _$_2795[189], _$_2795[190], _$_2795[191], _$_2795[192], _$_2795[193], _$_2795[194], _$_2795[195], _$_2795[196], _$_2795[197], _$_2795[198], _$_2795[199], _$_2795[200], _$_2795[201], _$_2795[202], _$_2795[203], _$_2795[204], _$_2795[205], _$_2795[206], _$_2795[207], _$_2795[208], _$_2795[209], _$_2795[210], _$_2795[211], _$_2795[212], _$_2795[213], _$_2795[214], _$_2795[215], _$_2795[216], _$_2795[217], _$_2795[218], _$_2795[219], _$_2795[220], _$_2795[221], _$_2795[222], _$_2795[223], _$_2795[224], _$_2795[225], _$_2795[226], _$_2795[227], _$_2795[228], _$_2795[229], _$_2795[230], _$_2795[231], _$_2795[232], _$_2795[233], _$_2795[234], _$_2795[235], _$_2795[236], _$_2795[237], _$_2795[238], _$_2795[239], _$_2795[240], _$_2795[241], _$_2795[242], _$_2795[243], _$_2795[244], _$_2795[245], _$_2795[246], _$_2795[247], _$_2795[248], _$_2795[249], _$_2795[250], _$_2795[251], _$_2795[252], _$_2795[253], _$_2795[254], _$_2795[255], _$_2795[256], _$_2795[257], _$_2795[258], _$_2795[259], _$_2795[260], _$_2795[261], _$_2795[262], _$_2795[263], _$_2795[264], _$_2795[265], _$_2795[266], _$_2795[267], _$_2795[268], _$_2795[269], _$_2795[270], _$_2795[271], _$_2795[272], _$_2795[273], _$_2795[274], _$_2795[275], _$_2795[276], _$_2795[277], _$_2795[278], _$_2795[279], _$_2795[280], _$_2795[281], _$_2795[282], _$_2795[283], _$_2795[284], _$_2795[285], _$_2795[286], _$_2795[287], _$_2795[288], _$_2795[289], _$_2795[290], _$_2795[291], _$_2795[292], _$_2795[293], _$_2795[294], _$_2795[295], _$_2795[296], _$_2795[297], _$_2795[298], _$_2795[299], _$_2795[300], _$_2795[301], _$_2795[302], _$_2795[303], _$_2795[304], _$_2795[305], _$_2795[306], _$_2795[307], _$_2795[308], _$_2795[309], _$_2795[310], _$_2795[311], _$_2795[312], _$_2795[313], _$_2795[314], _$_2795[315], _$_2795[316], _$_2795[317], _$_2795[318], _$_2795[319], _$_2795[320], _$_2795[321], _$_2795[322], _$_2795[323], _$_2795[324], _$_2795[325], _$_2795[326], _$_2795[327], _$_2795[328], _$_2795[329], _$_2795[330], _$_2795[331], _$_2795[332], _$_2795[333], _$_2795[334], _$_2795[335], _$_2795[336], _$_2795[337], _$_2795[338], _$_2795[339], _$_2795[340], _$_2795[341], _$_2795[342], _$_2795[343], _$_2795[344], _$_2795[345], _$_2795[346], _$_2795[347], _$_2795[348], _$_2795[349], _$_2795[350], _$_2795[351], _$_2795[352], _$_2795[353], _$_2795[354], _$_2795[355], _$_2795[356], _$_2795[357], _$_2795[358], _$_2795[359], _$_2795[360], _$_2795[361], _$_2795[362], _$_2795[363], _$_2795[364], _$_2795[365], _$_2795[366], _$_2795[367], _$_2795[368], _$_2795[369], _$_2795[370], _$_2795[371], _$_2795[372], _$_2795[373], _$_2795[374], _$_2795[375], _$_2795[376], _$_2795[377], _$_2795[378], _$_2795[379], _$_2795[380], _$_2795[381], _$_2795[382], _$_2795[383], _$_2795[384], _$_2795[385], _$_2795[386], _$_2795[387], _$_2795[388], _$_2795[389], _$_2795[390], _$_2795[391], _$_2795[392], _$_2795[393], _$_2795[394], _$_2795[395], _$_2795[396], _$_2795[397], _$_2795[398], _$_2795[399], _$_2795[400], _$_2795[401], _$_2795[402], _$_2795[403], _$_2795[404], _$_2795[405], _$_2795[406], _$_2795[407], _$_2795[408], _$_2795[409], _$_2795[410], _$_2795[411], _$_2795[412], _$_2795[413], _$_2795[414], _$_2795[415], _$_2795[416], _$_2795[417], _$_2795[418], _$_2795[419], _$_2795[420], _$_2795[421], _$_2795[422], _$_2795[423], _$_2795[424], _$_2795[425], _$_2795[426], _$_2795[427], _$_2795[428], _$_2795[429], _$_2795[430], _$_2795[431], _$_2795[432], _$_2795[433], _$_2795[434], _$_2795[435], _$_2795[436], _$_2795[437], _$_2795[438], _$_2795[439], _$_2795[440], _$_2795[441], _$_2795[442], _$_2795[443], _$_2795[444], _$_2795[445], _$_2795[446], _$_2795[447], _$_2795[448], _$_2795[449], _$_2795[450], _$_2795[451], _$_2795[452], _$_2795[453], _$_2795[454], _$_2795[455], _$_2795[456], _$_2795[457], _$_2795[458], _$_2795[459], _$_2795[460], _$_2795[461], _$_2795[462], _$_2795[463], _$_2795[464], _$_2795[465], _$_2795[466], _$_2795[467], _$_2795[468], _$_2795[469], _$_2795[470], _$_2795[471], _$_2795[472], _$_2795[473], _$_2795[474], _$_2795[475], _$_2795[476], _$_2795[477], _$_2795[478], _$_2795[479], _$_2795[480], _$_2795[481], _$_2795[482], _$_2795[483], _$_2795[484], _$_2795[485], _$_2795[486], _$_2795[487], _$_2795[488], _$_2795[489], _$_2795[490], _$_2795[491], _$_2795[492], _$_2795[493], _$_2795[494], _$_2795[495], _$_2795[496], _$_2795[497], _$_2795[498], _$_2795[499], _$_2795[500], _$_2795[501], _$_2795[502], _$_2795[503], _$_2795[504], _$_2795[505], _$_2795[506], _$_2795[507], _$_2795[508], _$_2795[509], _$_2795[510], _$_2795[511], _$_2795[512], _$_2795[513], _$_2795[514], _$_2795[515], _$_2795[516], _$_2795[517], _$_2795[518], _$_2795[519], _$_2795[520], _$_2795[521], _$_2795[522], _$_2795[523], _$_2795[524], _$_2795[525], _$_2795[526], _$_2795[527], _$_2795[528], _$_2795[529], _$_2795[530], _$_2795[531], _$_2795[532], _$_2795[533], _$_2795[534], _$_2795[535], _$_2795[536], _$_2795[537], _$_2795[538], _$_2795[539], _$_2795[540], _$_2795[541], _$_2795[542], _$_2795[543], _$_2795[544], _$_2795[545], _$_2795[546], _$_2795[547], _$_2795[548], _$_2795[549], _$_2795[550], _$_2795[551]];
Cheat[_$_2795[552]](_0x2583[0]);
Cheat[_$_2795[552]](_0x2583[1]);
Cheat[_$_2795[552]](_0x2583[2]);
Cheat[_$_2795[552]](_0x2583[3]);
Cheat[_$_2795[552]](_0x2583[4]);
Cheat[_$_2795[552]](_0x2583[5]);
Cheat[_$_2795[552]](_0x2583[6]);
Cheat[_$_2795[552]](_0x2583[7]);
Cheat[_$_2795[552]](_0x2583[8]);
Cheat[_$_2795[552]](_0x2583[9]);
Cheat[_$_2795[552]](_0x2583[10]);
Cheat[_$_2795[552]](_0x2583[11]);
Cheat[_$_2795[552]](_0x2583[12]);
Cheat[_$_2795[552]](_0x2583[13]);
Cheat[_$_2795[552]](_0x2583[14]);
Cheat[_$_2795[552]](_0x2583[15]);
Cheat[_$_2795[552]](_0x2583[16] + Cheat[_$_2795[327]]() + _0x2583[17]);
UI[_$_2795[365]](_0x2583[18]);
UI[_$_2795[553]](_0x2583[19], [_0x2583[20], _0x2583[21], _0x2583[22], _0x2583[23]]);
UI[_$_2795[365]](_0x2583[24]);
UI[_$_2795[365]](_0x2583[25]);
UI[_$_2795[365]](_0x2583[26]);
UI[_$_2795[365]](_0x2583[27]);
UI[_$_2795[365]](_0x2583[28]);
UI[_$_2795[365]](_0x2583[29]);
UI[_$_2795[365]](_0x2583[30]);
UI[_$_2795[368]](_0x2583[31], 0, 130);
UI[_$_2795[368]](_0x2583[32], 0, 130);
UI[_$_2795[368]](_0x2583[33], 0, 130);
UI[_$_2795[368]](_0x2583[34], 0, 130);
UI[_$_2795[365]](_0x2583[35]);
UI[_$_2795[365]](_0x2583[36]);
UI[_$_2795[365]](_0x2583[37]);
UI[_$_2795[365]](_0x2583[38]);
UI[_$_2795[365]](_0x2583[39]);
UI[_$_2795[365]](_0x2583[40]);
var brutee = UI[_$_2795[365]](_0x2583[41]);
var autodir = UI[_$_2795[365]](_0x2583[42]);
UI[_$_2795[365]](_0x2583[43]);
UI[_$_2795[365]](_0x2583[44]);
UI[_$_2795[365]](_0x2583[45]);
UI[_$_2795[365]](_0x2583[46]);
UI[_$_2795[365]](_0x2583[47]);
UI[_$_2795[365]](_0x2583[48]);
UI[_$_2795[365]](_0x2583[49]);
UI[_$_2795[365]](_0x2583[50]);
UI[_$_2795[365]](_0x2583[51]);
UI[_$_2795[365]](_0x2583[52]);
UI[_$_2795[365]](_0x2583[53]);
UI[_$_2795[365]](_0x2583[54]);
UI[_$_2795[365]](_0x2583[55]);
UI[_$_2795[365]](_0x2583[56]);
UI[_$_2795[365]](_0x2583[57]);
UI[_$_2795[365]](_0x2583[58]);
UI[_$_2795[365]](_0x2583[59]);
UI[_$_2795[365]](_0x2583[60]);
UI[_$_2795[365]](_0x2583[61]);
UI[_$_2795[365]](_0x2583[62]);
UI[_$_2795[365]](_0x2583[63]);
UI[_$_2795[365]](_0x2583[64]);
UI[_$_2795[365]](_0x2583[65]);
UI[_$_2795[365]](_0x2583[66]);
UI[_$_2795[364]](_0x2583[67]);
UI[_$_2795[364]](_0x2583[68]);
UI[_$_2795[364]](_0x2583[69]);
UI[_$_2795[364]](_0x2583[70]);
UI[_$_2795[364]](_0x2583[71]);
UI[_$_2795[364]](_0x2583[72]);
UI[_$_2795[364]](_0x2583[73]);
UI[_$_2795[364]](_0x2583[74]);
UI[_$_2795[364]](_0x2583[75]);
UI[_$_2795[364]](_0x2583[76]);
UI[_$_2795[364]](_0x2583[77]);
UI[_$_2795[364]](_0x2583[78]);
UI[_$_2795[364]](_0x2583[79]);
var a = 250;
UI[_$_2795[368]](_0x2583[80], 30, 300);
UI[_$_2795[363]](_0x2583[81]);
UI[_$_2795[363]](_0x2583[82]);
UI[_$_2795[363]](_0x2583[83]);
UI[_$_2795[363]](_0x2583[84]);
UI[_$_2795[363]](_0x2583[85]);
UI[_$_2795[363]](_0x2583[86]);
UI[_$_2795[363]](_0x2583[87]);

function SetEnabled() {
    if (UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[18])) {
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[19], 1)
    } else {
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[19], 0)
    };
    if (UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[19]) == 0 && UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[18])) {
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[37], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[41], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[42], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[30], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[39], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[40], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[24], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[28], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[25], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[26], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[27], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[29], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[43], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[44], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[45], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[47], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[46], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[49], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[50], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[51], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[52], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[53], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[55], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[48], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[87], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[56], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[57], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[58], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[59], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[80], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[60], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[62], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[63], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[61], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[64], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[65], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[66], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[86], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[31], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[32], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[33], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[34], 1);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[54], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 0);
        UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72], 0)
    } else {
        if (UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[19]) == 1 && UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[18])) {
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[37], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[41], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[42], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[30], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[39], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[40], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[26], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[27], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[29], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[24], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[28], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[25], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[43], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[44], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[45], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[47], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[46], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[49], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[50], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[51], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[52], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[53], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[55], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[48], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[87], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[56], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[57], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[58], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[59], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[80], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[60], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[62], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[63], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[61], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[64], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[65], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[66], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84], 1);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[86], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[31], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[32], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[33], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[34], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[54], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 0);
            UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72], 0)
        } else {
            if (UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[19]) == 2 && UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[18])) {
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[37], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[41], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[42], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[30], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[39], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[40], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[26], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[27], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[29], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[24], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[28], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[25], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[43], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[44], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[45], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[47], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[46], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[49], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[50], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[51], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[52], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[53], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[55], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[48], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[87], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[56], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[57], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[58], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[59], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[80], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[60], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[62], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[63], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[61], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[64], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[65], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[66], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[86], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[31], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[32], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[33], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[34], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[54], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72], 0)
            } else {
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[37], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[41], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[42], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[30], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[39], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[40], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[24], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[28], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[25], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[26], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[27], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[29], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[43], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[44], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[45], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[47], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[46], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[49], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[50], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[51], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[52], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[53], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[55], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[48], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[87], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[56], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[57], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[58], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[59], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[80], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[60], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[62], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[63], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[61], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[64], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[65], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[66], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[86], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[31], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[32], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[33], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[34], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[54], 0);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], 1);
                UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72], 1)
            }
        }
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[91]);
Cheat[_$_2795[552]](_0x2583[92]);

function HSVtoRGB(cB, cC, cD) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[60])) {
        var cE, cF, cG, cH, cI, cJ, cK, cA;
        if (arguments[_0x2583[93]] === 1) {
            cC = cB[_0x2583[94]], cD = cB[_0x2583[95]], cB = cB[_0x2583[96]]
        };
        cH = Math[_0x2583[97]](cB * 6);
        cI = cB * 6 - cH;
        cJ = cD * (1 - cC);
        cK = cD * (1 - cI * cC);
        cA = cD * (1 - (1 - cI) * cC);
        switch (cH % 6) {
        case 0:
            cE = cD, cF = cA, cG = cJ;
            break;
        case 1:
            cE = cK, cF = cD, cG = cJ;
            break;
        case 2:
            cE = cJ, cF = cD, cG = cA;
            break;
        case 3:
            cE = cJ, cF = cK, cG = cD;
            break;
        case 4:
            cE = cA, cF = cJ, cG = cD;
            break;
        case 5:
            cE = cD, cF = cJ, cG = cK;
            break
        };
        return {
            r: Math[_0x2583[98]](cE * 255),
            g: Math[_0x2583[98]](cF * 255),
            b: Math[_0x2583[98]](cG * 255)
        }
    }
}

function linew() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[60])) {
        var Q = Entity[_$_2795[372]]();
        if (!Q || !Entity[_$_2795[554]](Q)) {
            return
        };
        var cS = HSVtoRGB(Global[_$_2795[359]]() % 350 / 350, 1, 1);
        var cT = Global[_$_2795[322]]();
        Render[_$_2795[555]](0, 0, cT[0], 2, [cS[_0x2583[99]], cS[_0x2583[100]], cS[_0x2583[101]], 255])
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[102]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77], [89, 119, 239, 255])
};

function radians_to_degrees(dH) {
    return dH * (180 / Math[_0x2583[103]])
}

function get_circle(G, bt, bu, bv, bw) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[47])) {
        first = true;
        old_screen_pos = Render[_$_2795[557]]([G, bt, bu]);
        for (t = 0.000; t <= Math[_0x2583[103]] * 2.1; t += bw) {
            if (first) {
                world_pos = [(bv * Math[_0x2583[104]](-t) + G), (bv * Math[_0x2583[105]](-t) + bt), bu];
                old_screen_pos = Render[_$_2795[557]](world_pos);
                first = false
            };
            world_pos = [(bv * Math[_0x2583[104]](t) + G), (bv * Math[_0x2583[105]](t) + bt), bu];
            screen_pos = Render[_$_2795[557]](world_pos);
            old_screen_pos = screen_pos
        }
    }
}

function draw_circle_3d(G, bt, bu, bv, bx, by, bz, bA, bB) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[47])) {
        var bw = 10;
        var bC, bD;
        by = by + 1;
        for (rot = by; rot < bx + by + 1; rot += bw) {
            rot_r = rot * (Math[_0x2583[103]] / 180);
            line_x = bv * Math[_0x2583[104]](rot_r) + G, line_y = bv * Math[_0x2583[105]](rot_r) + bt;
            var bE = Render[_$_2795[557]]([line_x, line_y, bu]),
                bF = Render[_$_2795[557]]([G, bt, bu]);
            if (bF[0] != null && bE[0] != null && bC != null) {
                if (bA) {
                    Render[_$_2795[558]]([
                        [bE[0], bE[1]],
                        [bC, bD],
                        [bF[0], bF[1]]
                    ], bB)
                };
                Render[_$_2795[333]](bE[0], bE[1], bC, bD, bz)
            };
            bC = bE[0], bD = bE[1]
        }
    }
}

function moltow() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[47])) {
        entities = Entity[_$_2795[559]]();
        for (i = 0; i < entities[_0x2583[93]]; i++) {
            world_pos = Entity[_$_2795[560]](entities[i]);
            name = Entity[_$_2795[340]](entities[i]);
            screen_pos = Render[_$_2795[557]](world_pos);
            color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[77]);
            color1 = [0, 0, 0, 255];
            color2 = [color[0], color[1], color[2], 65];
            if (name != _0x2583[106]) {
                continue
            };
            get_circle(world_pos[0], world_pos[1], world_pos[2], 180, 0.150);
            draw_circle_3d(world_pos[0] - 178, world_pos[1] - 30, world_pos[2], 180, 360, 0.150, color1, true, color2)
        }
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[107]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70], [89, 119, 239, 255])
};
var iVictim_index, First_pos, Second_pos, Third_pos, Fourth_pos, Fifth_pos, First, Second, Third, Fourth, Five, iDamageCount = iOffsetCount = YOffsetFirst = YOffsetSecond = YOffsetThird = YOffsetFourth = YOffsetFive = loadFont = HitAttack = 0;
const first_screen_pos = [],
    second_screen_pos = [],
    third_screen_pos = [],
    fourth_screen_pos = [],
    fifth_screen_pos = [];

function dwthis() {
    iAttacker = Event[_$_2795[561]](_0x2583[108]);
    iAttacker_index = Entity[_$_2795[562]](iAttacker);
    iVictim = Event[_$_2795[561]](_0x2583[109]);
    iVictim_index = Entity[_$_2795[562]](iVictim);
    if (Entity[_$_2795[372]]() == iVictim_index && Entity[_$_2795[372]]() !== iAttacker_index) {
        return
    };
    if (Entity[_$_2795[372]]() == iAttacker_index) {
        HitAttack = 1;
        if (iDamageCount == 5) {
            iDamageCount = 0
        };
        if (iOffsetCount == 5) {
            iOffsetCount = 0
        };
        iDamageCount += 1;
        iOffsetCount += 1;
        if (iDamageCount == 1) {
            First = Event[_$_2795[561]](_0x2583[110]);
            First_pos = Entity[_$_2795[560]](iVictim_index)
        };
        if (iDamageCount == 2) {
            Second = Event[_$_2795[561]](_0x2583[110]);
            Second_pos = Entity[_$_2795[560]](iVictim_index)
        };
        if (iDamageCount == 3) {
            Third = Event[_$_2795[561]](_0x2583[110]);
            Third_pos = Entity[_$_2795[560]](iVictim_index)
        };
        if (iDamageCount == 4) {
            Fourth = Event[_$_2795[561]](_0x2583[110]);
            Fourth_pos = Entity[_$_2795[560]](iVictim_index)
        };
        if (iDamageCount == 5) {
            Five = Event[_$_2795[561]](_0x2583[110]);
            Fifth_pos = Entity[_$_2795[560]](iVictim_index)
        };
        if (iOffsetCount == 1) {
            YOffsetFirst = 255
        };
        if (iOffsetCount == 2) {
            YOffsetSecond = 255
        };
        if (iOffsetCount == 3) {
            YOffsetThird = 255
        };
        if (iOffsetCount == 4) {
            YOffsetFourth = 255
        };
        if (iOffsetCount == 5) {
            YOffsetFive = 255
        }
    }
}

function yhis() {
    if (loadFont == 0) {
        fontSM2 = Render[_$_2795[390]](_0x2583[111], 8, 100);
        loadFont = 1
    };
    if (!HitAttack || !getCustomValue(_0x2583[54])) {
        return
    };
    if (Entity[_$_2795[554]](iVictim_index)) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[70]);
        if (YOffsetFirst > 1) {
            YOffsetFirst--
        };
        if (YOffsetSecond > 1) {
            YOffsetSecond -= 2
        };
        if (YOffsetThird > 1) {
            YOffsetThird -= 3
        };
        if (YOffsetFourth > 1) {
            YOffsetFourth -= 2
        };
        if (YOffsetFive > 1) {
            YOffsetFive--
        };
        if (iDamageCount == 1) {
            first_screen_pos = Render[_$_2795[557]](First_pos)
        };
        if (iDamageCount == 2) {
            second_screen_pos = Render[_$_2795[557]](Second_pos)
        };
        if (iDamageCount == 3) {
            third_screen_pos = Render[_$_2795[557]](Third_pos)
        };
        if (iDamageCount == 4) {
            fourth_screen_pos = Render[_$_2795[557]](Fourth_pos)
        };
        if (iDamageCount == 5) {
            fifth_screen_pos = Render[_$_2795[557]](Fifth_pos)
        };
        Render[_$_2795[346]](first_screen_pos[0] - 15, first_screen_pos[1] - 50 + YOffsetFirst - 255, 1, _0x2583[112] + First, [color[0], color[1], color[2], YOffsetFirst], fontSM2);
        Render[_$_2795[346]](second_screen_pos[0] + 15, second_screen_pos[1] - 50 + YOffsetSecond - 255, 1, _0x2583[112] + Second, [color[0], color[1], color[2], YOffsetSecond], fontSM2);
        Render[_$_2795[346]](third_screen_pos[0] - 25, third_screen_pos[1] - 50 + YOffsetThird - 255, 1, _0x2583[112] + Third, [color[0], color[1], color[2], YOffsetThird], fontSM2);
        Render[_$_2795[346]](fourth_screen_pos[0] + 25, fourth_screen_pos[1] - 50 + YOffsetFourth - 255, 1, _0x2583[112] + Fourth, [color[0], color[1], color[2], YOffsetFourth], fontSM2);
        Render[_$_2795[346]](fifth_screen_pos[0] - 10, fifth_screen_pos[1] - 50 + YOffsetFive - 255, 1, _0x2583[112] + Five, [color[0], color[1], color[2], YOffsetFive], fontSM2)
    }
}

function getCustomValue(bG) {
    var ce = UI[_$_2795[325]](_0x2583[113], _0x2583[88], _0x2583[89], bG);
    return ce
}

function Maintqwe() {
    Global[_$_2795[402]](_0x2583[90], _0x2583[114]);
    Global[_$_2795[402]](_0x2583[115], _0x2583[116])
}
Maintqwe();
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73], [89, 119, 239, 255])
};
var pi = 3.141592653589793;
var state = [false, false, false, false];
var saved_pos = Entity[_$_2795[372]]() != null && Entity[_$_2795[396]](Entity[_$_2795[372]]()) && Entity[_$_2795[560]](Entity[_$_2795[372]]()) || [0, 0, 0];
var latest_velocity = 0;
var timer = Globals[_$_2795[563]]() + 1.5;

function d2r(bs) {
    return bs * (pi / 180)
}

function draw_circle_3d(G, bt, bu, bv, bx, by, bz, bA, bB) {
    var bw = 8;
    var bC, bD;
    bx = bx < 361 && bx || 360;
    bx = bx > -1 && bx || 0;
    by = by + 1;
    for (rot = by; rot < bx + by + 1; rot += by * bw) {
        rot_r = d2r(rot);
        line_x = bv * Math[_0x2583[104]](rot_r) + G, line_y = bv * Math[_0x2583[105]](rot_r) + bt;
        var bE = Render[_$_2795[557]]([line_x, line_y, bu]),
            bF = Render[_$_2795[557]]([G, bt, bu]);
        if (bF[0] != null && bE[0] != null && bC != null) {
            if (bA) {
                Render[_$_2795[558]]([
                    [bE[0], bE[1]],
                    [bC, bD],
                    [bF[0], bF[1]]
                ], bB)
            };
            Render[_$_2795[333]](bE[0], bE[1], bC, bD, bz)
        };
        bC = bE[0], bD = bE[1]
    }
}

function go_to(co) {
    var Q = Entity[_$_2795[372]]();
    if (Q == null || !Entity[_$_2795[396]](Q)) {
        return
    };
    var cp = Entity[_$_2795[560]](Q);
    var cq = Local[_$_2795[385]]();
    var cr = cp[0] - co[0],
        cs = cp[1] - co[1];
    var ct = cr * Math[_0x2583[104]](cq[1] / 180 * pi) + cs * Math[_0x2583[105]](cq[1] / 180 * pi),
        cu = cs * Math[_0x2583[104]](cq[1] / 180 * pi) - cr * Math[_0x2583[105]](cq[1] / 180 * pi);
    UserCMD[_$_2795[564]]([-ct * 20, cu * 20, 0])
}

function get_velocity(bc) {
    var cd = Entity[_$_2795[565]](bc, _0x2583[117], _0x2583[118]);
    return Math[_0x2583[119]](cd[0] * cd[0] + cd[1] * cd[1])
}

function on_resm() {
    color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[73]);
    var Q = Entity[_$_2795[372]]();
    if (Q == null || !Entity[_$_2795[396]](Q) || !UI[_$_2795[325]](_0x2583[22], _0x2583[48])) {
        return
    };
    var cp = Entity[_$_2795[560]](Q);
    var dd = Math[_0x2583[97]](cp[0] - saved_pos[0]),
        de = Math[_0x2583[97]](cp[1] - saved_pos[1]),
        df = dd + de;
    var cy = Entity[_$_2795[565]](Q, _0x2583[117], _0x2583[120]);
    var color = [color[0], color[1], color[2], 255],
        dg = [color[0], color[1], color[2], 95];
    if (dd > 700 || dd < -700 || de > 700 || de < -700) {
        if (!state[1]) {
            saved_pos[0] = cp[0], saved_pos[1] = cp[1], saved_pos[2] = cp[2]
        }
    };
    state[1] = cy == 256;
    state[0] = Input[_$_2795[566]](0x57) || Input[_$_2795[566]](0x41) || Input[_$_2795[566]](0x53) || Input[_$_2795[566]](0x44);
    state[3] = !state[0] && !state[1];
    if (state[2] && latest_velocity > 6) {
        state[3] = true
    };
    if (timer < Globals[_$_2795[563]]()) {
        timer = timer + 1.2;
        latest_velocity = Math[_0x2583[97]](get_velocity(Q))
    };
    if (UI[_$_2795[323]](_0x2583[22], _0x2583[87])) {
        draw_circle_3d(saved_pos[0], saved_pos[1], saved_pos[2], 15, 360, 0, color, true, dg)
    } else {
        saved_pos[0] = cp[0], saved_pos[1] = cp[1], saved_pos[2] = cp[2]
    };
    if (state[3]) {
        if (Math[_0x2583[97]](cp[0]) == Math[_0x2583[97]](saved_pos[0]) && Math[_0x2583[97]](cp[1]) == Math[_0x2583[97]](saved_pos[1]) || dd > -8 && dd < 8 && de > -8 && de < 8) {
            state[3] = false;
            state[2] = false
        }
    }
}

function on_sÄ±k() {
    if (Entity[_$_2795[562]](Event[_$_2795[567]](_0x2583[109])) == Entity[_$_2795[372]]()) {
        state[2] = true
    }
}

function on_otopek() {
    if (state[3] && UI[_$_2795[325]](_0x2583[22], _0x2583[48])) {
        go_to(saved_pos)
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[122]);
Cheat[_$_2795[402]](_0x2583[90], _0x2583[123]);
Cheat[_$_2795[402]](_0x2583[124], _0x2583[125]);
const x1 = 0;
const y1 = 500;

function in_bounds(be, G, bt, cM, cN) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[63])) {
        return (be[0] > G) && (be[1] > bt) && (be[0] < cM) && (be[1] < cN)
    }
}

function privotkey() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[63])) {
        if (!World[_$_2795[568]]()) {
            return
        };
        const G = 0;
        y = 500;
        var H = Render[_$_2795[390]](_0x2583[126], 7, 100);
        const I = Render[_$_2795[390]](_0x2583[127], 9, 10);
        Render[_$_2795[569]](G, y - 53, 150, 11, 500, [0, 0, 0, 80], [0, 0, 0, 0]);
        var cB = [];
        if (UI[_$_2795[323]](_0x2583[21], _0x2583[128], _0x2583[129])) {
            cB[_0x2583[130]](_0x2583[36])
        };
        if (UI[_$_2795[323]](_0x2583[21], _0x2583[131], _0x2583[132])) {
            cB[_0x2583[130]](_0x2583[35])
        };
        if (UI[_$_2795[323]](_0x2583[21], _0x2583[128], _0x2583[133])) {
            cB[_0x2583[130]](_0x2583[134])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[135], _0x2583[136], _0x2583[137])) {
            cB[_0x2583[130]](_0x2583[138])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[141])) {
            cB[_0x2583[130]](_0x2583[142])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[143])) {
            cB[_0x2583[130]](_0x2583[144])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[146])) {
            cB[_0x2583[130]](_0x2583[147])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[148])) {
            cB[_0x2583[130]](_0x2583[149])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85])) {
            cB[_0x2583[130]](_0x2583[150])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83])) {
            cB[_0x2583[130]](_0x2583[83])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84])) {
            cB[_0x2583[130]](_0x2583[84])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[86])) {
            cB[_0x2583[130]](_0x2583[151])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81])) {
            cB[_0x2583[130]](_0x2583[81])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82])) {
            cB[_0x2583[130]](_0x2583[82])
        };
        if (UI[_$_2795[323]](_0x2583[152], _0x2583[135], _0x2583[136], _0x2583[153])) {
            cB[_0x2583[130]](_0x2583[154])
        };
        if (UI[_$_2795[323]](_0x2583[21], _0x2583[155], _0x2583[156])) {
            cB[_0x2583[130]](_0x2583[157])
        };
        if (cB[_0x2583[93]] > 0) {
            for (i = 0; i < cB[_0x2583[93]]; i++) {
                Render[_$_2795[346]](G + 23, y - 40 + 17 * i, 0, cB[i], [0, 0, 0, 180], H);
                Render[_$_2795[346]](G + 5, y - 40 + 17 * i, 0, _0x2583[158], [245, 245, 245, 255], I);
                Render[_$_2795[346]](G + 24, y - 40 + 17 * i, 0, cB[i], [255, 255, 255, 255], H)
            }
        }
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[159]);
var observators = [];

function getObservators() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[63])) {
        var cg = Entity[_$_2795[570]]();
        var Q = Entity[_$_2795[372]]();
        var ch = Entity[_$_2795[565]](Q, _0x2583[160], _0x2583[161]);
        if (!Q) {
            return
        };
        observators = [];
        for (i = 0; i < cg[_0x2583[93]]; i++) {
            if (Entity[_$_2795[396]](Q)) {
                if (!cg[i] || Entity[_$_2795[396]](cg[i])) {
                    continue
                };
                var ci = Entity[_$_2795[565]](cg[i], _0x2583[160], _0x2583[161]);
                if (!ci || ci == _0x2583[161]) {
                    continue
                };
                if (ci == Q) {
                    observators[_0x2583[130]](Entity[_$_2795[392]](cg[i]))
                }
            } else {
                if (!cg[i] || Entity[_$_2795[396]](cg[i])) {
                    continue
                };
                var ci = Entity[_$_2795[565]](cg[i], _0x2583[160], _0x2583[161]);
                if (!ci || ci == _0x2583[161]) {
                    continue
                };
                if (ci == ch) {
                    observators[_0x2583[130]](Entity[_$_2795[392]](cg[i]))
                }
            }
        }
    }
}

function drawObservators() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[63])) {
        var bH = Render[_$_2795[322]]();
        var bI = UI[_$_2795[325]](_0x2583[162], _0x2583[163]);
        var H = Render[_$_2795[390]](_0x2583[164], 8, 100);
        for (i = 0; i < observators[_0x2583[93]]; i++) {
            var bG = observators[i];
            var bJ = Render[_$_2795[399]](bG, H);
            Render[_$_2795[346]](bH[0] - bJ[0] - 1850, (i * -20) + 540, 0, bG, [255, 255, 255, 255], H)
        }
    }
}

function onRoundStart() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[63])) {
        observators = []
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[165]);
Global[_$_2795[402]](_0x2583[90], _0x2583[166]);
Global[_$_2795[402]](_0x2583[167], _0x2583[168]);

function drk() {
    screenSize = Global[_$_2795[322]]();
    if (UI[_$_2795[571]]()) {
        Render[_$_2795[555]](0, 0, screenSize[0], screenSize[1], [0, 0, 0, 115])
    }
}

function Maindrk() {
    Global[_$_2795[402]](_0x2583[90], _0x2583[169])
}
Maindrk();
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76], [89, 119, 239, 255])
};

function isDoubleTapActive() {
    var cQ = UI[_$_2795[325]](_0x2583[139], _0x2583[145], _0x2583[146]);
    var cR = UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[146]);
    return cQ && cR
}

function isHActive() {
    var cQ = UI[_$_2795[325]](_0x2583[139], _0x2583[145], _0x2583[148]);
    var cR = UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[148]);
    return cQ && cR
}

function GetVelocity() {
    var cd = Entity[_$_2795[565]](Entity[_$_2795[372]](), _0x2583[117], _0x2583[118]);
    return Math[_0x2583[119]](cd[0] * cd[0] + cd[1] * cd[1])
}

function wegraph() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[50])) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[76]);
        var J = Math[_0x2583[98]](Local[_$_2795[572]]() * 1000 - 16);
        var dP = new Date();
        var dQ = dP[_0x2583[170]]();
        var dR = dP[_0x2583[171]]();
        var dS = dP[_0x2583[172]]();
        var K = dQ <= 9 ? _0x2583[173] + dP[_0x2583[170]]() + _0x2583[174] : dP[_0x2583[170]]() + _0x2583[174];
        var dT = dR <= 9 ? _0x2583[173] + dP[_0x2583[171]]() + _0x2583[174] : dP[_0x2583[171]]() + _0x2583[174];
        var dU = dS <= 9 ? _0x2583[173] + dP[_0x2583[172]]() : dP[_0x2583[172]]();
        var screen_size = Render[_$_2795[322]]();
        var dV = Render[_$_2795[390]](_0x2583[164], 7, 700);
        var dW = Render[_$_2795[390]](_0x2583[164], 14, 500);
        var Q = Entity[_$_2795[372]]();
        var L = _0x2583[175] + (J * 1) + _0x2583[176] + _0x2583[177] + Globals[_$_2795[573]]()[_$_2795[398]]() + _0x2583[178] + K + dT + dU;
        var dX = Math[_0x2583[97]](1 / Global[_$_2795[574]]());
        g_Local_weapon = Entity[_$_2795[391]](Q);
        weapon_name = Entity[_$_2795[392]](g_Local_weapon);
        g_Local_classname = Entity[_$_2795[340]](g_Local_weapon);
        var x1 = screen_size[0] / 2;
        var y1 = screen_size[1] - 148;
        var cM = screen_size[0] / 2 + 25;
        var cN = screen_size[1] - 110;
        var dY = screen_size[0] / 2 - 25;
        var dZ = screen_size[1] - 110;
        var ea = screen_size[1] - 125;
        if (!Entity[_$_2795[396]](Q)) {
            return
        };
        Render[_$_2795[346]](screen_size[0] / 2 - 18, screen_size[1] - 92, 0, _0x2583[179], [0, 0, 0, 255], dW);
        Render[_$_2795[346]](screen_size[0] / 2 - 18, screen_size[1] - 94, 0, _0x2583[179], [0, 0, 0, 255], dW);
        Render[_$_2795[346]](screen_size[0] / 2 - 19, screen_size[1] - 93, 0, _0x2583[179], [0, 0, 0, 255], dW);
        Render[_$_2795[346]](screen_size[0] / 2 - 17, screen_size[1] - 93, 0, _0x2583[179], [0, 0, 0, 255], dW);
        Render[_$_2795[346]](screen_size[0] / 2 - 18, screen_size[1] - 93, 0, _0x2583[179], [255, 255, 255, 255], dW);
        Render[_$_2795[333]](screen_size[0] / 2 - 17, screen_size[1] - 96, screen_size[0] / 2 - 11, screen_size[1] - 96, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 17, screen_size[1] - 95, screen_size[0] / 2 - 11, screen_size[1] - 95, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 18, screen_size[1] - 95, screen_size[0] / 2 - 10, screen_size[1] - 95, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 18, screen_size[1] - 94, screen_size[0] / 2 - 10, screen_size[1] - 94, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 19, screen_size[1] - 93, screen_size[0] / 2 - 26, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 19, screen_size[1] - 93, screen_size[0] / 2 - 26, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 9, screen_size[1] - 93, screen_size[0] / 2 - 2, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 9, screen_size[1] - 93, screen_size[0] / 2 - 2, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 23, screen_size[1] - 72, screen_size[0] / 2 - 5, screen_size[1] - 72, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 23, screen_size[1] - 71, screen_size[0] / 2 - 5, screen_size[1] - 71, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 23, screen_size[1] - 70, screen_size[0] / 2 - 5, screen_size[1] - 70, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 5, screen_size[1] - 71, screen_size[0] / 2 - 2, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 5, screen_size[1] - 71, screen_size[0] / 2 - 2, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 23, screen_size[1] - 71, screen_size[0] / 2 - 26, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 23, screen_size[1] - 71, screen_size[0] / 2 - 26, screen_size[1] - 75, [color[0], color[1], color[2], 255]);
        Render[_$_2795[346]](screen_size[0] / 2 - 101, screen_size[1] - 80, 0, _0x2583[180], [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 100, screen_size[1] - 81, 0, _0x2583[180], [219, 221, 255, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 + 4, screen_size[1] - 80, 0, _0x2583[181], [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 + 5, screen_size[1] - 81, 0, _0x2583[181], [219, 221, 255, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 + 4, screen_size[1] - 66, 0, _0x2583[182], [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 + 5, screen_size[1] - 67, 0, _0x2583[182], [219, 221, 255, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 101, screen_size[1] - 51, 0, _0x2583[183] + (GetVelocity()[_0x2583[184]](0))[_$_2795[398]]() + _0x2583[185] + _0x2583[177] + Globals[_$_2795[573]]()[_$_2795[398]]() + _0x2583[178] + K + dT + dU, [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 100, screen_size[1] - 52, 0, _0x2583[183] + (GetVelocity()[_0x2583[184]](0))[_$_2795[398]]() + _0x2583[185] + _0x2583[177] + Globals[_$_2795[573]]()[_$_2795[398]]() + _0x2583[178] + K + dT + dU, [219, 221, 255, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 101, screen_size[1] - 66, 0, _0x2583[175] + (J * 1), [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 100, screen_size[1] - 67, 0, _0x2583[175] + (J * 1), [219, 221, 255, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 48, screen_size[1] - 66, 0, _0x2583[186] + dX, [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 47, screen_size[1] - 67, 0, _0x2583[186] + dX, [219, 221, 255, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 48, screen_size[1] - 21, 0, _0x2583[187], [0, 0, 0, 255], dV);
        Render[_$_2795[346]](screen_size[0] / 2 - 47, screen_size[1] - 22, 0, _0x2583[187], [219, 221, 255, 255], dV);
        if (isHActive() == 1) {
            Render[_$_2795[346]](screen_size[0] / 2 + 3, screen_size[1] - 21, 0, _0x2583[188], [0, 0, 0, 255], dV);
            Render[_$_2795[346]](screen_size[0] / 2 + 2, screen_size[1] - 22, 0, _0x2583[188], [42, 250, 87, 255], dV)
        };
        if (isDoubleTapActive() == 0 && isHActive() == 0) {
            Render[_$_2795[346]](screen_size[0] / 2 + 3, screen_size[1] - 21, 0, _0x2583[189], [0, 0, 0, 255], dV);
            Render[_$_2795[346]](screen_size[0] / 2 + 2, screen_size[1] - 22, 0, _0x2583[189], [250, 42, 42, 255], dV)
        };
        if (isDoubleTapActive() == 1 || isHActive() == 1) {
            Render[_$_2795[346]](screen_size[0] / 2 + 3, screen_size[1] - 21, 0, _0x2583[188], [0, 0, 0, 255], dV);
            Render[_$_2795[346]](screen_size[0] / 2 + 2, screen_size[1] - 22, 0, _0x2583[188], [42, 250, 87, 255], dV)
        };
        if (isDoubleTapActive() == 1 || isHActive() == 1) {
            Render[_$_2795[346]](screen_size[0] / 2 + 3, screen_size[1] - 21, 0, _0x2583[188], [0, 0, 0, 255], dV);
            Render[_$_2795[346]](screen_size[0] / 2 + 2, screen_size[1] - 22, 0, _0x2583[188], [42, 250, 87, 255], dV)
        }
    }
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[190]);

function getVal(cn) {
    return UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], cn)
}

function aspectratio() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[59])) {
        menu_val = 1.1;
        string_menu_val = menu_val[_$_2795[398]]();
        Convar[_$_2795[575]](_0x2583[191], string_menu_val)
    }
}
Cheat[_$_2795[402]](_0x2583[192], _0x2583[193]);
const window_x = UI[_$_2795[368]](_0x2583[194], 0, Global[_$_2795[322]]()[0]);
const window_y = UI[_$_2795[368]](_0x2583[195], 0, Global[_$_2795[322]]()[1]);

function update_menu() {
    UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[194], false);
    UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[195], false)
}
update_menu();

function in_bounds(be, G, bt, cM, cN) {
    return (be[0] > G) && (be[1] > bt) && (be[0] < cM) && (be[1] < cN)
}
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69], [89, 119, 239, 255])
};

function weaspec() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[61])) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[69]);
        var H = Render[_$_2795[390]](_0x2583[126], 7, 100);
        const I = Render[_$_2795[390]](_0x2583[127], 8, 10);
        const dO = get_spectators();
        const G = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[194]),
            bt = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[195]);
        Render[_$_2795[346]](G + 0, bt + 2, 1, _0x2583[196], [17, 17, 17, 255], H);
        Render[_$_2795[346]](G + 0, bt + 10, 1, _0x2583[196], [17, 17, 17, 255], H);
        Render[_$_2795[346]](G + 121, bt + 2, 1, _0x2583[196], [17, 17, 17, 255], H);
        Render[_$_2795[346]](G + 121, bt + 10, 1, _0x2583[196], [17, 17, 17, 255], H);
        Render[_$_2795[555]](G, bt + 4, 120, 1, [17, 17, 17, 255]);
        Render[_$_2795[555]](G, bt + 19, 120, 1, [17, 17, 17, 255]);
        Render[_$_2795[555]](G, bt + 5, 120, 14, [17, 17, 17, 100]);
        Render[_$_2795[555]](G, bt, 200, 60 + 15 * 0, [55, 55, 55, 0]);
        Render[_$_2795[576]](G + 5, bt + 5, 190, 50 + 15 * 0, [2, 2, 2, 0]);
        Render[_$_2795[555]](G + 5, bt + 5, 190, 50 + 15 * 0, [25, 25, 25, 0]);
        Render[_$_2795[346]](G + 35 - (Render[_$_2795[399]](_0x2583[197], H)[0] / 2) + 10, bt + 6, 0, _0x2583[101], [color[0], color[1], color[2], 255], I);
        Render[_$_2795[346]](G + 63, bt + 7, 1, _0x2583[197], [255, 255, 255, 255], H);
        Render[_$_2795[346]](G + 62, bt + 6, 1, _0x2583[197], [0, 0, 0, 80], H);
        for (i = 0; i < dO[_0x2583[93]]; i++) {
            Render[_$_2795[346]](G + 55, bt + 20 + 15 * i, 1, dO[i], [255, 255, 255, 255], H)
        };
        if (Global[_$_2795[566]](1) && UI[_$_2795[571]]()) {
            const cW = Global[_$_2795[577]]();
            if (in_bounds(cW, G, bt, G + 200, bt + 30)) {
                UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[194], cW[0] - 100);
                UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[195], cW[1] - 20)
            }
        }
    }
}

function get_spectators() {
    var ca = [];
    const cb = Entity[_$_2795[570]]();
    for (i = 0; i < cb[_0x2583[93]]; i++) {
        const bF = cb[i];
        if (Entity[_$_2795[565]](bF, _0x2583[117], _0x2583[161]) != _0x2583[161]) {
            const cc = Entity[_$_2795[565]](bF, _0x2583[117], _0x2583[161]);
            if (cc === Entity[_$_2795[372]]()) {
                const bG = Entity[_$_2795[392]](bF);
                ca[_0x2583[130]](bG)
            }
        }
    };
    return ca
}
Global[_$_2795[402]](_0x2583[90], _0x2583[198]);

function RADTODEG(dH) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[37])) {
        return dH * 180 / Math[_0x2583[103]]
    }
}

function calcAngle(bf, bg) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[37])) {
        var bh = [];
        bh[0] = bf[0] - bg[0];
        bh[1] = bf[1] - bg[1];
        bh[2] = bf[2] - bg[2];
        var bi = [];
        var bj = Local[_$_2795[385]]();
        bi[0] = RADTODEG(Math[_0x2583[200]](bh[2] / Math[_0x2583[199]](bh[0], bh[1]))) - bj[0];
        bi[1] = RADTODEG(Math[_0x2583[200]](bh[1] / bh[0])) - bj[1];
        bi[2] = 0;
        if (bh[0] >= 0) {
            bi[1] += 180
        };
        return bi
    }
}
var shots = 0;

function onBullethit() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[37])) {
        var bc = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]));
        if (bc == Entity[_$_2795[372]]() || Entity[_$_2795[578]](bc)) {
            return
        };
        var cp = [Event[_$_2795[579]](_0x2583[201]), Event[_$_2795[579]](_0x2583[202]), Event[_$_2795[579]](_0x2583[203])];
        var bd = calcAngle(Entity[_$_2795[580]](bc), cp);
        var dl = calcAngle(Entity[_$_2795[580]](bc), Entity[_$_2795[581]](Entity[_$_2795[372]](), 0));
        var bh = [dl[0] - bd[0], dl[1] - bd[1], 0];
        var dm = Math[_0x2583[119]](bh[0] * bh[0] + bh[1] * bh[1]);
        if (dm < 10) {
            UI[_$_2795[582]](_0x2583[21], _0x2583[155], _0x2583[156])
        };
        shots++;
        if (!(shots % 4)) {
            UI[_$_2795[582]](_0x2583[21], _0x2583[155], _0x2583[156])
        }
    }
}

function playerhurt() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[37])) {
        if (Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109])) == Entity[_$_2795[372]]()) {
            UI[_$_2795[582]](_0x2583[21], _0x2583[155], _0x2583[156])
        }
    }
}
Cheat[_$_2795[402]](_0x2583[115], _0x2583[204]);
Cheat[_$_2795[402]](_0x2583[205], _0x2583[206]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78], [89, 119, 239, 255])
};

function scl() {
    color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[78]);
    var Q = Entity[_$_2795[372]]();
    if (!Entity[_$_2795[396]](Q) || !World[_$_2795[568]]()) {
        Convar[_$_2795[583]](_0x2583[207], 1);
        Convar[_$_2795[584]](_0x2583[208], 0);
        return
    };
    Q = Entity[_$_2795[372]]();
    thirdperson = UI[_$_2795[325]](_0x2583[209], _0x2583[210], _0x2583[211], _0x2583[212]);
    offset = 10;
    leng = 150;
    accent1 = [color[0], color[1], color[2], 255];
    accent2 = [255, 255, 255, 0];
    scoped = Entity[_$_2795[565]](Q, _0x2583[213], _0x2583[214]);
    screen_size = Render[_$_2795[322]]();
    if (!UI[_$_2795[325]](_0x2583[89], _0x2583[46])) {
        return
    };
    if (scoped) {
        Convar[_$_2795[583]](_0x2583[207], 0);
        if (!UI[_$_2795[323]](_0x2583[209], _0x2583[210], _0x2583[211], _0x2583[212])) {
            Cheat[_$_2795[552]](_0x2583[215]);
            UI[_$_2795[342]](_0x2583[209], _0x2583[210], _0x2583[211], _0x2583[216], 1)
        };
        UI[_$_2795[342]](_0x2583[209], _0x2583[210], _0x2583[217], _0x2583[218], 59);
        Render[_$_2795[569]](screen_size[0] / 2 + offset, screen_size[1] / 2, leng, 1, 1, [accent1[0], accent1[1], accent1[2], accent1[3]], [accent2[0], accent2[1], accent2[2], accent2[3]]);
        Render[_$_2795[569]](screen_size[0] / 2 - leng - offset, screen_size[1] / 2, leng, 1, 1, [accent2[0], accent2[1], accent2[2], accent2[3]], [accent1[0], accent1[1], accent1[2], accent1[3]]);
        Render[_$_2795[569]](screen_size[0] / 2, screen_size[1] / 2 + offset, 1, leng, 0, [accent1[0], accent1[1], accent1[2], accent1[3]], [accent2[0], accent2[1], accent2[2], accent2[3]]);
        Render[_$_2795[569]](screen_size[0] / 2, screen_size[1] / 2 - leng - offset, 1, leng, 0, [accent2[0], accent2[1], accent2[2], accent2[3]], [accent1[0], accent1[1], accent1[2], accent1[3]])
    } else {
        Convar[_$_2795[583]](_0x2583[207], 1);
        Convar[_$_2795[584]](_0x2583[208], 0);
        UI[_$_2795[342]](_0x2583[209], _0x2583[210], _0x2583[217], _0x2583[218], 63)
    }
}

function clrscp() {
    Cheat[_$_2795[552]](_0x2583[219])
}
Cheat[_$_2795[402]](_0x2583[220], _0x2583[221]);
Cheat[_$_2795[402]](_0x2583[90], _0x2583[222]);

function can_shift_shot(bk) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[25])) {
        var bl = Entity[_$_2795[372]]();
        var bm = Entity[_$_2795[391]](bl);
        if (bl == null || bm == null) {
            return false
        };
        var bn = Entity[_$_2795[565]](bl, _0x2583[213], _0x2583[223]);
        var bo = Globals[_$_2795[585]]() * (bn - bk);
        if (bo < Entity[_$_2795[565]](bl, _0x2583[213], _0x2583[224])) {
            return false
        };
        if (bo < Entity[_$_2795[565]](bm, _0x2583[225], _0x2583[226])) {
            return false
        };
        return true
    }
}

function _TBC_CREATE_MOVE() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[25])) {
        var N = Exploit[_$_2795[388]]();
        var O = 3;
        Exploit[(N != 1 ? _0x2583[227] : _0x2583[228]) + _0x2583[229]]();
        if (can_shift_shot(18) && N != 1) {
            Exploit[_$_2795[586]]();
            Exploit[_$_2795[229]]()
        };
        Exploit[_$_2795[587]](O);
        Exploit[_$_2795[588]](18 - O)
    }
}

function _TBC_UNLOAD() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[25])) {
        Exploit[_$_2795[589]]()
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[230]);
Cheat[_$_2795[402]](_0x2583[220], _0x2583[231]);
var last_shot_time = [];

function on_create_move() {
    if (!UI[_$_2795[325]](_0x2583[22], _0x2583[29]) || !UI[_$_2795[323]](_0x2583[22], _0x2583[86])) {
        return
    };
    var Q = Entity[_$_2795[372]]();
    if (!Entity[_$_2795[396]](Q)) {
        return
    };
    var cX = Entity[_$_2795[590]]();
    for (var cH = 0; cH < cX[_0x2583[93]]; cH++) {
        var cY = cX[cH];
        var cZ = Globals[_$_2795[359]]() - last_shot_time[cY];
        var da = cZ >= 0 && cZ <= 12;
        if (!da) {
            Ragebot[_$_2795[591]](cY)
        }
    }
}

function on_weapon_fire() {
    var dk = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]));
    last_shot_time[dk] = Globals[_$_2795[359]]()
}

function on_player_connect() {
    var db = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]));
    if (db == Entity[_$_2795[372]]()) {
        last_shot_time = []
    }
}
Cheat[_$_2795[402]](_0x2583[124], _0x2583[232]);
Cheat[_$_2795[402]](_0x2583[233], _0x2583[234]);
Cheat[_$_2795[402]](_0x2583[121], _0x2583[235]);

function d() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[49])) {
        UI[_$_2795[342]](_0x2583[22], _0x2583[135], _0x2583[136], _0x2583[236], 250)
    }
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[237]);
var flip = false;

function functionname() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[24])) {
        flip = !flip;
        if (flip) {} else {}
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[238]);
var frame = 0;

function fuckfakelag() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[39])) {
        frame++;
        if (frame == 30) {
            frame = 1
        };
        if (frame >= 7 && frame <= 30) {
            UI[_$_2795[342]](_0x2583[21], _0x2583[239], _0x2583[240], true)
        } else {
            UI[_$_2795[342]](_0x2583[21], _0x2583[239], _0x2583[240], false)
        }
    }
}
Global[_$_2795[402]](_0x2583[121], _0x2583[241]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72], [89, 119, 239, 255])
};
var should_draw = false;
var started_drawing = 0;
var screen_size = Render[_$_2795[322]]();
var alpha = 0;

function event_player_hurtdm() {
    target = Event[_$_2795[561]](_0x2583[109]);
    target_id = Entity[_$_2795[562]](target);
    attacker = Event[_$_2795[561]](_0x2583[108]);
    attacker_id = Entity[_$_2795[562]](attacker);
    if ((Entity[_$_2795[372]]() === target_id) || (Entity[_$_2795[372]]() !== attacker_id)) {
        return
    };
    should_draw = true;
    started_drawing = Globals[_$_2795[359]]()
}

function drawcros() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[56])) {
        if (!should_draw) {
            return
        };
        if (started_drawing + 60 < Globals[_$_2795[359]]()) {
            return
        };
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[72]);
        alpha = (started_drawing + 60) - Globals[_$_2795[359]]();
        if (alpha > 255) {
            alpha = 255
        };
        if (alpha < 0) {
            alpha = 0
        };
        Render[_$_2795[333]](screen_size[0] / 2 - 6, screen_size[1] / 2 - 6, screen_size[0] / 2 - 3, screen_size[1] / 2 - 3, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 + 6, screen_size[1] / 2 + 6, screen_size[0] / 2 + 3, screen_size[1] / 2 + 3, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 + 6, screen_size[1] / 2 - 6, screen_size[0] / 2 + 3, screen_size[1] / 2 - 3, [color[0], color[1], color[2], 255]);
        Render[_$_2795[333]](screen_size[0] / 2 - 6, screen_size[1] / 2 + 6, screen_size[0] / 2 - 3, screen_size[1] / 2 + 3, [color[0], color[1], color[2], 255])
    }
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[242]);
Cheat[_$_2795[402]](_0x2583[115], _0x2583[243]);
var heavy_cache = UI[_$_2795[325]](_0x2583[139], _0x2583[244], _0x2583[245], _0x2583[246]);
var scout_cache = UI[_$_2795[325]](_0x2583[139], _0x2583[247], _0x2583[245], _0x2583[246]);
var awp_cache = UI[_$_2795[325]](_0x2583[139], _0x2583[248], _0x2583[245], _0x2583[246]);
var auto_cache = UI[_$_2795[325]](_0x2583[139], _0x2583[249], _0x2583[245], _0x2583[246]);

function isActive(a) {
    return UI[_$_2795[323]](_0x2583[89], a)
}

function setValue(dJ, ce) {
    UI[_$_2795[342]](_0x2583[139], dJ[_0x2583[250]](), _0x2583[245], _0x2583[246], ce)
}

function isHeavyPistol(bG) {
    if (bG == _0x2583[251] || bG == _0x2583[252]) {
        return true
    }
}

function isAutoSniper(bG) {
    if (bG == _0x2583[253] || weapon_name == _0x2583[254]) {
        return true
    }
}

function onCMts() {
    heavy_value = UI[_$_2795[325]](_0x2583[89], _0x2583[31]);
    scout_value = UI[_$_2795[325]](_0x2583[89], _0x2583[32]);
    awp_value = UI[_$_2795[325]](_0x2583[89], _0x2583[33]);
    auto_value = UI[_$_2795[325]](_0x2583[89], _0x2583[34]);
    weapon_name = Entity[_$_2795[392]](Entity[_$_2795[391]](Entity[_$_2795[372]]()));
    if (isActive(_0x2583[85]) && isHeavyPistol(weapon_name)) {
        setValue(_0x2583[244], heavy_value)
    } else {
        setValue(_0x2583[244], heavy_cache)
    };
    if (isActive(_0x2583[85]) && weapon_name == _0x2583[255]) {
        setValue(_0x2583[247], scout_value)
    } else {
        setValue(_0x2583[247], scout_cache)
    };
    if (isActive(_0x2583[85]) && weapon_name == _0x2583[256]) {
        setValue(_0x2583[248], awp_value)
    } else {
        setValue(_0x2583[248], awp_cache)
    };
    if (isActive(_0x2583[85]) && isAutoSniper(weapon_name)) {
        setValue(_0x2583[249], auto_value)
    } else {
        setValue(_0x2583[249], auto_cache)
    }
}

function indicatorty() {
    color[0], color[1], color[2];
    font = Render[_$_2795[390]](_0x2583[257], 6, 300);
    const cO = Render[_$_2795[390]](_0x2583[258], 6, 1600);
    screen = Render[_$_2795[322]]();
    wep = Entity[_$_2795[392]](Entity[_$_2795[391]](Entity[_$_2795[372]]()));
    x = screen[0] - screen[0] + 730;
    y = screen[1] - 460;
    heavy = _0x2583[259] + UI[_$_2795[325]](_0x2583[139], _0x2583[244], _0x2583[245], _0x2583[246]);
    scout = _0x2583[259] + UI[_$_2795[325]](_0x2583[139], _0x2583[247], _0x2583[245], _0x2583[246]);
    awp = _0x2583[259] + UI[_$_2795[325]](_0x2583[139], _0x2583[248], _0x2583[245], _0x2583[246]);
    auto = _0x2583[259] + UI[_$_2795[325]](_0x2583[139], _0x2583[249], _0x2583[245], _0x2583[246]);
    var cP = _0x2583[259];
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[30]) && Entity[_$_2795[554]](Entity[_$_2795[372]]()) && Entity[_$_2795[396]](Entity[_$_2795[372]]())) {
        if (isHeavyPistol(wep)) {
            cP = heavy
        } else {
            if (wep == _0x2583[255]) {
                cP = scout
            } else {
                if (wep == _0x2583[256]) {
                    cP = awp
                } else {
                    if (isAutoSniper(wep)) {
                        cP = auto
                    }
                }
            }
        }
    };
    if (cP == _0x2583[259] + 0) {
        cP = _0x2583[173]
    };
    Render[_$_2795[346]](x + 1, y + 1, 0, cP + _0x2583[259], [10, 10, 10, 0], font);
    Render[_$_2795[346]](x, y, 0, cP + _0x2583[259], [10, 10, 10, 0], font)
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[260]);
Cheat[_$_2795[402]](_0x2583[121], _0x2583[261]);

function username() {
    var M = Cheat[_$_2795[327]]();
    if (M === _0x2583[262]) {
        Cheat[_$_2795[592]](_0x2583[263] + M + _0x2583[264])
    } else {
        Cheat[_$_2795[552]](_0x2583[265])
    }
}
username();

function ragdollForce() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[51])) {
        framestage = Cheat[_$_2795[593]]();
        if (framestage == 3) {
            entities = Entity[_$_2795[559]]();
            for (i = 0; i < entities[_0x2583[93]]; i++) {
                classID = Entity[_$_2795[594]](entities[i]);
                if (classID == 42) {
                    dir = Entity[_$_2795[565]](entities[i], _0x2583[266], _0x2583[267]);
                    dir[0] = 0;
                    dir[1] = 0;
                    dir[2] = 999999;
                    dir1 = Entity[_$_2795[565]](entities[i], _0x2583[268], _0x2583[269]);
                    dir1[0] = 0;
                    dir1[1] = 0;
                    dir1[2] = 999999;
                    Entity[_$_2795[595]](entities[i], _0x2583[266], _0x2583[267], dir);
                    Entity[_$_2795[595]](entities[i], _0x2583[268], _0x2583[269], dir1)
                }
            }
        }
    }
}
Cheat[_$_2795[402]](_0x2583[192], _0x2583[270]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71], [89, 119, 239, 255])
};
var traceContainer = [];

function tracer(dM, dN, time) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[55])) {
        this[_0x2583[271]] = dM;
        this[_0x2583[272]] = dN;
        this[_0x2583[273]] = time
    }
}
var impact = 0;

function imapctmaker() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[55])) {
        if (Globals[_$_2795[359]]() > impact) {
            if (Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109])) == Entity[_$_2795[372]]()) {
                var G = Event[_$_2795[579]](_0x2583[201]);
                var bt = Event[_$_2795[579]](_0x2583[202]);
                var bu = Event[_$_2795[579]](_0x2583[203]);
                var cp = [G, bt, bu];
                var cL = Entity[_$_2795[580]](Entity[_$_2795[372]]());
                traceContainer[_0x2583[130]](new tracer(cL, cp, Globals[_$_2795[359]]()));
                impact = Globals[_$_2795[359]]()
            }
        }
    }
}

function withmarker() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[55])) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[71]);
        if (0) {
            traceContainer = [];
            return
        };
        var cA = 200;
        var eb = [color[0], color[1], color[2], 255];
        for (i in traceContainer) {
            var ec = Render[_$_2795[322]]();
            var ed = Render[_$_2795[557]](traceContainer[i][_0x2583[271]]);
            var ee = Render[_$_2795[557]](traceContainer[i][_0x2583[272]]);
            if (1) {
                if (1) {
                    currenteye = Entity[_$_2795[580]](Entity[_$_2795[372]]());
                    var ef = currenteye[0] - traceContainer[i][_0x2583[271]][0];
                    var eg = currenteye[1] - traceContainer[i][_0x2583[271]][1];
                    var eh = currenteye[2] - traceContainer[i][_0x2583[271]][2];
                    var dG = Math[_0x2583[119]](ef * ef + eg * eg + eh * eh);
                    if (1) {
                        Render[_$_2795[333]](ee[0] + 3, ee[1], ee[0] - 5, ee[1], eb);
                        Render[_$_2795[333]](ee[0] - 1, ee[1] + 4, ee[0] - 1, ee[1] - 4, eb)
                    }
                }
            };
            if (traceContainer[i][_0x2583[273]] + cA < Globals[_$_2795[359]]()) {
                traceContainer[_0x2583[274]]()
            };
            if (5 < traceContainer[_0x2583[93]]) {
                traceContainer[_0x2583[274]]()
            }
        }
    }
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[275]);
Cheat[_$_2795[402]](_0x2583[205], _0x2583[276]);
var static_aa = true;

function static_legit_aa() {
    if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82])) {
        if (static_aa) {
            restrictions_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[277], _0x2583[278], _0x2583[279]);
            hiderealangle_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[155], _0x2583[280]);
            at_targets_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[281]);
            autodirection_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[282]);
            yaw_offset_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[283]);
            jitter_offset_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[132]);
            pitch_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[128], _0x2583[284]);
            safe_base_aa_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36]);
            edge_yaw_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35]);
            flick_inverter_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38]);
            static_aa = false
        };
        UI[_$_2795[342]](_0x2583[22], _0x2583[277], _0x2583[278], _0x2583[279], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[155], _0x2583[280], true);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[281], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[282], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[283], 180);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[132], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[128], _0x2583[284], 0);
        UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], 0);
        UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], 0);
        UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], 0)
    } else {
        if (!static_aa) {
            UI[_$_2795[342]](_0x2583[22], _0x2583[277], _0x2583[278], _0x2583[279], restrictions_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[155], _0x2583[280], hiderealangle_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[281], at_targets_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[282], autodirection_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[283], yaw_offset_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[132], jitter_offset_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[128], _0x2583[284], pitch_cache);
            UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], safe_base_aa_cache);
            UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], edge_yaw_cache);
            UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], flick_inverter_cache);
            static_aa = true
        }
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[285]);;;;;
var waiting_for_hit = false;
var target_idx = 0;
var tick_count = -1;
var misses = [64];
var safety_ents = [64];
reset_miss_logs();

function on_ragebot_fire() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[28])) {
        waiting_for_hit = true;
        target_idx = Event[_$_2795[561]](_0x2583[286]);
        tick_count = Globals[_$_2795[359]]()
    }
}

function on_player_hurt() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[28])) {
        var db = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]));
        if (db == Entity[_$_2795[372]]()) {
            return
        };
        var cz = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[108]));
        if (cz != Entity[_$_2795[372]]()) {
            return
        };
        if (db != target_idx) {
            return
        };
        waiting_for_hit = false;
        target_idx = 0;
        tick_count = -1
    }
}

function on_shot_move() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[28])) {
        var dh = 1000 / Globals[_$_2795[573]]();
        var di = 1 + Math[_0x2583[287]]((Local[_$_2795[572]]() * 2) / dh);
        if (Globals[_$_2795[359]]() - tick_count >= di && waiting_for_hit) {
            misses[target_idx]++;
            if (misses[target_idx] >= 20) {
                safety_ents[target_idx] = 1
            };
            waiting_for_hit = false;
            target_idx = 0;
            tick_count = -1
        };
        var dj = Ragebot[_$_2795[596]]();
        if (dj == 0) {
            return
        };
        if (safety_ents[dj] == 1) {
            Ragebot[_$_2795[597]](dj)
        }
    }
}

function on_player_death() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[28])) {
        var dc = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]));
        reset_specific_miss_logs(dc)
    }
}

function reset_miss_logs() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[28])) {
        for (var cH = 0; cH < 64; cH++) {
            reset_specific_miss_logs(cH)
        }
    }
}

function reset_specific_miss_logs(dc) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[28])) {
        misses[dc] = 0;
        safety_ents[dc] = 0
    }
}
Cheat[_$_2795[402]](_0x2583[288], _0x2583[289]);
Cheat[_$_2795[402]](_0x2583[115], _0x2583[290]);
Cheat[_$_2795[402]](_0x2583[121], _0x2583[291]);
Cheat[_$_2795[402]](_0x2583[292], _0x2583[293]);
Cheat[_$_2795[402]](_0x2583[167], _0x2583[294]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74], [89, 119, 239, 255])
};
var screen_size = Global[_$_2795[322]]();
var DT = 1;

function weindicator() {
    color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[74]);
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[43])) {
        var H = Render[_$_2795[390]](_0x2583[257], 7, 300);
        isEnabled = UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[240]);
        isHideshots = UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[148]);
        isForcesafepoint = UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[141]);
        isForcebodyaim = UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[143]);
        isDoubletap = UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[146]);
        isfreestand = UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83]);
        isoverride = UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85]);
        if (DT) {
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 24, Global[_$_2795[322]]()[1] / 2 + 22, 0, isEnabled ? _0x2583[18] : _0x2583[18], isEnabled ? [color[0], color[1], color[2], 255] : [219, 221, 255, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 23, Global[_$_2795[322]]()[1] / 2 + 23, 0, isEnabled ? _0x2583[18] : _0x2583[18], isEnabled ? [0, 0, 0, 100] : [255, 0, 0, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 24, Global[_$_2795[322]]()[1] / 2 + 22, 0, isEnabled ? _0x2583[18] : _0x2583[18], isEnabled ? [color[0], color[1], color[2], 255] : [219, 221, 255, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 23, Global[_$_2795[322]]()[1] / 2 + 23, 0, isEnabled ? _0x2583[18] : _0x2583[18], isEnabled ? [0, 0, 0, 100] : [255, 0, 0, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 33, Global[_$_2795[322]]()[1] / 2 + 31, 0, isEnabled ? _0x2583[295] : _0x2583[295], isEnabled ? [color[0], color[1], color[2], 255] : [219, 221, 255, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 32, Global[_$_2795[322]]()[1] / 2 + 32, 0, isEnabled ? _0x2583[295] : _0x2583[295], isEnabled ? [0, 0, 0, 100] : [255, 0, 0, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 33, Global[_$_2795[322]]()[1] / 2 + 31, 0, isEnabled ? _0x2583[295] : _0x2583[295], isEnabled ? [color[0], color[1], color[2], 255] : [219, 221, 255, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 32, Global[_$_2795[322]]()[1] / 2 + 32, 0, isEnabled ? _0x2583[295] : _0x2583[295], isEnabled ? [0, 0, 0, 100] : [255, 0, 0, 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 33, Global[_$_2795[322]]()[1] / 2 + 41, 0, isForcebodyaim ? _0x2583[296] : _0x2583[296], isForcebodyaim ? [color[0], color[1], color[2], 255] : [219, 221, 255, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 32, Global[_$_2795[322]]()[1] / 2 + 42, 0, isForcebodyaim ? _0x2583[296] : _0x2583[296], isForcebodyaim ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 33, Global[_$_2795[322]]()[1] / 2 + 41, 0, isForcebodyaim ? _0x2583[296] : _0x2583[296], isForcebodyaim ? [color[0], color[1], color[2], 255] : [219, 221, 255, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 32, Global[_$_2795[322]]()[1] / 2 + 42, 0, isForcebodyaim ? _0x2583[296] : _0x2583[296], isForcebodyaim ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 33, Global[_$_2795[322]]()[1] / 2 + 41, 0, isForcesafepoint ? _0x2583[297] : _0x2583[297], isForcesafepoint ? [color[0], color[1], color[2], 255] : [219, 221, 255, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 32, Global[_$_2795[322]]()[1] / 2 + 42, 0, isForcesafepoint ? _0x2583[297] : _0x2583[297], isForcesafepoint ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 33, Global[_$_2795[322]]()[1] / 2 + 41, 0, isForcesafepoint ? _0x2583[297] : _0x2583[297], isForcesafepoint ? [color[0], color[1], color[2], 255] : [219, 221, 255, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 32, Global[_$_2795[322]]()[1] / 2 + 42, 0, isForcesafepoint ? _0x2583[297] : _0x2583[297], isForcesafepoint ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 28, Global[_$_2795[322]]()[1] / 2 + 51, 0, isHideshots ? _0x2583[298] : _0x2583[298], isHideshots ? [color[0], color[1], color[2], 255] : [0, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 27, Global[_$_2795[322]]()[1] / 2 + 50, 0, isHideshots ? _0x2583[298] : _0x2583[298], isHideshots ? [0, 0, 0, 100] : [0, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 28, Global[_$_2795[322]]()[1] / 2 + 51, 0, isDoubletap ? _0x2583[299] : _0x2583[299], isDoubletap ? [color[0], color[1], color[2], 255] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 27, Global[_$_2795[322]]()[1] / 2 + 50, 0, isDoubletap ? _0x2583[299] : _0x2583[299], isDoubletap ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 28, Global[_$_2795[322]]()[1] / 2 + 51, 0, isHideshots ? _0x2583[298] : _0x2583[298], isHideshots ? [color[0], color[1], color[2], 255] : [0, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 27, Global[_$_2795[322]]()[1] / 2 + 50, 0, isHideshots ? _0x2583[298] : _0x2583[298], isHideshots ? [0, 0, 0, 100] : [0, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 28, Global[_$_2795[322]]()[1] / 2 + 51, 0, isDoubletap ? _0x2583[299] : _0x2583[299], isDoubletap ? [color[0], color[1], color[2], 255] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 27, Global[_$_2795[322]]()[1] / 2 + 50, 0, isDoubletap ? _0x2583[299] : _0x2583[299], isDoubletap ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 24, Global[_$_2795[322]]()[1] / 2 + 59, 0, isoverride ? _0x2583[300] : _0x2583[300], isoverride ? [color[0], color[1], color[2], 255] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 23, Global[_$_2795[322]]()[1] / 2 + 60, 0, isoverride ? _0x2583[300] : _0x2583[300], isoverride ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 24, Global[_$_2795[322]]()[1] / 2 + 59, 0, isoverride ? _0x2583[300] : _0x2583[300], isoverride ? [color[0], color[1], color[2], 255] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 23, Global[_$_2795[322]]()[1] / 2 + 60, 0, isoverride ? _0x2583[300] : _0x2583[300], isoverride ? [0, 0, 0, 100] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 28, Global[_$_2795[322]]()[1] / 2 + 68, 0, isfreestand ? _0x2583[301] : _0x2583[301], isfreestand ? [color[0], color[1], color[2], 255] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 27, Global[_$_2795[322]]()[1] / 2 + 69, 0, isfreestand ? _0x2583[301] : _0x2583[301], isfreestand ? [0, 0, 0, 110] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 28, Global[_$_2795[322]]()[1] / 2 + 68, 0, isfreestand ? _0x2583[301] : _0x2583[301], isfreestand ? [color[0], color[1], color[2], 255] : [255, 0, 0, 0], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 27, Global[_$_2795[322]]()[1] / 2 + 69, 0, isfreestand ? _0x2583[301] : _0x2583[301], isfreestand ? [0, 0, 0, 110] : [255, 0, 0, 0], H)
        }
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[302]);
const keybinds_x = UI[_$_2795[368]](_0x2583[303], 0, Global[_$_2795[322]]()[0]);
const keybinds_y = UI[_$_2795[368]](_0x2583[304], 0, Global[_$_2795[322]]()[1]);

function in_bounds(be, G, bt, cM, cN) {
    return (be[0] > G) && (be[1] > bt) && (be[0] < cM) && (be[1] < cN)
}

function xy() {
    UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[303], false);
    UI[_$_2795[91]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[304], false)
}
xy();
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68], [89, 119, 239, 255])
};

function mainhotkey() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[62])) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[68]);
        if (!World[_$_2795[568]]()) {
            return
        };
        var H = Render[_$_2795[390]](_0x2583[305], 8, 100);
        const I = Render[_$_2795[390]](_0x2583[127], 10, 10);
        const G = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[306]),
            bt = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[307]);
        var H = Render[_$_2795[390]](_0x2583[257], 7, 100);
        var cB = [];
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[141])) {
            cB[_0x2583[130]](_0x2583[308])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[143])) {
            cB[_0x2583[130]](_0x2583[309])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[146])) {
            cB[_0x2583[130]](_0x2583[310])
        };
        if (UI[_$_2795[323]](_0x2583[139], _0x2583[145], _0x2583[148])) {
            cB[_0x2583[130]](_0x2583[311])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81])) {
            cB[_0x2583[130]](_0x2583[312])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[82])) {
            cB[_0x2583[130]](_0x2583[313])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[86])) {
            cB[_0x2583[130]](_0x2583[314])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83])) {
            cB[_0x2583[130]](_0x2583[315])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84])) {
            cB[_0x2583[130]](_0x2583[316])
        };
        if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[85])) {
            cB[_0x2583[130]](_0x2583[317])
        };
        if (UI[_$_2795[323]](_0x2583[21], _0x2583[155], _0x2583[156])) {
            cB[_0x2583[130]](_0x2583[157])
        };
        const G = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[303]),
            bt = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[304]);
        if (cB[_0x2583[93]] > 0) {
            Render[_$_2795[555]](G, bt + 4, 120, 1, [17, 17, 17, 255]);
            Render[_$_2795[555]](G, bt + 19, 120, 1, [17, 17, 17, 255]);
            Render[_$_2795[555]](G, bt + 5, 120, 14, [17, 17, 17, 100]);
            Render[_$_2795[346]](G + 60 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 2, bt + 8, 0, _0x2583[319], [0, 0, 0, 180], H);
            Render[_$_2795[346]](G + 15 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 2, bt + 10, 0, _0x2583[196], [17, 17, 17, 255], H);
            Render[_$_2795[346]](G + 134 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 2, bt + 10, 0, _0x2583[196], [17, 17, 17, 255], H);
            Render[_$_2795[346]](G + 15 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 2, bt + 3, 0, _0x2583[196], [17, 17, 17, 255], H);
            Render[_$_2795[346]](G + 134 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 2, bt + 3, 0, _0x2583[196], [17, 17, 17, 255], H);
            Render[_$_2795[346]](G + 60 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 1, bt + 7, 0, _0x2583[319], [255, 255, 255, 255], H);
            Render[_$_2795[555]](G, bt + 23, 100, 18 * cB[_0x2583[93]], [17, 17, 17, 0]);
            for (i = 0; i < cB[_0x2583[93]]; i++) {
                Render[_$_2795[346]](G + 25 - (Render[_$_2795[399]](cB[i], H)[0] / 2), bt + 22 + 13 * i, 0, cB[i], [0, 0, 0, 180], H);
                Render[_$_2795[346]](G + 39 - (Render[_$_2795[399]](_0x2583[318], H)[0] / 2) + 6, bt + 6, 0, _0x2583[158], [color[0], color[1], color[2], 255], I);
                Render[_$_2795[346]](G + 24 - (Render[_$_2795[399]](cB[i], H)[0] / 2), bt + 22 + 13 * i, 0, cB[i], [255, 255, 255, 255], H)
            }
        };
        if (Global[_$_2795[566]](1) && UI[_$_2795[571]]()) {
            const cW = Global[_$_2795[577]]();
            if (in_bounds(cW, G, bt, G + 200, bt + 30)) {
                UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[303], cW[0] - 100);
                UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[304], cW[1] - 20)
            }
        }
    }
}
Global[_$_2795[402]](_0x2583[90], _0x2583[320]);

function SuperDoubleTap() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[24])) {
        Exploit[_$_2795[587]](0);
        Exploit[_$_2795[588]](16)
    }
}
Cheat[_$_2795[402]](_0x2583[321], _0x2583[321]);
var _0x2d2d = [_0x2583[322], _0x2583[323], _0x2583[22], _0x2583[89], _0x2583[88], _0x2583[130], _0x2583[324], _0x2583[247], _0x2583[325], _0x2583[139], _0x2583[246], _0x2583[249], _0x2583[131], _0x2583[326], _0x2583[327], _0x2583[21], _0x2583[283], _0x2583[132], _0x2583[328], _0x2583[329], _0x2583[250], _0x2583[145], _0x2583[254], _0x2583[330], _0x2583[331], _0x2583[332], _0x2583[155], _0x2583[248], _0x2583[255], _0x2583[333], _0x2583[334], _0x2583[184], _0x2583[335], _0x2583[336], _0x2583[337], _0x2583[338], _0x2583[339], _0x2583[340], _0x2583[341], _0x2583[342], _0x2583[343], _0x2583[344], _0x2583[345], _0x2583[346], _0x2583[347], _0x2583[348], _0x2583[349], _0x2583[350], _0x2583[351], _0x2583[352], _0x2583[353], _0x2583[354], _0x2583[355], _0x2583[356], _0x2583[357], _0x2583[358], _0x2583[359], _0x2583[360], _0x2583[135], _0x2583[141], _0x2583[361], _0x2583[362], _0x2583[363], _0x2583[364], _0x2583[365], _0x2583[366], _0x2583[367], _0x2583[368], _0x2583[121], _0x2583[369]];
var _0x24ed = function (b, c) {
    b = b - 0x0;
    var e = _0x2d2d[b];
    return e
};
var _0x3a0e6d = _0x24ed,
    screen_size = Global[_0x3a0e6d(_0x2583[370])](),
    protectnames = new Array(),
    drawLeft = 0x0,
    drawRight = 0x0,
    prefer_safe_backup = ![];
protectnames[_0x2583[130]](Cheat[_$_2795[327]]());
if (protectnames[_0x3a0e6d(_0x2583[371])](Cheat[_0x2583[327]]()) !== -0x1) {
    function Safe_Head() {
        var dI = _0x3a0e6d;
        localplayer_index = Entity[_0x2583[372]](), protectnames[_0x2583[326]](Cheat[dI(_0x2583[373])]()) !== -0x1 && (UI[_0x2583[325]](_0x2583[22], _0x2583[88], dI(_0x2583[374]), _0x2583[375]) && UI[_0x2583[323]](dI(_0x2583[376]), _0x2583[128], _0x2583[129]) ? (UI[_0x2583[342]](_0x2583[21], _0x2583[131], dI(_0x2583[377]), 0xa), UI[_0x2583[342]](_0x2583[21], _0x2583[131], dI(_0x2583[378]), 0x0), AntiAim[_0x2583[329]](0x1), AntiAim[_0x2583[379]](0x0), AntiAim[dI(_0x2583[380])](-0x1e)) : (UI[_0x2583[342]](dI(_0x2583[376]), dI(_0x2583[381]), _0x2583[132], jitter_cache), AntiAim[dI(_0x2583[382])](0x0)))
    }
};
var restore_values_ds = ![];
var restore_values = ![];
const draw_triangle = function (f, g, h, j, k, l) {
    var m = _0x3a0e6d;
    for (var n = 0x0; n < h; n++) {
        l === 0x1 && Render[m(_0x2583[383])](f + n + 0x1 - h / 0x2, g - n / k + 0x1, f + n + 0x1 - h / 0x2, g + n / k + 0x1, j), l === 0x2 && Render[_0x2583[333]](f - n - 0x1 + h / 0x2, g - n / k + 0x1, f - n - 0x1 + h / 0x2, g + n / k + 0x1, j)
    }
};

function adjust_angle(P) {
    if (P < 0x0) {
        P = 0x5a + P * -0x1
    } else {
        P > 0x0 && (P = 0x5a - P)
    };
    return P
}
Render[_0x2583[384]] = function (o, p, q, r, s, u, v) {
    for (var w = s; w < s + u; w++) {
        const z = w * Math[_0x2583[103]] / 0xb4;
        Render[_0x2583[333]](o + Math[_0x2583[104]](z) * q, p + Math[_0x2583[105]](z) * q, o + Math[_0x2583[104]](z) * r, p + Math[_0x2583[105]](z) * r, v)
    }
};

function drawString() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[44])) {
        var bK = _0x3a0e6d,
            bL = Local[_0x2583[385]]()[0x1] - 0xb4,
            bM = adjust_angle(Local[_0x2583[386]]() - bL),
            bN = adjust_angle(Local[bK(_0x2583[387])]() - bL),
            bO = Exploit[_0x2583[388]](),
            bP = Local[_0x2583[386]](),
            bQ = Local[_0x2583[336]](),
            bR = Math[_0x2583[335]](Math[_0x2583[334]](bP - bQ) / 0x2, 0x3a)[_0x2583[184]](0x1),
            bS = Math[_0x2583[335]](Math[_0x2583[98]](1.7 * Math[_0x2583[334]](bR)), 0x64),
            bT = Math[bK(_0x2583[389])](bR);
        const bU = bR / 0x3c;
        font = Render[_0x2583[390]](_0x2583[164], 0x7, 0x1f4), weapon_name = Entity[_0x2583[392]](Entity[_0x2583[391]](Entity[_0x2583[372]]())), selectedcp = [255, 255, 255, 0], selected_red = selectedcp[0x0], selected_green = selectedcp[0x1], selected_blue = selectedcp[0x2], selected_alpha = selectedcp[0x3];
        const bV = Render[_0x2583[322]]()[0x0],
            bW = Render[_0x2583[322]]()[0x1],
            bX = Math[_0x2583[105]](Math[bK(_0x2583[389])](-Math[_0x2583[103]] + Globals[_0x2583[393]]() * (0x1 / 0.75) % (Math[_0x2583[103]] * 0x2))) * 0xff;
        isHideshots = isInverter = UI[bK(_0x2583[395])](_0x2583[21], bK(_0x2583[394]), _0x2583[156]), localplayer_index = Entity[_0x2583[372]](), localplayer_alive = Entity[_0x2583[396]](localplayer_index), localplayer_weapon = Entity[_0x2583[391]](localplayer_index), localplayer_classname = Entity[bK(_0x2583[397])](localplayer_weapon);
        if (protectnames[bK(_0x2583[371])](Cheat[bK(_0x2583[373])]()) !== -0x1) {
            if (localplayer_alive == !![]) {
                Render[_0x2583[384]](screen_size[0x0] / 0x2, screen_size[0x1] / 0x2, 0x11, 0x15, bM, 0x32, [0xa, 0xa, 0xa, 0x46]), Render[_0x2583[384]](screen_size[0x0] / 0x2 - 0x1, screen_size[0x1] / 0x2, 0x11, 0x15, bM, 0x32, [0xc0 - bT * 0x47 / 0x3c, 0x20 + bT * 0x92 / 0x3c, 0x1c, 0xc8]);
                var bY = bR[_0x2583[398]](),
                    bZ = Render[_0x2583[399]](bY, font)[0x0] + 0x8;
                Render[_0x2583[384]](screen_size[0x0] / 0x2, screen_size[0x1] / 0x2, 0x7, 0xb, 0x0, 0x168, [0xa, 0xa, 0xa, 0x46]);
                if (isInverter == 0x1) {
                    Render[_0x2583[384]](screen_size[0x0] / 0x2, screen_size[0x1] / 0x2, 0x8, 0xb, -0x5a, 0xb4, [0xc0 - bT * 0x47 / 0x3c, 0x20 + bT * 0x92 / 0x3c, 0x1c, 0xc8])
                } else {
                    isInverter == 0x0 && Render[_0x2583[384]](screen_size[0x0] / 0x2, screen_size[0x1] / 0x2, 0x8, 0xb, 0x5a, 0xb4, [0xc0 - bT * 0x47 / 0x3c, 0x20 + bT * 0x92 / 0x3c, 0x1c, 0xc8])
                };
                draw_triangle(bV / 0x2 - 0x4b, bW / 0x2, 0x14, _0x5bcba4, 0x2, 0x1), draw_triangle(bV / 0x2 + 0x4b, bW / 0x2, 0x14, _0x5bcba4, 0x2, 0x2), correctLBYMode(), drawLeft == 0x1 && draw_triangle(bV / 0x2 - 0x4b, bW / 0x2, 0x14, [selected_red, selected_green, selected_blue, bX], 0x2, 0x1), drawRight == 0x1 && draw_triangle(bV / 0x2 + 0x4b, bW / 0x2, 0x14, [selected_red, selected_green, selected_blue, bX], 0x2, 0x2)
            }
        }
    }
}

function circler() {
    var bp = _0x3a0e6d;
    protectnames[_0x2583[326]](Cheat[_0x2583[327]]()) !== -0x1 && (UI[bp(_0x2583[400])], Global[_0x2583[402]](_0x2583[90], _0x2583[401]), Cheat[_0x2583[402]](bp(_0x2583[403]), bp(_0x2583[404])))
}
protectnames[_0x3a0e6d(_0x2583[371])](Cheat[_0x2583[327]]()) !== -0x1 && circler();
var screen_size = Global[_$_2795[322]]();
LPxx = [(screen_size[0] / 2) - 45, (screen_size[1] / 2) + 12];
LPyy = [(screen_size[0] / 2) - 45, (screen_size[1] / 2) - 12];
LPzz = [(screen_size[0] / 2) - 70, (screen_size[1] / 2)];
RPxx = [(screen_size[0] / 2) + 45, (screen_size[1] / 2) + 12];
RPyy = [(screen_size[0] / 2) + 45, (screen_size[1] / 2) - 12];
RPzz = [(screen_size[0] / 2) + 70, (screen_size[1] / 2)];

function arrowffo() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[45])) {
        localplayer_index = Entity[_$_2795[372]]();
        localplayer_alive = Entity[_$_2795[396]](localplayer_index);
        if (localplayer_alive == true) {
            Render[_$_2795[558]]([LPxx, LPzz, LPyy], [0, 0, 0, 60]);
            Render[_$_2795[558]]([RPyy, RPzz, RPxx], [0, 0, 0, 60])
        }
    }
}

function Mainffa() {
    Global[_$_2795[402]](_0x2583[90], _0x2583[405])
}
Mainffa();
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75], [89, 119, 239, 255])
};

function switchind() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[45])) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[75]);
        var H = Render[_$_2795[390]](_0x2583[257], 17, 400);
        var Q = Entity[_$_2795[372]]();
        if (Entity[_$_2795[396]](Q)) {
            var dL = UI[_$_2795[323]](_0x2583[21], _0x2583[155], _0x2583[156]);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 + 40, Global[_$_2795[322]]()[1] / 2 - 15, 0, _0x2583[196], [color[0], color[1], color[2], 255], H);
            Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 45, Global[_$_2795[322]]()[1] / 2 - 15, 0, _0x2583[196], [0, 0, 0, 255], H);
            if (dL) {
                Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 + 40, Global[_$_2795[322]]()[1] / 2 - 15, 0, _0x2583[196], [0, 0, 0, 255], H);
                Render[_$_2795[346]](Global[_$_2795[322]]()[0] / 2 - 45, Global[_$_2795[322]]()[1] / 2 - 15, 0, _0x2583[196], [color[0], color[1], color[2], 255], H)
            }
        }
    }
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[406]);
var is_awp;

function draw_fb() {
    x = UI[_$_2795[325]](_0x2583[89], _0x2583[407]);
    y = UI[_$_2795[325]](_0x2583[89], _0x2583[408]);
    font = Render[_$_2795[390]](_0x2583[257], 20, 800);
    if (UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[26])) {
        g_Local = Entity[_$_2795[372]]();
        g_Local_weapon = Entity[_$_2795[391]](g_Local);
        weapon_name = Entity[_$_2795[392]](g_Local_weapon);
        g_Local_classname = Entity[_$_2795[340]](g_Local_weapon);
        if (g_Local_classname == _0x2583[360]) {
            force_baim = 1
        }
    };
    Render[_$_2795[346]](x + 5, y + 20, 0, force_baim == 2 ? _0x2583[409] : _0x2583[410], force_baim > 0 ? [0, 255, 0, 0] : [255, 0, 0, 0], font);
    if (force_baim > 0 && !UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[411])) {
        UI[_$_2795[582]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[411])
    };
    if (!force_baim > 0 && UI[_$_2795[323]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[411])) {
        UI[_$_2795[582]](_0x2583[139], _0x2583[135], _0x2583[140], _0x2583[411])
    };
    force_baim = 0
}

function Mainnnnnnnnnnnnnnnnnnn() {
    Global[_$_2795[402]](_0x2583[90], _0x2583[412])
}
Mainnnnnnnnnnnnnnnnnnn();
var sayWhat = [_0x2583[413], _0x2583[414], _0x2583[415], _0x2583[416]];

function getRandomArrayElement(cj) {
    var ck = 0;
    var cl = (cj[_0x2583[93]] - 1);
    var cm = Math[_0x2583[97]](Math[_0x2583[417]]() * (cl - ck)) + ck;
    return cj[cm]
}

function onPlayerDeath() {
    if (!UI[_$_2795[325]]((_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[64]))) {
        return
    };
    attacker = Event[_$_2795[561]](_0x2583[108]);
    attacker_index = Entity[_$_2795[562]](attacker);
    attacker_name = Entity[_$_2795[392]](attacker_index);
    attacker_me = Entity[_$_2795[598]](attacker_index);
    if (attacker_me) {
        Global[_$_2795[552]](_0x2583[418] + getRandomArrayElement(sayWhat))
    }
}
Global[_$_2795[402]](_0x2583[292], _0x2583[419]);
var lasttime = 0;

function clantag() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[65])) {
        var bq = UI[_$_2795[325]](_0x2583[89], _0x2583[65]);
        var br = UI[_$_2795[325]](_0x2583[89], _0x2583[65]);
        var time = parseInt((Globals[_$_2795[393]]() * br));
        if (time != lasttime) {
            if (bq == 0) {
                Local[_$_2795[599]](_0x2583[259])
            };
            if (bq == 1) {
                switch ((time) % 30) {
                case 0:
                    Local[_$_2795[599]](_0x2583[420]);
                    break;
                case 1:
                    Local[_$_2795[599]](_0x2583[421]);
                    break;
                case 2:
                    Local[_$_2795[599]](_0x2583[422]);
                    break;
                case 3:
                    Local[_$_2795[599]](_0x2583[423]);
                    break;
                case 4:
                    Local[_$_2795[599]](_0x2583[424]);
                    break;
                case 5:
                    Local[_$_2795[599]](_0x2583[425]);
                    break;
                case 6:
                    Local[_$_2795[599]](_0x2583[426]);
                    break;
                case 7:
                    Local[_$_2795[599]](_0x2583[427]);
                    break;
                case 8:
                    Local[_$_2795[599]](_0x2583[428]);
                    break;
                case 9:
                    Local[_$_2795[599]](_0x2583[429]);
                    break;
                case 10:
                    Local[_$_2795[599]](_0x2583[430]);
                    break;
                case 11:
                    Local[_$_2795[599]](_0x2583[431]);
                    break;
                case 12:
                    Local[_$_2795[599]](_0x2583[432]);
                    break;
                case 13:
                    Local[_$_2795[599]](_0x2583[433]);
                    break;
                case 14:
                    Local[_$_2795[599]](_0x2583[434]);
                    break;
                case 15:
                    Local[_$_2795[599]](_0x2583[435]);
                    break;
                case 16:
                    Local[_$_2795[599]](_0x2583[436]);
                    break;
                case 17:
                    Local[_$_2795[599]](_0x2583[437]);
                    break;
                case 18:
                    Local[_$_2795[599]](_0x2583[438]);
                    break;
                case 19:
                    Local[_$_2795[599]](_0x2583[433]);
                    break;
                case 20:
                    Local[_$_2795[599]](_0x2583[432]);
                    break;
                case 21:
                    Local[_$_2795[599]](_0x2583[431]);
                    break;
                case 22:
                    Local[_$_2795[599]](_0x2583[430]);
                    break;
                case 23:
                    Local[_$_2795[599]](_0x2583[429]);
                    break;
                case 24:
                    Local[_$_2795[599]](_0x2583[428]);
                    break;
                case 25:
                    Local[_$_2795[599]](_0x2583[428]);
                    break;
                case 26:
                    Local[_$_2795[599]](_0x2583[429]);
                    break;
                case 27:
                    Local[_$_2795[599]](_0x2583[430]);
                    break;
                case 28:
                    Local[_$_2795[599]](_0x2583[431]);
                    break;
                case 29:
                    Local[_$_2795[599]](_0x2583[424]);
                    break;
                case 13:
                    Local[_$_2795[599]](_0x2583[433]);
                    break;
                case 14:
                    Local[_$_2795[599]](_0x2583[434]);
                    break;
                case 15:
                    Local[_$_2795[599]](_0x2583[435]);
                    break;
                case 16:
                    Local[_$_2795[599]](_0x2583[436]);
                    break
                }
            }
        }
    };
    lasttime = time
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[65]);
var old_tick_count = 0;

function stackleg() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[52]) && (Globals[_$_2795[359]]() - old_tick_count) > 1) {
        if (UI[_$_2795[325]](_0x2583[22], _0x2583[135], _0x2583[136], _0x2583[439])) {
            UI[_$_2795[342]](_0x2583[22], _0x2583[135], _0x2583[136], _0x2583[439], 0)
        } else {
            UI[_$_2795[342]](_0x2583[22], _0x2583[135], _0x2583[136], _0x2583[439], 1)
        };
        old_tick_count = Globals[_$_2795[359]]()
    }
}
Cheat[_$_2795[402]](_0x2583[90], _0x2583[440]);
hitboxes = [_0x2583[441], _0x2583[442], _0x2583[443], _0x2583[444], _0x2583[445], _0x2583[446], _0x2583[447], _0x2583[448], _0x2583[449]];
var scriptitems = (_0x2583[22], _0x2583[88], _0x2583[89]);
var shots = 0;
var predicthc = 0;
var safety = 0;
var hitboxName = _0x2583[259];
var choked = 0;
var exploit = 0;
var logs = [];
var logsct = [];
var logsalpha = [];

function getHitboxName(cf) {
    switch (cf) {
    case 0:
        hitboxName = _0x2583[442];
        break;
    case 1:
        hitboxName = _0x2583[442];
        break;
    case 2:
        hitboxName = _0x2583[444];
        break;
    case 3:
        hitboxName = _0x2583[444];
        break;
    case 4:
        hitboxName = _0x2583[444];
        break;
    case 5:
        hitboxName = _0x2583[443];
        break;
    case 6:
        hitboxName = _0x2583[443];
        break;
    case 7:
        hitboxName = _0x2583[447];
        break;
    case 8:
        hitboxName = _0x2583[448];
        break;
    case 9:
        hitboxName = _0x2583[447];
        break;
    case 10:
        hitboxName = _0x2583[448];
        break;
    case 11:
        hitboxName = _0x2583[447];
        break;
    case 12:
        hitboxName = _0x2583[448];
        break;
    case 13:
        hitboxName = _0x2583[445];
        break;
    case 14:
        hitboxName = _0x2583[446];
        break;
    case 15:
        hitboxName = _0x2583[445];
        break;
    case 16:
        hitboxName = _0x2583[445];
        break;
    case 17:
        hitboxName = _0x2583[446];
        break;
    case 18:
        hitboxName = _0x2583[446];
        break;
    default:
        hitboxName = _0x2583[450]
    };
    return hitboxName
}

function HitgroupName(cf) {
    return hitboxes[cf] || _0x2583[450]
}
var target = -1;
var shots_fired = 0;
var hits = 0;
var lastUpdate = 0;
var logged = false;

function ragebot_fire() {
    predicthc = Event[_$_2795[561]](_0x2583[451]);
    safety = Event[_$_2795[561]](_0x2583[452]);
    hitboxName = getHitboxName(Event[_$_2795[561]](_0x2583[453]));
    exploit = (Event[_$_2795[561]](_0x2583[454]) + 1)[_$_2795[398]]();
    target = Event[_$_2795[561]](_0x2583[286]);
    shots_fired++;
    logged = false;
    lastUpdate = Globals[_$_2795[393]]()
}

function hitlog() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[57])) {
        var cv = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]));
        var cz = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[108]));
        if (cz == Entity[_$_2795[372]]() && cv == target) {
            hits++
        };
        var cw = _0x2583[455];
        me = Entity[_$_2795[372]]();
        hitbox = Event[_$_2795[561]](_0x2583[456]);
        target_damage = Event[_$_2795[561]](_0x2583[110]);
        target_health = Event[_$_2795[561]](_0x2583[457]);
        victim = Event[_$_2795[561]](_0x2583[109]);
        cz = Event[_$_2795[561]](_0x2583[108]);
        weapon = Event[_$_2795[567]](_0x2583[458]);
        victimIndex = Entity[_$_2795[562]](victim);
        attackerIndex = Entity[_$_2795[562]](cz);
        name = Entity[_$_2795[392]](victimIndex);
        var cx = Globals[_$_2795[359]]() % 17;
        var cy = _0x2583[259];
        if (exploit == 2) {
            cy += _0x2583[459]
        };
        cy += _0x2583[460];
        if (hitbox == 1) {
            cy += _0x2583[461]
        };
        if (safety == 1) {
            safety = _0x2583[462]
        } else {
            safety = _0x2583[463]
        };
        if (weapon == _0x2583[464]) {
            cw = _0x2583[465]
        } else {
            if (weapon == _0x2583[466]) {
                cw = _0x2583[467]
            } else {
                if (weapon == _0x2583[468]) {
                    cw = _0x2583[469]
                }
            }
        };
        if (me == attackerIndex && me != victimIndex) {
            Cheat[_$_2795[600]]([219, 221, 255, 255], _0x2583[470]);
            if (cw == _0x2583[455]) {
                Cheat[_$_2795[592]](_0x2583[471] + shots[_$_2795[398]]() + _0x2583[472] + cw + name + _0x2583[473] + HitgroupName(hitbox) + _0x2583[474] + target_damage[_$_2795[398]]() + _0x2583[475] + target_health[_$_2795[398]]() + _0x2583[476] + hitboxName + _0x2583[477] + predicthc[_$_2795[398]]() + _0x2583[478] + safety + _0x2583[475] + cy + _0x2583[479] + cx + _0x2583[174] + exploit + _0x2583[480]);
                logs[_0x2583[130]](_0x2583[471] + shots[_$_2795[398]]() + _0x2583[472] + cw + name + _0x2583[473] + HitgroupName(hitbox) + _0x2583[474] + target_damage[_$_2795[398]]() + _0x2583[475] + target_health[_$_2795[398]]() + _0x2583[476] + hitboxName + _0x2583[477] + predicthc[_$_2795[398]]() + _0x2583[478] + safety + _0x2583[475] + cy + _0x2583[479] + cx + _0x2583[174] + exploit + _0x2583[481])
            } else {
                Cheat[_$_2795[592]](_0x2583[471] + shots[_$_2795[398]]() + _0x2583[472] + cw + name + _0x2583[473] + HitgroupName(hitbox) + _0x2583[474] + target_damage[_$_2795[398]]() + _0x2583[475] + target_health[_$_2795[398]]() + _0x2583[482]);
                logs[_0x2583[130]](_0x2583[471] + shots[_$_2795[398]]() + _0x2583[472] + cw + name + _0x2583[473] + HitgroupName(hitbox) + _0x2583[474] + target_damage[_$_2795[398]]() + _0x2583[475] + target_health[_$_2795[398]]() + _0x2583[483])
            };
            logsct[_0x2583[130]](Globals[_$_2795[393]]());
            logsalpha[_0x2583[130]](255)
        };
        if (shots == 99) {
            shots = 0
        } else {
            shots++
        }
    }
}

function removelogs() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[57])) {
        if (logs[_0x2583[93]] > 6) {
            logs[_0x2583[274]]();
            logsct[_0x2583[274]]();
            logsalpha[_0x2583[274]]()
        };
        if (logsct[0] + 2.5 < Globals[_$_2795[393]]()) {
            logsalpha[0] -= Globals[_$_2795[574]]() * 600;
            if (logsalpha[0] < 0) {
                logs[_0x2583[274]]();
                logsct[_0x2583[274]]();
                logsalpha[_0x2583[274]]()
            }
        }
    }
}

function item_alma() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[58])) {
        Cheat[_$_2795[600]]([219, 221, 255, 255], _0x2583[470]);
        Cheat[_$_2795[592]](Entity[_$_2795[392]](Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]))) + _0x2583[484] + Event[_$_2795[567]](_0x2583[458]) + _0x2583[264]);
        logs[_0x2583[130]](Entity[_$_2795[392]](Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]))) + _0x2583[484] + Event[_$_2795[567]](_0x2583[458]) + _0x2583[259]);
        logsct[_0x2583[130]](Globals[_$_2795[393]]());
        logsalpha[_0x2583[130]](255)
    }
}
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79], [89, 119, 239, 255])
};

function onmis() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[57])) {
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[79]);
        if (!World[_$_2795[568]]()) {
            return
        };
        var H = Render[_$_2795[390]](_0x2583[164], 7, 0);
        for (i = 0; i < logs[_0x2583[93]]; i++) {
            Render[_$_2795[346]](4, 4 + 13 * i, 0, logs[i], [0, 0, 0, logsalpha[i]], H);
            Render[_$_2795[346]](3, 3 + 13 * i, 0, logs[i], [color[0], color[1], color[2], logsalpha[i]], H)
        };
        if (shots_fired > hits && (Globals[_$_2795[393]]() - lastUpdate > 0.33)) {
            if (Globals[_$_2795[393]]() - lastUpdate > 1) {
                shots_fired = 0;
                hits = 0
            };
            if (!logged) {
                var cx = Globals[_$_2795[359]]() % 16;
                logged = true;
                var dA = _0x2583[462];
                var dB = _0x2583[449];
                if (safety == 0) {
                    dA = _0x2583[463]
                };
                if (Entity[_$_2795[396]](target) == false) {
                    dB = _0x2583[485]
                } else {
                    if (Entity[_$_2795[396]](Entity[_$_2795[372]]()) == false) {
                        dB = _0x2583[486]
                    } else {
                        if (safety == true && predicthc < 76) {
                            dB = _0x2583[487]
                        } else {
                            if (safety == true && predicthc > 76) {
                                dB = _0x2583[488]
                            }
                        }
                    }
                };
                var cy = _0x2583[259];
                if (exploit == 2) {
                    cy += _0x2583[459]
                };
                cy += _0x2583[460];
                Cheat[_$_2795[600]]([219, 221, 255, 255], _0x2583[470]);
                Cheat[_$_2795[592]](_0x2583[471] + shots[_$_2795[398]]() + _0x2583[472] + _0x2583[489] + Entity[_$_2795[392]](target) + _0x2583[473] + hitboxName + _0x2583[477] + predicthc[_$_2795[398]]() + _0x2583[490] + dB + _0x2583[491] + dA + _0x2583[475] + cy + _0x2583[479] + cx + _0x2583[174] + exploit + _0x2583[480]);
                logs[_0x2583[130]](_0x2583[471] + shots[_$_2795[398]]() + _0x2583[472] + _0x2583[489] + Entity[_$_2795[392]](target) + _0x2583[473] + hitboxName + _0x2583[477] + predicthc[_$_2795[398]]() + _0x2583[490] + dB + _0x2583[491] + dA + _0x2583[475] + cy + _0x2583[479] + cx + _0x2583[174] + exploit + _0x2583[481]);
                logsct[_0x2583[130]](Globals[_$_2795[393]]());
                logsalpha[_0x2583[130]](255);
                if (shots == 99) {
                    shots = 0
                } else {
                    shots++
                }
            }
        }
    }
}

function hitloh() {
    Global[_$_2795[402]](_0x2583[288], _0x2583[288]);
    Global[_$_2795[402]](_0x2583[492], _0x2583[493]);
    Global[_$_2795[402]](_0x2583[115], _0x2583[57]);
    Global[_$_2795[402]](_0x2583[90], _0x2583[494]);
    Global[_$_2795[402]](_0x2583[90], _0x2583[495])
}
hitloh();

function thd() {
    Dist = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[80]);
    UI[_$_2795[342]](_0x2583[209], _0x2583[210], _0x2583[212], Dist)
}
Cheat[_$_2795[402]](_0x2583[192], _0x2583[496]);
var jitter_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[132]);
var yaw_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[283]);

function baseyaw() {
    localplayer_index = Entity[_$_2795[372]]();
    if (UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36]) && UI[_$_2795[323]](_0x2583[21], _0x2583[128], _0x2583[129])) {
        AntiAim[_$_2795[329]](1);
        AntiAim[_$_2795[379]](0);
        AntiAim[_$_2795[328]](-30)
    } else {
        AntiAim[_$_2795[329]](0)
    }
}

function Mainhead() {
    Cheat[_$_2795[402]](_0x2583[121], _0x2583[497])
}
Mainhead();
var oldHitChance = UI[_$_2795[325]](_0x2583[139], _0x2583[247], _0x2583[498], _0x2583[499]);
var oldAccBoost = UI[_$_2795[325]](_0x2583[139], _0x2583[247], _0x2583[498], _0x2583[500]);
var isInAir = function () {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[27])) {
        if (Global[_$_2795[566]]((0x20))) {
            return true
        } else {
            return false
        }
    }
};

function lowhcinair() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[27])) {
        if (isInAir()) {
            var cU = 35;
            var cV = 50;
            UI[_$_2795[342]](_0x2583[139], _0x2583[247], _0x2583[498], _0x2583[499], cU);
            UI[_$_2795[342]](_0x2583[139], _0x2583[247], _0x2583[498], _0x2583[500], cV)
        } else {
            UI[_$_2795[342]](_0x2583[139], _0x2583[247], _0x2583[498], _0x2583[499], oldHitChance);
            UI[_$_2795[342]](_0x2583[139], _0x2583[247], _0x2583[498], _0x2583[500], oldAccBoost)
        }
    }
}
Global[_$_2795[402]](_0x2583[121], _0x2583[501]);
var color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67]);
if (color[3] == 0) {
    UI[_$_2795[556]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67], [89, 119, 239, 255])
};
const watermark = function () {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[66])) {
        const I = Render[_$_2795[390]](_0x2583[127], 9, 10);
        const M = Cheat[_$_2795[327]]();
        const A = World[_$_2795[568]]();
        const J = Math[_0x2583[98]](Local[_$_2795[572]]() * 1000 - 16);
        const B = new Date();
        const K = B[_0x2583[170]](),
            C = B[_0x2583[171]](),
            D = B[_0x2583[172]]();
        const time = (K < 10 ? _0x2583[173] + K : K) + _0x2583[174] + (C < 10 ? _0x2583[173] + C : C) + _0x2583[259];
        if (J < 1) {
            J = 0
        };
        if (!A != _0x2583[259]) {
            A = _0x2583[502]
        };
        color = UI[_$_2795[338]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[67]);
        const H = Render[_$_2795[390]](_0x2583[164], 7, 400);
        const E = Render[_$_2795[390]](_0x2583[503], 11, 1000);
        const L = _0x2583[504] + M + _0x2583[505] + Globals[_$_2795[573]]()[_$_2795[398]]() + _0x2583[506] + time + _0x2583[259];
        const F = Render[_$_2795[399]](L, H)[0] + 90;
        const G = Global[_$_2795[322]]()[0];
        G = G - F - 10;
        Render[_$_2795[555]](G, 9, F - 2, 22, [11, 11, 20, 30]);
        Render[_$_2795[555]](G - 1, 10, F, 22, [11, 11, 20, 30]);
        Render[_$_2795[346]](G + 83, 14, 0, L, [255, 255, 255, 255], H);
        Render[_$_2795[346]](G + 5, 13, 0, _0x2583[507], [color[0], color[1], color[2], 255], E);
        Render[_$_2795[346]](G + 6, 12, 0, _0x2583[507], [255, 255, 255, 255], E);
        Render[_$_2795[346]](G + 118, 15, 0, _0x2583[237], [255, 255, 255, 255], I);
        Render[_$_2795[346]](G + 84, 15, 0, _0x2583[508], [255, 255, 255, 255], H)
    }
};
Cheat[_$_2795[402]](_0x2583[90], _0x2583[66]);
var run = false;
var estimate = 0;
var firstBuy = 0;
var alias = [
    [_0x2583[256]],
    [_0x2583[509]],
    [_0x2583[510], _0x2583[254]]
];

function roundEnded() {
    run = true;
    estimate = Globals[_$_2795[393]]() + Convar[_$_2795[561]](_0x2583[511]);
    firstBuy = 0
}

function purchase(cf) {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[53])) {
        alias[cf][_0x2583[512]](function (cD) {
            Cheat[_$_2795[552]](_0x2583[53]), Cheat[_$_2795[552]](_0x2583[53]), Cheat[_$_2795[552]](_0x2583[53]), Cheat[_$_2795[552]](_0x2583[53]), Cheat[_$_2795[552]](_0x2583[53])
        });
        run = false
    }
}

function onDrawbuy() {
    run && Globals[_$_2795[393]]() + (Local[_$_2795[572]]() / 1000) >= estimate && purchase(UI[_0x2583[325]][_0x2583[513]](this, dropdown))
}

function purchased() {
    if (firstBuy == 0) {
        firstBuy = Globals[_$_2795[393]]() - estimate
    };
    if (!Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109])) || firstBuy == -1) {
        return
    };
    Cheat[_$_2795[592]](_0x2583[514] + firstBuy + _0x2583[515] + (Globals[_$_2795[393]]() - estimate) + _0x2583[516]);
    firstBuy = -1
}
var dropdown;
Cheat[_$_2795[402]](_0x2583[517], _0x2583[518]);
Cheat[_$_2795[402]](_0x2583[90], _0x2583[519]);
Cheat[_$_2795[402]](_0x2583[492], _0x2583[520]);
var tickcount = 0;
var flip = false;

function yawbase() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[35])) {
        var ei = 0;
        var ej = 5;
        if (tickcount >= ej && !flip) {
            flip = true;
            tickcount = 0
        };
        if (tickcount >= ei && flip) {
            flip = false;
            tickcount = 0
        };
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[283], Globals[_$_2795[359]]() % 2 ? 0 : 5);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[132], Globals[_$_2795[359]]() % 2 ? 0 : 4);
        tickcount++
    }
}

function startdly() {
    tickcount = 0
}
Cheat[_$_2795[402]](_0x2583[167], _0x2583[521]);
Cheat[_$_2795[402]](_0x2583[121], _0x2583[522]);
var pingspike_key = true;

function pingspike() {
    if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[84])) {
        if (pingspike_key) {
            pingspike_cache = UI[_$_2795[325]](_0x2583[152], _0x2583[135], _0x2583[523], _0x2583[524]);
            pingspike_key = false
        };
        UI[_$_2795[342]](_0x2583[152], _0x2583[135], _0x2583[523], _0x2583[524], 1)
    } else {
        if (!pingspike_key) {
            UI[_$_2795[342]](_0x2583[152], _0x2583[135], _0x2583[523], _0x2583[524], pingspike_cache);
            pingspike = true
        }
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[84]);;;;;
var original_aa = true;

function flick_legit_aa() {
    if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[81])) {
        if (original_aa) {
            restrictions_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[277], _0x2583[278], _0x2583[279]);
            hiderealangle_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[155], _0x2583[280]);
            at_targets_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[281]);
            autodirection_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[282]);
            yaw_offset_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[283]);
            jitter_offset_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[132]);
            pitch_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[128], _0x2583[284]);
            safe_base_aa_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36]);
            edge_yaw_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35]);
            flick_inverter_cache = UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38]);
            original_aa = false
        };
        UI[_$_2795[342]](_0x2583[22], _0x2583[277], _0x2583[278], _0x2583[279], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[155], _0x2583[280], true);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[281], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[282], 0);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[283], 180);
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[132], 10);
        UI[_$_2795[342]](_0x2583[21], _0x2583[128], _0x2583[284], 0);
        UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], 0);
        UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], 0);
        UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], 1)
    } else {
        if (!original_aa) {
            UI[_$_2795[342]](_0x2583[22], _0x2583[277], _0x2583[278], _0x2583[279], restrictions_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[155], _0x2583[280], hiderealangle_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[281], at_targets_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[282], autodirection_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[283], yaw_offset_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[132], jitter_offset_cache);
            UI[_$_2795[342]](_0x2583[21], _0x2583[128], _0x2583[284], pitch_cache);
            UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[36], safe_base_aa_cache);
            UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[35], edge_yaw_cache);
            UI[_$_2795[342]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[38], flick_inverter_cache);
            original_aa = true
        }
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[525]);;;;;
var freestand_key = true;

function freestand() {
    if (UI[_$_2795[323]](_0x2583[22], _0x2583[88], _0x2583[89], _0x2583[83])) {
        if (freestand_key) {
            auto_direction_cache = UI[_$_2795[325]](_0x2583[21], _0x2583[131], _0x2583[282]);
            freestand_key = false
        };
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[282], 1)
    } else {
        if (!freestand_key) {
            UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[282], auto_direction_cache);
            freestand_key = true
        }
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[83]);;;;;
var time, delay, shotsfired;

function EVENT_WEAPON_FIRES() {
    iShotsFired = Event[_$_2795[561]](_0x2583[109]);
    iShotsFired_index = Entity[_$_2795[562]](iShotsFired);
    if (Entity[_$_2795[372]]() == iShotsFired_index) {
        if (shotsfired == 0) {
            time = Globals[_$_2795[393]]();
            delay = time + 0.9
        }
    }
}

function HUD_REDRAWS() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[38])) {
        curtime = Globals[_$_2795[393]]();
        if (curtime <= delay) {
            shotsfired = 1;
            UI[_$_2795[582]](_0x2583[21], _0x2583[155], _0x2583[156])
        } else {
            UI[_$_2795[582]](_0x2583[21], _0x2583[155], _0x2583[156]);
            shotsfired = 0
        }
    }
}

function getValue(bG) {
    var ce = UI[_$_2795[325]](_0x2583[162], bG);
    return ce
}

function Mainnmm() {
    Global[_$_2795[402]](_0x2583[124], _0x2583[526]);
    Global[_$_2795[402]](_0x2583[90], _0x2583[527])
}
Mainnmm();

function dt() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[24])) {
        Exploit[_$_2795[587]](2);
        Exploit[_$_2795[588]](14)
    }
}
Cheat[_$_2795[402]](_0x2583[528], _0x2583[529]);

function getVal(cn) {
    return UI[_$_2795[325]](_0x2583[22], _0x2583[88], _0x2583[89], cn)
}

function motion() {
    if (UI[_$_2795[325]](_0x2583[89], _0x2583[40])) {
        if (!UI[_$_2795[323]](_0x2583[21], _0x2583[128], _0x2583[129])) {
            return
        };
        speed = 20;
        fSpeed = speed;
        bSpeed = speed;
        sSpeed = speed;
        if (getVal(_0x2583[530])) {
            fSpeed = getVal(_0x2583[531]);
            bSpeed = getVal(_0x2583[532]);
            sSpeed = getVal(_0x2583[533])
        };
        dir = [0, 0, 0];
        if (Input[_$_2795[566]](0x57)) {
            dir[0] += fSpeed
        };
        if (Input[_$_2795[566]](0x44)) {
            dir[1] += sSpeed
        };
        if (Input[_$_2795[566]](0x41)) {
            dir[1] -= sSpeed
        };
        if (Input[_$_2795[566]](0x53)) {
            dir[0] -= bSpeed
        };
        UserCMD[_$_2795[564]](dir)
    }
}
Cheat[_$_2795[402]](_0x2583[121], _0x2583[534]);

function autodirection() {
    var Q = Entity[_$_2795[372]]();
    var bc = closest_to_fov();
    if (bc == -1) {
        return
    };
    var R = Entity[_$_2795[580]](Q);
    var bd = calc_angle(R, Entity[_$_2795[581]](bc, 5));
    var S = [0, (bd[1] + 90) / 180 * Math[_0x2583[103]], 0];
    var T = [0, (bd[1] - 90) / 180 * Math[_0x2583[103]], 0];
    var U = function (be) {
        if (be[1] > 180) {
            be[1] -= 360
        };
        if (be[1] < -180) {
            be[1] += 360
        };
        return be
    };
    S = U(S);
    T = U(T);
    var V = 50;
    var W = vmf(ang_vec(S), V);
    var X = vmf(ang_vec(T), V);
    var Y = va(W, R);
    var Z = va(X, R);
    var ba = Trace[_$_2795[333]](Q, R, Y);
    var bb = Trace[_$_2795[333]](Q, R, Z);
    W = vmf(ang_vec(S), V * ba[1]);
    Y = va(W, R);
    X = vmf(ang_vec(T), V * bb[1]);
    Z = va(X, R);
    ba = Trace[_$_2795[333]](Q, Y, Entity[_$_2795[581]](bc, 5));
    bb = Trace[_$_2795[333]](Q, Z, Entity[_$_2795[581]](bc, 5));
    if (ba[0] && !bb[0]) {
        return 90
    };
    if (!ba[0] && bb[0]) {
        return -90
    };
    if (!ba[0] && !bb[0]) {
        return 0
    }
}

function smart_lby(dn, dK) {
    LBY_opposite(dK ? smart_yaw(dn) : !smart_yaw(dn))
}
var enemy_brute_stage = [];

function reset() {
    enemy_brute_stage = []
}
var shots_fired = [];
var last_shots_fired = [];
var bullet_pos = [];
var hurt = -1;
var shooting = -1;

function weapon_tak() {
    if (Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109])) == Entity[_$_2795[372]]()) {
        return
    };
    if (!shots_fired[Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]))]) {
        shots_fired[Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]))] = 0
    };
    shots_fired[Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]))]++;
    shooting = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109]))
}

function player_shot() {
    if (Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[108])) == Entity[_$_2795[372]]()) {
        return
    };
    hurt = Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[108]))
}

function bullet_impact() {
    if (Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109])) == Entity[_$_2795[372]]()) {
        return
    };
    if (Entity[_$_2795[562]](Event[_$_2795[561]](_0x2583[109])) == shooting) {
        bullet_pos = [Event[_$_2795[579]](_0x2583[201]), Event[_$_2795[579]](_0x2583[202]), Event[_$_2795[579]](_0x2583[203])]
    }
}

function process_shot() {
    if (shooting == -1) {
        return
    };
    var R = Entity[_$_2795[580]](shooting);
    var impact = bullet_pos;
    var Q = Entity[_$_2795[372]]();
    var dC = Entity[_$_2795[581]](Q, 0);
    var dD = calc_angle(R, impact);
    var dE = calc_angle(R, dC);
    var bh = [dE[0] - dD[0], dE[1] - dD[1], 0];
    var dF = Math[_0x2583[119]](bh[0] * bh[0] + bh[1] * bh[1]);
    bh = [dC[0] - R[0], dC[1] - R[1], dC[2] - R[2]];
    var dG = Math[_0x2583[119]](bh[0] * bh[0] + bh[1] * bh[1] + bh[2] * bh[2]);
    if (dG > 500) {
        dG = 500
    };
    dG = 500 - dG;
    dG /= 450;
    dG *= 20;
    if (dG < 2) {
        dG = 2
    };
    if (hurt != shooting && dF < dG) {
        if (!enemy_brute_stage[shooting]) {
            enemy_brute_stage[shooting] = 0
        };
        enemy_brute_stage[shooting] = (enemy_brute_stage[shooting] + 1) % 3
    };
    shooting = -1;
    hurt = -1;
    bullet_pos = []
}

function onCreateMove() {
    if (UI[_0x2583[325]][_0x2583[513]](null, autodir)) {
        UI[_$_2795[342]](_0x2583[21], _0x2583[131], _0x2583[283], autodirection())
    };
    if (!UI[_0x2583[325]][_0x2583[513]](null, override)) {
        AntiAim[_$_2795[329]](0);
        return
    };
    AntiAim[_$_2795[329]](1);
    var dp = UI[_0x2583[325]][_0x2583[513]](null, ui[_0x2583[535]]);
    var dq = UI[_0x2583[325]][_0x2583[513]](null, ui[_0x2583[536]]);
    var dr = UI[_0x2583[325]][_0x2583[513]](null, ui[_0x2583[537]]);
    var ds = UI[_0x2583[325]][_0x2583[513]](null, ui[_0x2583[538]]);
    var dn = UI[_$_2795[323]](_0x2583[21], _0x2583[155], _0x2583[156]);
    var du = UI[_0x2583[325]][_0x2583[513]](null, brutee);
    if (du) {
        smart_lby(dn, false);
        process_shot();
        var cX = Entity[_$_2795[590]]();
        var dv = -1;
        for (i in cX) {
            if (!Entity[_$_2795[396]](cX[i]) || Entity[_$_2795[601]](cX[i])) {
                continue
            };
            var time = Entity[_$_2795[565]](cX[i], _0x2583[213], _0x2583[223]) * Globals[_$_2795[585]]();
            var dw = Entity[_$_2795[565]](Entity[_$_2795[391]](cX[i]), _0x2583[225], _0x2583[226]);
            var dx = Entity[_$_2795[565]](Entity[_$_2795[391]](cX[i]), _0x2583[225], _0x2583[539]);
            var dy = (dw <= time && dx > 0);
            if (dy) {
                dv = cX[i];
                break
            }
        };
        if (dv == -1) {
            return
        };
        if (!enemy_brute_stage[dv]) {
            enemy_brute_stage[dv] = 0
        };
        switch (enemy_brute_stage[dv]) {
        case 0:
            AntiAim[_$_2795[328]](0);
            break;
        case 1:
            AntiAim[_$_2795[328]](58);
            break;
        case 2:
            AntiAim[_$_2795[328]](-58);
            break
        };
        return
    };
    var dz = 0;
    switch (dp) {
    case 0:
        AntiAim[_$_2795[328]](dn ? 58 : -58);
        dz = dn ? 58 : -58;
        break;
    case 1:
        AntiAim[_$_2795[328]](dn ? -58 : 58);
        dz = dn ? -58 : 58;
        break;
    case 2:
        AntiAim[_$_2795[328]](0);
        break;
    case 3:
        dz = smart_middle(dn);
        break;
    case 4:
        dz = follow_fake(dn, false);
        break;
    case 5:
        dz = follow_fake(dn, true);
        break;
    case 6:
        AntiAim[_$_2795[328]](smart_yaw(dn) ? 58 : -58);
        break;
    case 7:
        AntiAim[_$_2795[328]](smart_yaw(dn) ? -58 : 58);
        break
    };
    switch (dq) {
    case 0:
        LBY_opposite(dn);
        break;
    case 1:
        AntiAim[_$_2795[602]](0);
        break;
    case 2:
        switch_opposite(dn);
        break;
    case 3:
        smart_lby(dn, false);
        break;
    case 4:
        smart_lby(dn, true);
        break
    };
    switch (dr) {
    case 1:
        AntiAim[_$_2795[328]](Math[_0x2583[105]](Globals[_$_2795[393]]() * 5) * 58);
        break;
    case 2:
        AntiAim[_$_2795[328]](Math[_0x2583[417]]() * 58 * 2 - 58);
        break;
    case 3:
        half_sine(dn, dz);
        break;
    case 4:
        half_jitter(dn, dz);
        break
    };
    switch (ds) {
    case 1:
        switch_real_moving(dn);
        break;
    case 2:
        jitter_real_moving(dn);
        break;
    case 3:
        sine_real_moving(dn);
        break
    }
}
Cheat[_$_2795[402]](_0x2583[167], _0x2583[540]);
Cheat[_$_2795[402]](_0x2583[124], _0x2583[541]);
Cheat[_$_2795[402]](_0x2583[205], _0x2583[205]);
Cheat[_$_2795[402]](_0x2583[115], _0x2583[542]);
Cheat[_$_2795[402]](_0x2583[121], _0x2583[543]);
Cheat[_$_2795[600]]([159, 161, 159, 255], _0x2583[544]);
Cheat[_$_2795[600]]([159, 161, 159, 255], _0x2583[544]);
Cheat[_$_2795[600]]([255, 192, 203, 255], _0x2583[545]);
Cheat[_$_2795[600]]([100, 255, 0, 255], _0x2583[546]);
Cheat[_$_2795[600]]([255, 255, 255, 255], _0x2583[547]);
Cheat[_$_2795[600]]([255, 192, 203, 255], _0x2583[259] + Cheat[_$_2795[327]]());
Cheat[_$_2795[600]]([159, 161, 159, 255], _0x2583[544]);
Cheat[_$_2795[600]]([159, 161, 159, 255], _0x2583[544]);
Cheat[_$_2795[603]](_0x2583[548]);
Cheat[_$_2795[603]](_0x2583[549]);
Cheat[_$_2795[603]](_0x2583[550] + Cheat[_$_2795[327]]() + _0x2583[551])