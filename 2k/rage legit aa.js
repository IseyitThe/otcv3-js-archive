UI.AddColorPicker("Main color"), UI.AddColorPicker("ESP color"), UI.AddColorPicker("Auto peek color"), UI.AddDropdown("AA mode", ["Off", "Primary", "Anti-brute", "Reversed freestand", "Legit"]), UI.AddHotkey("Manual left"), UI.AddHotkey("Manual back"), UI.AddHotkey("Manual right"), UI.AddHotkey("Teleport key"), UI.AddHotkey("Auto peek key"), UI.AddHotkey("Minimum damage key"), UI.AddSliderInt("Minimum damage", -0xd0 * -0x6 + 0x130b + -0x17eb, -0x18f0 + 0x9 * 0x19c + 0x4 * 0x2b6), UI.AddSliderInt("Hitchance", -0x211 * -0x1 + -0x19b7 * -0x1 + -0x1bc8, 0x1631 + 0x1369 * -0x1 + -0x132 * 0x2), UI.AddSliderInt("keybinds list x", 0x12d3 + -0x167 + -0x116c * 0x1, Global.GetScreenSize()[-0x8f6 + -0x1 * 0x1327 + 0x1 * 0x1c1d] - (-0xb14 + 0x1876 + -0x2c * 0x4a)), UI.AddSliderInt("keybinds list y", -0x180a + 0x12 * 0x211 + -0x8 * 0x1a5, Global.GetScreenSize()[-0x685 + -0x5fe + 0x10b * 0xc] - (-0x1 * 0x24be + 0x1 * 0x1d99 + 0x73c)), UI.AddSliderInt("spectator list x", -0x700 + 0x5 * -0x79d + -0x2d11 * -0x1, Global.GetScreenSize()[-0x7 * -0x241 + 0x8eb + -0x18b2] - (0x211c + -0x5ea + -0x1a88)), UI.AddSliderInt("spectator list y", 0x1067 + 0x1a0b + -0x2a72, Global.GetScreenSize()[-0x1b08 + -0xe * 0x173 + -0x1 * -0x2f53] - (0x36 * -0x29 + -0x1 * 0x1b1d + 0x23da)), UI.AddSliderInt("menu list x", 0x693 + 0x2f7 + 0x2 * -0x4c5, Global.GetScreenSize()[-0x9d * -0x11 + 0xc17 + 0x2c * -0x83] - (0x10a9 + 0x1197 * -0x1 + 0x198)), UI.AddSliderInt("menu list y", -0xcce * -0x1 + -0x2 * 0x184 + 0x116 * -0x9, Global.GetScreenSize()[0x1ae7 * 0x1 + -0x123 * 0x2 + 0x4 * -0x628] - (-0x3 * 0x3af + -0x20c * 0x13 + 0x3208)), UI.AddCheckbox("Animated Indicators"), UI.AddCheckbox("Static color"), UI.AddSliderInt("Blend amount", -0x1 * -0x2001 + -0x72a + -0x1 * 0x18d7, -0x1b97 + 0x1860 + 0x47 * 0xd), UI.AddCheckbox("improveddtcheck"), UI.AddCheckbox("lethaldtcheck"), UI.AddCheckbox("safeawpcheck"), UI.AddCheckbox("safelimbcheck"), UI.AddCheckbox("dtbaimcheck"), UI.AddCheckbox("mindmgcheck"), UI.AddCheckbox("nameespcheck"), UI.AddCheckbox("weaponiconscheck"), UI.AddCheckbox("hitmarkerscheck"), UI.AddCheckbox("legacykillcheck"), UI.AddCheckbox("transparentnadecheck"), UI.AddCheckbox("customchamcheck"), UI.AddCheckbox("speclistcheck"), UI.AddCheckbox("keybindlistcheck"), UI.AddCheckbox("manualaacheck"), UI.AddCheckbox("adaptiveflagcheck"), UI.AddCheckbox("disableflagcheck"), UI.AddCheckbox("fakeduckcheck"), UI.AddCheckbox("watermarkcheck"), UI.AddCheckbox("clantagzcheck"), UI.AddCheckbox("hitlogcheck"), UI.AddCheckbox("tponpeekcheck"), UI.AddCheckbox("autopeekcheck"), UI.AddCheckbox("r8hccheck"), UI.AddCheckbox("fastduckcheck"), UI.AddCheckbox("rainbowlinecheck"), UI.AddCheckbox("rainbowmenucheck"), UI.AddCheckbox("underglowcheck"), UI.AddCheckbox("killsaycheck"), UI.AddCheckbox("pulsatecheck"), UI.AddDropdown("manualmodes"), UI.AddDropdown("awpcheck"), UI.AddDropdown("customchampreset"), UI.AddDropdown("fakeamountcheck"), UI.AddDropdown("legitaacheck"), UI.AddDropdown("speedcheck");
var improveddt = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "improveddtcheck"),
    lethaldt = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "lethaldtcheck"),
    safeawp = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "safeawpcheck"),
    safelimb = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "safelimbcheck"),
    dtbaim = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "dtbaimcheck"),
    mindmg = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "mindmgcheck"),
    nameesp = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "nameespcheck"),
    weaponicons = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "weaponiconscheck"),
    hitmarkers = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "hitmarkerscheck"),
    legacykill = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "legacykillcheck"),
    transparentnade = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "transparentnadecheck"),
    customcham = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "customchamcheck"),
    speclist = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "speclistcheck"),
    keybindlist = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "keybindlistcheck"),
    manualaa = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "manualaacheck"),
    legitaa = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "legitaacheck"),
    adaptiveflag = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "adaptiveflagcheck"),
    disableflag = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "disableflagcheck"),
    fakeduck = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "fakeduckcheck"),
    watermark = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "watermarkcheck"),
    clantagz = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "clantagzcheck"),
    hitlog = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "hitlogcheck"),
    tponpeek = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "tponpeekcheck"),
    autopeek = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "autopeekcheck"),
    r8hc = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "r8hccheck"),
    fastduck = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "fastduckcheck"),
    rainbowline = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "rainbowlinecheck"),
    rainbowmenu = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "rainbowmenucheck"),
    underglow = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "underglowcheck"),
    killsay = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "killsaycheck"),
    animatedindicators = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "Animated Indicators"),
    fakeamount = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "fakeamountcheck"),
    staticcolor = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "Static color"),
    mindmgslider = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "Minimum damage"),
    blendslider = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "Blend amount"),
    r8slider = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "Hitchance"),
    chosenoption = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "AA mode"),
    chosenthing = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "customchampreset"),
    preset = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "manualmodes"),
    pulsate = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "pulsatecheck"),
    awpautobuy = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "awpcheck"),
    speedupfd = UI.GetValue("Misc", "JAVASCRIPT", "Script items", "speedcheck"),
    x, y, width, height, tax = -0x301 + -0x42 * -0x19 + 0x1 * -0x321,
    tay = -0x16a2 + 0x1 * 0x1899 + 0x1 * -0x1c5,
    aimbottab = !![],
    antiaimtab = ![],
    visualstab = ![],
    misctab = ![],
    arrayopened = ![],
    arrayopened2 = ![],
    chamarray = ![];
function bettercircle(_0x10777e, _0x484436, _0x32f5d7, _0x3a2c0c) {
    Render.FilledCircle(_0x10777e, _0x484436, _0x32f5d7, _0x3a2c0c), Render.Circle(_0x10777e, _0x484436, _0x32f5d7, _0x3a2c0c);
}
var pos = [UI.GetValue("Misc", "JAVASCRIPT", "Script items", "menu list x"), UI.GetValue("Misc", "JAVASCRIPT", "Script items", "menu list y")],
    specpos = [UI.GetValue("Misc", "JAVASCRIPT", "Script items", "spectator list x"), UI.GetValue("Misc", "JAVASCRIPT", "Script items", "spectator list y")],
    keybindpos = [UI.GetValue("Misc", "JAVASCRIPT", "Script items", "keybinds list x"), UI.GetValue("Misc", "JAVASCRIPT", "Script items", "keybinds list y")];

function Dmenu(_0x41d952, _0x504d9c, _0x5b50c3, _0xc1a502, _0x3a47df) {
    var _0x560e2d = '';
    if (!includes(accs[0], niggas) && !includes(accs[1], niggas)) _0x560e2d = Cheat.GetUsername() + " - alpha";
    else {
        if (includes(accs[1], niggas)) _0x560e2d = "\x78\x38\x36\x23\x30\x30\x38\x36" + " - dev";
        else includes(accs[0], niggas) && (_0x560e2d = Cheat.GetUsername());
    }
    var _0x3ccdc1 = Render.AddFont("gotham-bold", -0x9e5 * 0x1 + -0xc4c + 0x2 * 0xb2a, -0x1658 + 0x7 * -0x179 + 0x301 * 0xb);
    colors = HSVtoRGB(Globals.Realtime() / (-0xb17 * -0x3 + 0x1 * -0x103f + -0x2d3 * 0x6), 0xb15 + -0x26ff + -0x7 * -0x3fd, -0x22a5 + -0x2673 + 0x4919, 0xfc0 + -0x25fc + 0x163d, -0x16b3 + -0x1f88 + 0x1b9d * 0x2), color = UI.GetColor("Misc", "JAVASCRIPT", "Script items", "Main color"), x = _0x504d9c, y = _0x5b50c3, width = _0xc1a502 - (-0x1009 + 0x1 * 0xb8c + 0x1 * 0x545), height = _0x3a47df - (-0x18 * 0x177 + -0x55c * -0x4 + 0xe1c), Render.Rect(x - (-0x22ac * -0x1 + 0x14f3 + -0x3f9 * 0xe), y + (-0x2023 + -0x2551 + -0x457c * -0x1), width + (0x8d * -0x25 + 0x1a5b + -0x5f8), -0x13 * -0x5 + -0xb0b * -0x2 + 0x1b * -0xd3, [0x24f9 + -0xbe * 0xa + 0x1 * -0x1d8d, 0x1f40 + 0x921 + 0x2861 * -0x1, 0x64b + -0x54 * -0x30 + -0x160b, -0xdb * 0xf + -0x1 * -0x1186 + 0xb * -0x56]), Render.Rect(x - (0x1 * 0x1f30 + -0x5 * 0x4a0 + -0x80e), y + (0x3b * 0x1a + 0xdf * -0x2 + -0x437), width + (0x6 * -0x390 + -0x16c6 + 0x1615 * 0x2), 0x12f8 + -0x143f * 0x1 + 0x179, [0x83 * -0xd + 0x13f * -0x7 + -0x8 * -0x1ec, -0x1571 + -0x16a8 + 0x2c19, 0x28 * 0x59 + -0x265 * -0x1 + -0x27 * 0x6b, -0x1956 + -0xd7 * -0x23 + -0x310]), Render.Rect(x - (-0x1f4a + -0x10df + 0xa * 0x4d1), y + (0x1bf9 + 0x3 * 0x3b7 + 0x163 * -0x1c), width + (0x157d + 0x260f * -0x1 + -0x1 * -0x1094), height + (-0xa03 + -0x26e4 * -0x1 + 0x185 * -0x13), [-0x1dd4 + -0xe5c * 0x2 + 0x3a8c, 0x1c7f + -0x40 * -0x56 + -0x31ff, -0x1 * 0x7c + 0x1 * 0x1483 + -0x1407, 0x144e + -0xc03 + 0x74c * -0x1]), Render.Rect(x - (0x1ab7 * -0x1 + -0x8b9 * 0x4 + 0x3d9d), y + (-0x3b5 + -0x5cb * 0x1 + 0x9cb), width + (0x715 + 0x9c * 0x7 + -0xb55), height, [-0x6aa * 0x1 + 0xdcd * -0x1 + 0xa9 * 0x1f, 0x283 + -0xb6b * 0x1 + -0x18 * -0x5f, 0x25fb + -0x1944 + 0x7 * -0x1d1, -0x2bd * 0xe + -0x4 * -0x5d9 + 0xff1]), Render.FilledRect(x, y + (0x56 * -0x43 + -0x7 * -0x2ef + 0x3 * 0xab), width, -0x1657 + 0x1f61 * 0x1 + -0x1 * 0x8d6, [0x3fb * 0x1 + 0x4 * -0x893 + 0x3 * 0xa2a, 0x444 + 0x1c5d + -0x2071, -0x347 * 0x3 + 0x293 * 0x1 + 0x779, -0x21 * -0xc1 + 0x4 * 0x22c + -0x2092]), Render.FilledRect(x - (-0xdf8 + -0x1517 * 0x1 + 0x2310), y + (0x4 * -0x78b + 0x7a * 0x6 + 0x1 * 0x1b59), width + (-0x227 * 0x4 + 0x20e7 + -0x1849), 0x14b * -0x3 + -0x377 + 0x3c5 * 0x2, [-0x19d3 + -0x11d0 + 0x2bd0, 0x1a20 + 0x5e7 * -0x4 + -0x254, 0x1c9f + 0x1bb0 + -0x167 * 0x28, -0x340 + -0x1f29 * -0x1 + -0x1aea]), Render.FilledRect(x, y + (-0x15 * -0x1b5 + -0x404 + -0x16 * 0x16f), width, height, [0x686 + -0x1811 + 0x38 * 0x51, -0x1 * -0x1c4 + 0x5 * -0x7f + 0x7 * 0x21, 0x144f + 0x60 * 0x48 + -0x2f18, 0x16f * -0x4 + -0x2c5 + 0x980]), Render.FilledRect(x - (-0x2 * -0x272 + 0x5 * -0x22c + 0x5f9), y + (-0x237 * 0xe + -0x1611 + -0x41b * -0xd), width + (-0x1173 + 0x1 * -0x2d1 + 0x6 * 0x361), height - (0x2 * 0x45e + -0x61 * -0x2 + -0x97c), [-0x2d2 * -0x5 + -0xf06 * 0x1 + 0x1 * 0x119, 0xe0d + -0xf23 + 0x146, 0x1ffe + -0x25c + -0x1d6b, 0x18ae + -0xf1b + -0x894]);
    underglow && (pulsate ? Render.GradientRect(x + (-0x1ab7 + -0xe77 * -0x2 + -0x236), y + (-0x2d7 + 0x2465 + -0xb2b * 0x3), width, -0xf5a + 0x2ab * 0x4 + -0x4ba * -0x1, -0x1cdb * -0x1 + -0x264b + 0x4 * 0x25c, rainbowmenu ? [colors['r'], colors['g'], colors['b'], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x174e + 0x1a88 + 0x3 * -0x113) / (-0xc95 * -0x2 + -0xe13 + -2838.5)) % (Math['PI'] * (0x12a * -0x18 + -0xb17 + 0x2709)))) * (-0x1453 * 0x1 + -0x8bb * 0x1 + 0x9d * 0x31)] : [color[-0x1eb7 + 0xe2 * -0x25 + 0x3f61], color[0x3 * -0x1ca + -0x51 + 0x5b0], color[0x10b3 + 0x5a * -0x25 + 0x1 * -0x3af], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0xd3 * 0x1d + -0x1b45 + 0x3 * 0x110f) / (0x68d + 0x244a + -10966.5)) % (Math['PI'] * (-0x94a + 0x518 * 0x4 + -0x58a * 0x2)))) * (0x167 + 0x2186 + 0x2 * -0x10f7)], [0x575 * 0x1 + 0x5d * -0x18 + -0x1 * -0x343, -0x18c8 + 0x1fc9 * -0x1 + 0x3891, 0x59 * -0x2e + -0x63a + 0x1638, 0x1a4d + 0xa3d + 0x1 * -0x248a]) : Render.GradientRect(x + (0x1ec9 + -0x1648 + -0x880), y + (0x1943 + 0x22f0 + -0x3c26), width, 0x246f + 0x1 * 0x1d91 + -0x41f4, -0x3e * -0x6d + 0x231f + 0x1 * -0x3d85, rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x23ea + 0x1d17 * -0x1 + 0x2 * -0x2ea] : [color[-0x1 * -0xb68 + 0x2b8 * -0x1 + -0x8b0], color[-0x4c6 + -0xcbd * 0x1 + 0x3b * 0x4c], color[0x105a + -0xfbd + -0x9b], 0xc49 + -0x115c + 0x612], [-0x2450 + 0x2125 + -0x1 * -0x32b, -0xc37 + -0x17b * -0x7 + 0x1da, -0xc1c + -0x2 * 0xad9 + 0x1 * 0x21ce, -0x20f0 * 0x1 + -0x1b8b + 0x3c7b]));
    Render.GradientRect(x + (0x8 * 0x4bd + -0xce5 + 0x123 * -0x16), y + (-0x1f81 + -0x26c3 + -0xa0b * -0x7), width, -0x168a + -0x13bc + 0x2a4d, 0x1 * -0x2197 + 0x2544 + -0xa * 0x5e, rainbowmenu ? [colors['r'] * (0x1ca3 + -0xdd7 * -0x1 + -10873.25), colors['g'] * (-0xb58 + 0xeac + -851.25), colors['b'] * (0x30b + -0x8c6 + 1467.75), -0x5c * -0x10 + -0x1a15 + 0x1554] : [color[-0x2 * 0x949 + 0x243f + -0x19 * 0xb5] * (0x14 * 0x133 + 0x4 * -0x8d8 + 2916.75), color[-0x1850 + 0x1e57 + -0x606] * (-0x2201 + 0x2087 + 378.75), color[0x5ae + -0x15e5 + 0x1039] * (-0x2 * -0xb73 + -0xd45 + -2464.25), 0x59 * 0x1 + -0xc * -0x6f + -0x48e], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x1 * -0x35b + -0x97 * -0x33 + 0x1 * -0x1ab7]] : color), Render.GradientRect(x, y + (-0x139a + 0x10e6 * 0x2 + -0x3 * 0x4b8), width + (-0x249c + -0x90c * 0x3 + 0x3fc2), -0x1 * 0x1caf + 0x3a * -0x73 + 0x36c2, 0x2c * 0x88 + -0xdcd * -0x1 + -0x34 * 0xb7, rainbowmenu ? [colors['r'] * (-0xe56 * 0x1 + -0x53 * 0x43 + 9231.75), colors['g'] * (-0x10ab * 0x2 + 0xb * 0x1b7 + 3705.75), colors['b'] * (0xa6 * 0x30 + -0x102 * -0x7 + -9773.25), 0x3 * -0x377 + -0x6 * 0x469 + 0x33 * 0xbe] : [color[-0x19 * 0x2b + 0x1b7e + -0x174b] * (-0x2343 + 0x1 * -0x128c + 13775.75), color[0x248 * -0xe + -0x1665 + 0x3656] * (-0x94d * 0x1 + 0x20cb * 0x1 + -6013.25), color[-0x1f05 + 0x192c + 0x5db] * (0x6 * 0x15a + 0x17a + -2453.25), 0x2f * -0x6a + -0x25f9 + -0x3 * -0x137a], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x1 * -0x21cd + -0x1 * 0x13cd + 0xab9 * 0x5]] : color);
    var _0x25a54e = Render.AddFont("Verdana", -0x15 * -0x12f + 0x1 * 0x1c3c + -0x3510, 0x885 * 0x2 + -0x2245 + 0x12cb);
    Render.Line(x + (-0x4a0 + 0x1 * -0x1a7d + 0x1f20), y + _0x3a47df - (0x2216 + -0x5ba * 0x1 + 0x1 * -0x1c2b), x + (0x1295 * -0x1 + 0x2e * 0x3 + 0x13fb), y + _0x3a47df - (0x1bc2 + 0x7f1 * -0x2 + -0xbaf), [0xd19 + 0x11a6 + -0x1e88, 0xb3c + 0x5 * 0x1 + -0xb05, -0x1 * -0x1f6d + -0x1af5 + -0x433, -0x98f + -0x14d9 * -0x1 + -0x11 * 0x9b]), Render.StringCustom(x + (0x1a3 * 0xb + -0x2 * 0xc3c + 0x7d5), y + _0x3a47df - (-0x6d * 0x4f + 0x11a * 0x8 + 0x8 * 0x320), -0x1c6b + 0x1 * -0x22df + 0x3f4a, "hold right-click for tooltips", [0x9c2 * -0x1 + -0x1d * 0xfd + 0x276a, -0x10 * 0x126 + -0x1f7c + 0x32db, 0x2 * -0xe17 + -0x1 * -0xc9d + 0x35 * 0x50, -0x634 * -0x6 + 0x17 * -0xc5 + 0x943 * -0x2], _0x25a54e), Render.StringCustom(x + (0x199c * -0x1 + 0x21bb + 0x1 * -0x815), y + _0x3a47df - (0x3 * 0x7ed + -0xfca * -0x2 + -0x372e), 0x156d + 0x241 * 0x5 + -0x20b2, _0x560e2d, [0x13e0 + 0x1fb8 + -0x3299, -0x766 * -0x2 + 0x1165 + -0x1f32, -0x143f + -0x1933 * -0x1 + -0x1 * 0x3f5, 0xe4 + -0x9 * 0x1fd + 0x1200], _0x25a54e), bettercircle(x, y + (-0x765 + -0x1 * -0xcf1 + -0x8b * 0xa), -0x2581 * 0x1 + -0x3 * 0x9a3 + -0x1 * -0x428b, rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0x225c + 0x1685 + -0x66b * -0x2] : [color[0xd12 * 0x2 + 0x8 * -0x2c2 + -0x414], color[-0x2419 + 0x2 * 0xa01 + 0x1018], color[0x2 * -0x937 + -0x6db + -0x7 * -0x39d], 0x5 * 0x617 + -0x1 * 0x9c + -0x1cd8]), bettercircle(x, y + (-0x9e * 0x5 + 0x132c + -0xff8), -0x2 * 0x9dc + -0xc * -0x122 + 0x640, [-0x36 * -0xa1 + 0x2 * -0x12a1 + 0x7f * 0x7, 0x2e * 0x25 + -0xebe + 0x848, -0xa8 * -0x3a + 0x14ca + -0x3aa3, -0x2108 + -0x3 * 0xab + 0x2408]), Render.StringCustom(x - (0x25b * 0x9 + -0x230e + -0x7 * -0x1fd), y + (0x281 * -0xb + -0x1c49 + 0x1beb * 0x2), -0x24be * 0x1 + 0x17 * 0x14b + 0x701, _0x41d952, rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0x2307 + 0x1 * 0xccf + -0x1737 * -0x1] : [color[-0x26bd * 0x1 + 0x2 * 0xc2c + 0xe65], color[-0xe62 + 0x25b4 + -0x1751], color[0xc1f + -0x1f * 0xfd + -0x1 * -0x1286], 0xc59 + 0x496 * 0x1 + -0xff0], _0x3ccdc1);
}

function Dtab(_0x5cb810, _0x21d10a, _0x337b0f) {
    var _0x2bff00 = Render.AddFont("Verdana", 0x2 * -0x6e5 + 0x313 + 0xac1, -0x239a + -0x1e * -0x2f + -0x427 * -0x8),
        _0x566b8f = -0x16af + -0x5 * -0x3 + 0x1768,
        _0x5b5f33 = -0x2474 + 0x2480 + -0xc,
        _0x1da972 = _0x21d10a + (-0x348 + 0x6b * -0x4b + 0x22a6),
        _0xd8e627 = Input.GetCursorPosition(),
        _0x3c30a3 = _0xd8e627[0x2236 + 0x2 * 0xa3b + -0x36ac],
        _0x24e415 = _0xd8e627[0xa0b * -0x3 + 0x2097 + 0x275 * -0x1],
        _0x2587d6 = Render.TextSizeCustom(_0x5cb810, _0x2bff00)[0x49f * -0x7 + 0x5b2 + 0x1aa7] + (-0x112 * -0x1 + 0x30 * 0x4c + -0xf4d),
        _0x141ea4 = ![];
    return _0x3c30a3 > _0x21d10a && _0x3c30a3 < _0x21d10a + (0x98a + -0x45f + -0x4db) && _0x24e415 > _0x337b0f && _0x24e415 < _0x337b0f + (-0x2 * 0xc2f + -0x9d2 + 0x223f) ? (hovered = !![], _0x5b5f33 = _0x2587d6 + (-0xad * -0x8 + 0x18a1 + -0x13 * 0x194), Render.FilledRect(_0x21d10a, _0x337b0f, _0x5b5f33, -0x1 * 0xb15 + -0x411 + -0xe5 * -0x11, [-0x22e7 + -0x12a0 + 0x1adf * 0x2, 0xc38 + 0x1bc * 0x2 + -0xf74, 0x11d9 + -0xc63 + 0x3 * -0x1bb, -0x428 + 0x1b56 * 0x1 + -0x162f]), Render.FilledRect(_0x21d10a - (-0x1 * -0x229f + 0x65f + -0x28fd * 0x1), _0x337b0f + (0x8c8 + -0x1 * -0x5f2 + -0xeb9), _0x5b5f33 + (-0x1 * 0x2351 + 0x3 * 0xb4b + 0x172), -0xa7 * -0x1 + 0x1b83 + -0x3 * 0x95f, [-0x5 * -0x27 + 0xda + 0x166 * -0x1, -0x4d2 * 0x4 + 0xc * -0x46 + 0x16cc, 0x54 * 0x73 + -0x1 * -0x19ca + -0x3f41, 0x19cb + -0x3c4 * 0x9 + 0x918]), Input.IsKeyPressed(0x2fe * 0x2 + -0x395 + -0x266) && (_0x141ea4 = !![])) : hovered = ![], Render.StringCustom(_0x1da972 + (0x36 * -0x28 + 0x863 + 0x1 * 0x10), _0x337b0f - (-0x82 * 0x42 + -0x1 * 0x1197 + 0x331c), 0xd70 + 0x4f * 0x54 + -0x275c, _0x5cb810, [-0x11cd + -0x7 * -0x43d + -0xadf, 0x3e * 0x69 + 0x1385 + -0x2bf4, -0x1c * 0xd + 0x4 * 0x43e + 0x95 * -0x19, _0x566b8f], _0x2bff00), _0x141ea4;
}
var keyCodes = [0x1b09 + 0x11d + -0x1be5, -0x20e * -0x2 + 0x46e * 0x7 + -0x184 * 0x17, -0x1 * 0x176d + 0x1fcf + -0x4d * 0x1b, 0x19e9 + 0x7 * -0x54a + 0xb61, 0x8cf + 0x1fa * -0x12 + 0x1b0a, 0x521 * -0x6 + -0x7 * 0x4b1 + 0x3fe3 * 0x1, -0x18f0 + -0x410 + 0x1d47, -0xd6 + -0x959 * 0x1 + -0x39 * -0x2f, 0x124d + -0x227 * -0x6 + -0x1eee, -0xfdb + 0x2023 * -0x1 + 0x3048, 0x7 * -0x26f + -0x82e * -0x2 + -0x3e * -0x4, 0x5 * 0x64d + -0x22ca * -0x1 + 0x6d * -0x9b, 0x7 * 0x47f + -0x110b * 0x1 + -0xe21, -0x15bf + -0x455 * 0x7 + 0x346 * 0x10, -0x1924 + -0x20f * 0xf + 0x3854, 0x1 * 0x15eb + 0xd42 * -0x1 + 0x859 * -0x1, 0x1e2 * -0x11 + -0x8cd + 0x2920, 0x70 * 0xe + 0x1a4b * 0x1 + -0x2019, -0x281 * -0x8 + -0x1ca5 + 0x8f0, 0x2058 + 0x1aa * -0xf + -0x70e, -0x2335 + -0x1a * 0xb + 0x24a8, 0x17 * -0x15 + 0x1cad + -0x1a74, 0x1d * 0x7 + 0x8b6 + 0x1 * -0x92a, 0x1c6d + -0x1 * 0x2126 + 0x511, -0x16a3 * -0x1 + 0x4e * 0x2 + -0x3 * 0x7a2, 0x25de + -0xe83 + -0x7ab * 0x3, -0xeb3 * 0x2 + 0x17fe + 0x588],
    keyChar = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', '_', '/'],
    globaltime = Globals.Realtime();

function Dcheckbox(_0x384d7f, _0x23f093, _0x29c744, _0x35bc7c, _0x556110, _0x4ee376) {
    var _0x2d6373 = Input.GetCursorPosition(),
        _0x3ecf2f = _0x2d6373[-0x4e7 + -0x8 * 0x255 + 0x178f * 0x1],
        _0x52aa77 = _0x2d6373[0x1c5b + -0x4 * 0xa3 + -0x19ce],
        _0x455a63 = Render.AddFont("Tahoma", 0x20 * 0x12a + -0x308 * -0xc + -0x4999, 0x18d7 + -0x1699 + 0x2 * 0x3f),
        _0xc9c116 = Render.TextSizeCustom(_0x384d7f, _0x455a63)[-0x2 * 0x863 + -0x1697 + -0x1 * -0x275d];
    Render.Rect(_0x23f093 - (0x5 * -0x341 + 0x1cad * -0x1 + -0x2a5 * -0x11), _0x29c744 - (-0xf00 + -0x1f7e + -0x5d * -0x80), -0x2126 + -0x1 * 0x1c57 + 0x3d8a, -0x22fc + 0x2481 * 0x1 + -0x178, [0x3d5 + -0xa1 * 0x3d + -0x6f7 * -0x5, 0x7d8 * -0x2 + 0x656 * 0x1 + 0x9af, 0x15f0 + 0x1835 * 0x1 + -0x2dbe, -0x71a * -0x4 + -0x19a8 + -0x1 * 0x1c1]);
    if (_0x3ecf2f > _0x23f093 && _0x3ecf2f < _0x23f093 + (0x189 * -0x3 + 0x2031 + -0x173 * 0x13) + (-0x1e0f + 0x7 * 0x1f5 + 0x1061 * 0x1) + _0xc9c116 && _0x52aa77 > _0x29c744 && _0x52aa77 < _0x29c744 + (0x1 * 0x1387 + 0xd10 + -0x1 * 0x208d)) {
        Render.FilledRect(_0x23f093 - (-0x2506 * -0x1 + 0x133b + 0x25 * -0x185), _0x29c744 - (-0x2474 + -0x1af * -0xb + 0x2 * 0x8f9), -0xdb6 + -0xbf9 * 0x3 + -0x14 * -0x285, 0x1090 + -0x1336 + 0x1 * 0x2b5, [0x1a7c + -0x2512 + 0xacd, -0x3 * -0x4e1 + -0xd * -0x1e7 + -0x2 * 0x1391, -0x126d + -0x7b6 + 0x69a * 0x4, -0x1084 + -0x133e + -0x24c1 * -0x1]), Render.FilledRect(_0x23f093 - (0x12fd + 0x1 * -0xdfa + 0x1 * -0x4fa), _0x29c744 - (0x1c20 + 0x1 * 0x230b + 0x1b5 * -0x25), -0x6d * -0x13 + 0x1e3a + 0x10b * -0x24, -0x76a * 0x5 + -0x1 * -0x175 + -0x19f * -0x16, [-0x322 * 0x1 + 0x1c92 + 0x24b * -0xb, 0xe06 + 0x15 * -0x2b + 0xa43 * -0x1, 0x750 + 0x1 * -0x2425 + -0xe8d * -0x2, -0x1bf8 + 0x1 * 0x10e2 + 0xc15]), Render.Rect(_0x23f093 - (-0x1e40 + -0xcaa + 0x2aed), _0x29c744 - (0xa35 + 0x1084 * -0x1 + 0x15 * 0x4d), -0x1cf7 * -0x1 + 0x3 * -0xbe5 + 0x6c5, -0x2 * 0x113b + 0xbf9 + 0x168a, rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0x1bce * -0x1 + 0x2ed * 0x2 + -0x20a9] : [color[-0xf1 * 0x7 + 0x3 * -0x8d7 + 0x146 * 0x1a], color[-0x21c + 0x1 * 0x2580 + -0x2363 * 0x1], color[-0x1 * -0x1bd + 0x1 * 0xd55 + 0xf10 * -0x1], -0x269a + 0x1 * -0x1e2f + -0x45c8 * -0x1]);
        if (Input.IsKeyPressed(-0x1 * -0x7d3 + -0x1ead * -0x1 + 0xf * -0x291) && Globals.Realtime() > globaltime + (-0x2547 + 0x2 * 0x998 + 4631.2)) return globaltime = Globals.Realtime(), !![];
    }
    _0x35bc7c && Render.FilledRect(_0x23f093 - (-0x2 * 0x9ea + 0x12ef * 0x1 + 0xe8), _0x29c744 - (-0x2011 + -0x968 * 0x1 + -0x1 * -0x297b), -0x3cd * -0x9 + 0x1fc * -0xa + 0xe5 * -0x10, 0x4 * -0x84a + -0xc43 * -0x3 + -0xe5 * 0x4, [-0x26f5 + -0x663 * 0x3 + 0x3a73, 0x2ea * -0xd + 0xcd5 + 0x2 * 0xcb7, -0x14d8 + 0x4f * 0x2c + 0x7bb, 0x267e + 0x107f + 0x2 * -0x1aff]);
    if (_0x3ecf2f > _0x23f093 && _0x3ecf2f < _0x23f093 + (-0xa1 + -0x1914 + 0x3 * 0x896) + (-0x1036 + -0x2437 + 0x3472) + _0xc9c116 && _0x52aa77 > _0x29c744 && _0x52aa77 < _0x29c744 + (-0x1 * 0x1c1 + 0x1dd7 * 0x1 + -0x2 * 0xe06) && _0x556110 && Input.IsKeyPressed(-0x1454 + 0x1 * 0x2273 + 0x1 * -0xe1d)) {
        var _0x3e33d0 = Render.TextSizeCustom(_0x4ee376, _0x455a63)[0xabb + -0xdf4 * -0x1 + -0x18af];
        Render.FilledRect(_0x3ecf2f - _0xc9c116 / (0xc * 0x1bd + -0x133 * -0x1 + 0x160d * -0x1), _0x52aa77 - (-0x849 + -0x1199 * -0x1 + 0x4 * -0x24f), _0x3e33d0 + (0x185 * 0xa + -0x20b3 + -0x43 * -0x43), 0xf93 + 0x928 + -0x1 * 0x18af, [-0x1d48 + 0x1fe0 + -0x243, 0x2257 + -0x82 * -0x3a + -0x3f6a, 0x74 + -0x4 * 0x248 + 0x923, 0x1e86 + 0x7 * 0x337 + -0x3408]), Render.FilledRect(_0x3ecf2f - _0xc9c116 / (-0x1597 + 0x1330 + 0x269) - (-0x5a6 * 0x5 + -0x14f6 + -0x11 * -0x2e5), _0x52aa77 - (0x74b * -0x1 + -0x243d + 0x2b9b), _0x3e33d0 + (-0xb99 * -0x3 + 0x1 * 0x2133 + -0x43f4), -0x3 * 0x3c5 + 0x229b + -0x1 * 0x1742, [0x161 + -0x255a + -0x60d * -0x6, 0xe2c * -0x1 + -0x1ec7 + -0x78e * -0x6, -0x1b53 * -0x1 + 0xfd4 + 0x8 * -0x556, 0x212 + -0x2 * -0xd2d + 0x3b * -0x77]), Render.StringCustom(_0x3ecf2f - _0xc9c116 / (0x4b0 + 0x31d * -0x4 + -0xc7 * -0xa) + (-0x5 * -0x8 + -0x161e + 0x15fb), _0x52aa77 - (0xb * -0x16f + -0x2675 + -0x7 * -0x7c2), 0x1 * -0x2113 + 0x615 + 0x2 * 0xd7f, _0x4ee376, [-0x1 * -0x5e + -0x752 + -0xb * -0xb9, -0xb7e * 0x3 + 0x208c + 0x2ed, -0x220a * -0x1 + 0xa9c + -0x2ba7, 0xc96 + -0x1 * 0x17d1 + 0xb * 0x113], _0x455a63);
    }
    _0x3ecf2f > _0x23f093 && _0x3ecf2f < _0x23f093 + (0x197f + 0xab3 + -0x2425) + (-0x5 * -0x529 + -0x20ef + 0x727) + _0xc9c116 && _0x52aa77 > _0x29c744 && _0x52aa77 < _0x29c744 + (0x5 * 0x1e2 + 0x624 * -0x1 + -0x33c) && Render.Rect(_0x23f093 - (0x11b * 0x17 + 0x4 * -0x940 + -0x1 * -0xb96), _0x29c744 - (0x205e * -0x1 + 0x1f34 + 0x12c), -0x13a7 + 0x3ac + 0x1008, 0x1917 + -0x25c0 + 0xcb6, rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x574 * -0x1 + 0x283 * -0x6 + 0x1585] : [color[0x12e4 + 0x7 * 0x53 + -0x1529], color[0x1f46 + -0x145d + 0xae8 * -0x1], color[0x939 + 0x3 * 0x967 + -0x256c], -0xfd2 + 0x1b73 + -0xaa2]), Render.StringCustom(_0x23f093 + (-0x80 * -0x4a + 0x1a * -0x15d + -0xc2 * 0x2) + (0x2b * -0x9 + -0x117f + -0x1307 * -0x1), _0x29c744 - (-0x804 * 0x2 + -0x357 * -0x7 + 0x28 * -0x2f), 0x745 * -0x2 + 0x255 + 0xc35, _0x384d7f, [-0x178a + -0x9c3 + -0x1126 * -0x2, -0x517 * 0x5 + -0x14 * -0x12a + 0x6 * 0x87, 0x1c4b + -0x2287 * 0x1 + 0x73b, 0x72b + 0x1ff7 * -0x1 + 0xab * 0x26], _0x455a63);
}

function Dslider(_0x5c54aa, _0x5cba92, _0x220255, _0x278b5b, _0xdd579e, _0x4db9ea, _0x5521a1) {
    var _0x5d121d = Input.GetCursorPosition(),
        _0xb3e84b = _0x5d121d[-0xd4c + -0xdf9 + -0x219 * -0xd],
        _0x185405 = _0x5d121d[-0x13d7 + 0x1 * 0x1f64 + -0xb8c],
        _0x57ce1e = _0x278b5b * _0xdd579e,
        _0x51b0cb = Render.AddFont("Tahoma", 0x216d + -0x1dc + -0x1f8a, -0x2049 + -0x199 * -0xb + 0x1172);
    _0xb3e84b - (0x7eb * -0x1 + 0xb * -0x213 + 0x1 * 0x1f11) > _0x5cba92 - (-0x7a * 0x43 + 0x47 * 0x63 + 0x47a) && _0xb3e84b - (0x948 + 0x11bf + 0x1 * -0x1ab1) < _0x5cba92 + (-0x1a30 + -0x13 * -0x201 + -0x1b * 0x6d) && _0x185405 > _0x220255 + (0x20f7 + 0x18c + -0x2277 * 0x1) && _0x185405 < _0x220255 + (0x1 * 0x16ff + -0xb96 + -0xb5d * 0x1) + (0xc10 * 0x1 + 0x4 * -0x77b + 0x1 * 0x11e6) && (Input.IsKeyPressed(-0x1c17 + 0x163e + 0x2 * 0x2ed) && (_0x278b5b = _0xb3e84b - (0xd * -0xd9 + 0x1629 + -0x1 * 0xacf) - _0x5cba92, _0x57ce1e = _0x278b5b * _0xdd579e));
    if (_0xb3e84b > _0x5cba92 - (-0x1507 + -0x680 + 0x1b88) && _0xb3e84b - (-0x11 * -0x23f + 0xa14 + -0x2fed) < _0x5cba92 + (-0x1be * -0xa + -0x2f * 0x5b + -0x53) && _0x185405 > _0x220255 + (-0x27 * 0x29 + -0x9 * -0x251 + -0xe8e) && _0x185405 < _0x220255 + (0x7f8 + 0x9af + 0x1 * -0x119b) + (-0x1ab + 0x16f3 + -0x153e)) {
        if (_0x57ce1e == -0x706 * 0x1 + -0x153 * -0xc + -0x8de && _0x4db9ea) indicateval = "dynamic";
        else _0x5521a1 ? indicateval = _0x57ce1e + " hp" : indicateval = _0x57ce1e + '%';
        var _0x431396 = Render.TextSizeCustom(indicateval, _0x51b0cb)[0x19a * -0xa + -0x31c + -0x660 * -0x3];
        Render.FilledRect(_0xb3e84b - _0x431396 / (-0x182d + -0x3 * 0x1a1 + 0xe89 * 0x2), _0x185405 - (-0x12fa + 0xa * 0x264 + 0x26d * -0x2), _0x431396 + (0xc7a + 0x6 * -0x511 + 0x11f6), 0xce0 + -0x15e8 + 0x2 * 0x48a, [-0xa33 * -0x3 + -0xadf + -0x1365, 0x373 * 0x7 + -0x2 * -0x562 + 0x8a2 * -0x4, -0x269 * 0xd + -0x8a * -0x3f + 0x2 * -0x115, 0x1 * 0xa8d + -0x1 * 0x5fd + 0xb * -0x53]), Render.FilledRect(_0xb3e84b - _0x431396 / (0xaf7 * 0x3 + -0x586 + 0xf * -0x1d3) - (0x1 * -0x1985 + 0x8a3 + 0x10e3), _0x185405 - (-0x647 * 0x1 + -0x2 * -0xfe7 + -0x1974), _0x431396 + (-0xa82 * -0x1 + 0x261 * -0x3 + -0x353 * 0x1), 0x4b * 0x5d + 0xe6b + 0x1 * -0x29a0, [0x23cc + 0xc45 * -0x1 + -0x1732, 0x1083 * -0x1 + -0xb99 * -0x1 + -0x54b * -0x1, 0x1d0c * 0x1 + -0x247 + -0x1a4e, -0x1 * 0x425 + -0xf1 * 0x11 + 0x1525]), Render.StringCustom(_0xb3e84b - _0x431396 / (-0x10f * -0x1 + -0x1108 + 0xffb) + (-0x212d + 0x202a + 0x4 * 0x42), _0x185405 - (-0x3d * 0x15 + -0x1 * 0x349 + 0x85e), 0x15 * -0x3b + 0x3f0 + 0xe7, indicateval, [-0x2471 + 0x2135 * -0x1 + 0x46a5 * 0x1, -0x7ce + 0x188e + 0x1 * -0xfc1, 0x17fc + -0x1d1f * 0x1 + 0x9d * 0xa, 0x22df + 0x3bc + -0x2605], _0x51b0cb);
    }
    return Render.FilledRect(_0x5cba92 + (-0xf81 + -0xc7a + 0x1c4e), _0x220255 + (-0x4c6 * 0x3 + -0x1 * -0xb63 + 0xbf * 0x4), -0x13f3 + 0x1 * 0x2261 + 0x8 * -0x1c1, -0x1de7 * -0x1 + 0xb7 * 0x31 + -0x40e6, [-0xf65 + 0xc1 * -0x1 + 0x1048 * 0x1, 0x17 * 0x5b + -0x33c + -0x4ce, 0xf92 + 0x2b * -0xa3 + 0xbf7, 0x2 * -0x687 + 0x9 * 0x11b + 0x41a]), Render.FilledRect(_0x5cba92 + (-0xd3 * -0x14 + -0x4e8 + -0x1 * 0xb42), _0x220255 + (-0x2 * 0xeed + -0x37e * -0x7 + 0x576), 0x1279 + 0x9fe * 0x3 + -0x300b, 0x12f * 0x3 + -0x175e + 0x69d * 0x3, [0x1458 + -0xc4f + -0x7e7, -0x4b9 + -0x1 * -0x12b7 + -0xddb, 0x2019 + 0x18eb + 0x38dc * -0x1, -0xe4b * 0x1 + -0x78e + 0x16d8]), _0x278b5b != 0x1d55 + 0x2072 + -0x3dc7 && (Render.GradientRect(_0x5cba92 + (-0x9 * 0x13f + -0xb09 + 0x1694), _0x220255 + (0x1dde + -0x39e + 0x1df * -0xe), _0x278b5b, 0xcbb * 0x2 + -0x24e2 + -0x5b9 * -0x2, -0x2015 * -0x1 + -0x1e19 + 0x3 * -0xa9, rainbowmenu ? [colors['r'] * (0xed4 + 0x1 * 0x266 + -4409.25), colors['g'] * (0x7df + 0x37 * -0x4a + 2055.75), colors['b'] * (0x2 * -0x1eb + -0x1 * -0x23c8 + -8177.25), 0x2322 + 0x1512 + -0x3735] : [color[-0x151a + 0x37 * -0x5 + 0x162d] * (0x14a + -0x16ae + 5476.75), color[0x778 * 0x3 + 0x6d0 + -0x9bd * 0x3] * (-0x46a + -0x268f + 11001.75), color[-0x463 * 0x2 + -0xa4 * -0x19 + -0x73c] * (-0xb5 * -0x5 + 0x819 * -0x1 + 1168.75), -0x3 * -0x2d7 + -0xb51 + 0x3cb], rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x1c7 + 0x1fbc + 0x1042 * -0x2] : color), Render.GradientRect(_0x5cba92 + (-0x2187 + 0x1ae5 + -0x1 * -0x6f5), _0x220255 + (-0x207e + -0x5d3 * -0x1 + 0x1aba), _0x278b5b + (0x2653 + 0x433 * -0x5 + -0x8a9 * 0x2), 0x2db * 0xa + -0x156b + -0x71f, 0x877 + -0x10d9 * 0x1 + 0x863, rainbowmenu ? [colors['r'] * (-0x223 * 0xe + 0x1895 + 1365.75), colors['g'] * (0x5 * -0x5cf + 0x624 + 5863.75), colors['b'] * (-0x2 * -0x1279 + -0x95 * -0x1d + -13778.25), 0x4a3 * -0x1 + 0xb44 + -0x5a2] : [color[0x8a * 0x39 + -0xdbd * -0x2 + -0x3a34] * (0x2511 + 0x15c9 + -15065.25), color[0xd91 + 0x1800 + 0x8 * -0x4b2] * (0x5 * -0x31d + -0x34f * -0xb + -5331.25), color[0x18c * -0x18 + 0x1 * 0x221e + 0x304] * (-0x3 * -0x9a3 + 0x1 * 0x2694 + -17276.25), 0x17e7 + -0x45b + -0x128d], rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0x55b + 0x1fcf + -0x1975] : color)), Render.StringCustom(_0x5cba92, _0x220255 + (0x1 * 0x255b + 0x52c + 0xf * -0x2d5), -0xe89 * 0x2 + -0x6b * 0x5 + -0x1 * -0x1f29, _0x5c54aa, [0x5a3 + 0x2420 * -0x1 + 0x1f7c, 0x5f * 0x12 + -0x14a3 + 0xef4, 0x6 * 0x633 + 0x1 * -0x1a74 + -0x1f3 * 0x5, 0x1131 * 0x1 + 0x1d3 * 0x9 + -0x2106], _0x51b0cb), _0x278b5b;
}

function Dcategory(_0x5f4210, _0x4e5232, _0x352d33, _0x2daab9, _0x521f43) {
    x = _0x5f4210, y = _0x4e5232, width = _0x352d33, height = _0x2daab9;
    var _0x95c5cf = Render.AddFont("Verdana", 0x68 * -0x4f + -0x91 * 0x35 + 0x1 * 0x3e25, 0x2 * -0x580 + 0x2f6 + -0x3 * -0x376);
    Render.FilledRect(x, y, width, height, [-0x17ab + 0x13a * 0x3 + -0x4 * -0x50c, -0x1 * 0xc + -0x1 * 0xa77 + -0x3 * -0x393, -0x157d * 0x1 + 0x1596 + 0x26, 0x5e6 + -0x1 * 0x8a7 + 0x40 * 0xf]), Render.FilledRect(x - (0x2494 + 0xd31 + -0xb6 * 0x46), y + (-0x26ac + -0xd23 + 0x33d * 0x10), width + (-0x1 * 0x2573 + -0x2 * 0x43a + 0xa1 * 0x49), height - (-0x1425 + -0x17a2 + 0x2bc9), [0x1 * -0x11ef + 0x1 * 0x43 + 0x11df, -0xd7d + 0x1 * 0xd79 + 0x3a, -0xc2f + -0x2120 + 0x2d8e, 0x1090 + 0x1dee + -0x2d7f]), Render.StringCustom(x + (0x6d * -0x1e + 0x8 * 0x161 + 0x1c1 * 0x1), y - (0x679 * -0x6 + -0x1ab * -0xb + 0x148c), 0x17d + 0x9a5 + -0xb22, _0x521f43, [color[0xaf2 * 0x1 + -0x1d14 + 0x1222], color[0x858 + 0x174b + -0x1fa2], color[0xd * 0x279 + -0x24ba + 0x497], -0x1d6f + -0x2d7 * -0x4 + 0x1312], _0x95c5cf), Render.GradientRect(x, y, width, 0x1 * -0x1628 + -0x1e89 + 0x3 * 0x1192, -0x8df + -0x1ba + 0xa9a, rainbowmenu ? [colors['r'] * (0x5c4 + -0x1 * -0x227b + -10302.25), colors['g'] * (0x8d3 + 0x2125 * 0x1 + -10743.25), colors['b'] * (-0xb12 + 0x1 * 0x12bf + -1964.25), -0xc + 0x137f + -0x1274] : [color[0xe2 * -0x1 + -0x1 * -0x215f + -0x207d] * (0xaa8 + 0x19e5 + -9356.25), color[0x1 * 0x1e25 + 0x1db0 + -0x3bd4] * (0x1 * 0xb8c + 0x1901 + -9356.25), color[0x35 * -0x7d + 0x23 * 0xfa + 0x84b * -0x1] * (0x7d * 0x26 + -0x260b * -0x1 + -14488.25), -0x35 * 0xad + 0x1014 + 0x1 * 0x14bc], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x5 * -0x58f + 0xdeb + -0x2c7 * -0x5]] : color), Render.GradientRect(x - (0x1f3a * -0x1 + 0xb0 * 0x1f + 0x9eb), y + (-0xac * 0x1 + -0x17 * -0x70 + -0x59 * 0x1b), width + (0x1ad * 0x12 + 0x2a * 0x1 + -0x1e52), 0x1054 + -0x21c4 * -0x1 + -0x3215, -0x20fc + -0x179b * 0x1 + 0x3898, rainbowmenu ? [colors['r'] * (0x6 * 0x295 + 0xbdb + -7000.25), colors['g'] * (-0xc2f + -0x10cb + 7418.75), colors['b'] * (-0xca6 * 0x1 + 0xb37 + 367.75), -0x563 * -0x1 + -0xe * -0x9 + -0x4e2] : [color[-0x2162 + 0x1c2e * -0x1 + -0x3d9 * -0x10] * (-0x21b5 + -0x836 * -0x2 + 4425.75), color[-0x55d * -0x5 + -0x25 * 0x83 + -0x1 * 0x7e1] * (0x2aa * 0x1 + -0x1 * 0xa01 + 1879.75), color[0x2024 + 0x1fb + -0xb5f * 0x3] * (0x72 * -0x9 + 0x19b2 * -0x1 + 7604.75), 0x24f + 0x13 * -0x134 + 0x18a * 0xe], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x10 * 0xb0 + 0x7 * 0x133 + -0x1362]] : color);
}

function Ddropdown(_0x112630, _0x337fb6, _0x207c90, _0x17ee94, _0x1162fa, _0xfc2cc6, _0x5d48aa) {
    var _0x2d0b69 = Input.GetCursorPosition(),
        _0x589792 = _0x2d0b69[-0x987 + 0x1e4c * -0x1 + 0x27d3],
        _0x38bd0e = _0x2d0b69[0x4a + -0x16cc * -0x1 + -0x1715],
        _0x458e6e = _0x5d48aa,
        _0x5b406c = -0x1 * -0x20dd + -0x1 * -0xee6 + -0x2f5f,
        _0x188ce9 = Render.AddFont("Tahoma", -0x1772 + -0x98 * 0x1c + -0x805 * -0x5, 0x9fb + 0x5 * -0x6b9 + -0x1 * -0x1b26),
        _0x1e3389 = -0x1736 + -0x39 * 0xa5 + 0x1 * 0x3bf3,
        _0x4be590 = Render.TextSizeCustom('' + _0x458e6e, _0x188ce9);
    Render.Rect(_0x337fb6 + (0x1ffb * -0x1 + -0x1679 * 0x1 + 0x1 * 0x36c5), _0x207c90 - (0x1e11 + -0x1 * -0xabd + -0x28cd), 0x1d2a + -0x233c + 0x679 * 0x1, -0x38e + 0xd * 0x12b + 0xb8b * -0x1, [-0xc9 * 0x21 + -0x86 * 0x1a + -0xd * -0x310, -0x1 * -0xd93 + -0x5f * -0x5d + -0xa3 * 0x4b, -0x1 * -0x1334 + 0x15 * 0x1c9 + 0x28f * -0x16, -0x3 * -0x515 + -0x2429 + 0x15e9]), Render.Rect(_0x337fb6 + (0x13 * 0xa6 + 0x1bb + -0xdbd * 0x1), _0x207c90, 0xf * 0x4 + 0x15 * -0x35 + 0x486, -0x2 * 0x7ca + 0x5a7 * -0x5 + 0x2beb, [-0x1721 + -0xce + 0x183a, 0xcb7 * -0x1 + -0x5f8 * -0x1 + 0x1c5 * 0x4, -0x1 * -0x260b + -0xd * 0x1fd + -0xbcb, -0x8f + 0x6 * -0x4cc + 0x16 * 0x161]);
    if (_0x589792 > _0x337fb6 && _0x589792 < _0x337fb6 + (0x1634 + 0x1 * -0x17ec + -0x19 * -0x19) && _0x38bd0e > _0x207c90 && _0x38bd0e < _0x207c90 + (-0x47 * 0x61 + -0xca5 + -0x233 * -0x12) + _0x4be590[0x1 * 0x350 + 0xedb + -0x122a]) {
        Render.Rect(_0x337fb6 + (-0x94 * -0x1 + 0x961 + 0x2 * -0x4d2), _0x207c90 - (0x24ca + 0x1 * -0x18e5 + -0xbe4), -0x1223 + -0x6 * -0x177 + 0x9c0, -0xf2a + 0x4 * -0x67f + 0x293c, [color[-0xb30 + -0x74 + 0xba4], color[-0xbeb + -0x1 * -0x6bc + 0x8 * 0xa6], color[0x15a1 + 0x1 * -0x631 + -0xf6e], 0x1ff6 + 0xe * 0x56 + -0x23ab]), Render.Rect(_0x337fb6 + (-0x187 * -0x15 + 0xf7e * -0x2 + -0xc7), _0x207c90, 0xc6a * 0x2 + -0x125 + -0x9 * 0x296, 0x12da + -0x16 * 0x146 + 0x2 * 0x49f, [color[-0x22d3 + 0x2 * 0x63a + 0x165f], color[0xc6d + 0x549 + -0x11b5], color[0x1 * 0xe24 + -0x1 * 0x1315 + 0x4f3], -0x19b9 + -0x14c2 * 0x1 + 0xce * 0x3b]);
        if (Input.IsKeyPressed(0xff8 + 0x6f6 + -0x16ed) && Globals.Realtime() > globaltime + (0x473 * -0x2 + -0x121f + 6917.2)) return globaltime = Globals.Realtime(), "closed";
    }
    Render.FilledRect(_0x337fb6 + (-0x9 * -0xa7 + -0xd5d + -0x7d0 * -0x1), _0x207c90, -0x677 * -0x1 + 0x8cd * -0x1 + 0x2bb, 0x1 * -0x158f + -0xf87 + 0x252a, [-0x13c4 + -0x1 * -0x16eb + -0xb * 0x44, -0xa91 * 0x2 + -0x4 * -0x133 + 0x1095, -0x34c * 0x2 + 0x51 * 0x29 + -0x619, 0x449 * -0x2 + 0x2 * 0x102d + -0x16c9]), Render.FilledRect(_0x337fb6 + (-0x2124 + 0x2493 + -0x31e), _0x207c90 + (0x206 + 0x9a7 + -0xbac), 0x5ff * 0x4 + -0x2 * -0xbc3 + -0x2f1b, 0x1095 * -0x2 + 0x395 * -0x6 + 0x36ba * 0x1, [-0x756 * -0x3 + 0x2375 + -0x393c, -0x14a6 + -0xa7 * 0xb + -0x1 * -0x1c12, 0xa1 * 0x2f + 0x7a * 0x13 + 0xcc7 * -0x3, -0x879 + -0x15 * 0x1 + 0x98d]), Render.StringCustom(_0x337fb6 + (0xd * 0x167 + -0xa37 + -0x7ab), _0x207c90 + (-0x2545 + -0x1536 + -0x1 * -0x3a7f), -0xf69 + -0x3 * 0xa9 + -0x2e6 * -0x6, '' + _0x458e6e, [0x1860 + 0x1bab + 0x24 * -0x16b, 0x4dc + 0x1b2 + -0x58f, -0xce3 + -0x1226 + 0x2008, 0x1 * -0x20b9 + -0x1 * 0x8f9 + -0x6 * -0x70c], _0x188ce9);
    !_0xfc2cc6 && Render.StringCustom(_0x337fb6, _0x207c90 + (-0x3 * -0x11c + -0x1e25 + 0x1ad5), -0x8f * 0x3b + 0x239c + -0x61 * 0x7, _0x112630, [-0x2404 + -0x1c7e + 0x4181 * 0x1, -0x247c + 0x210 + -0x1 * -0x236b, -0x1 * 0x1953 + -0x1682 + 0x30d4, -0x1825 + 0x1 * -0x1db1 + -0x36 * -0x102], _0x188ce9);
    if (_0x1162fa) {
        for (i = 0xa0c * -0x2 + 0x2425 + 0x7 * -0x24b; i < _0x17ee94.length; i++) {
            var _0x1cf8d5 = Render.TextSizeCustom(_0x17ee94[i], _0x188ce9);
            _0x1e3389 += _0x1cf8d5[0x1d2 * -0x10 + 0x4bd * 0x1 + 0x1864], Render.FilledRect(_0x337fb6 + (-0x17b7 + -0x3fb + 0x1c04), 0xb68 + -0x1c09 + 0x3 * 0x593 + _0x207c90 + i * (0x1a3 * 0x17 + -0x2524 + -0x74), -0x1c6 + -0x9a4 * 0x1 + 0x1 * 0xbcf, _0x1cf8d5[-0x3 * -0x836 + 0x6 * 0x39 + -0x1 * 0x19f7] + (0x1 * 0xdf3 + -0x868 + -0x589), [0xe7 * -0x5 + 0xa53 + 0x1 * -0x595, -0x23e2 + 0x1c10 + 0x811, -0x1f11 + -0x11 * -0x3d + 0x1b4c, -0x103d + 0xe1 * -0x19 + -0x1 * -0x2735]);
            if (_0x589792 - (-0x233f + 0x149c + -0x3 * -0x4fd) > _0x337fb6 && _0x589792 - (-0x1a18 + -0x238a * 0x1 + 0x1d3 * 0x22) < _0x337fb6 + (-0x1407 + -0x1 * -0x1e47 + 0x34e * -0x3) && _0x38bd0e > 0xaff * 0x2 + 0x1e80 + -0x35 * 0xfd + _0x207c90 + i * (-0x8 * 0x115 + 0x1 * -0x7b6 + -0x3 * -0x579) && _0x38bd0e < -0x13e3 * 0x1 + 0x1039 * -0x1 + -0x1 * -0x243c + _0x207c90 + i * (-0x1 * 0x1ef9 + 0x11a4 + 0x1 * 0xd62) + _0x1cf8d5[-0x1864 + -0x1 * -0x19e2 + -0x17d]) {
                Render.FilledRect(_0x337fb6 + (-0x794 + 0xaa + 0x73c * 0x1), -0x5 * -0x60f + -0x379 + -0x12 * 0x17c + _0x207c90 + i * (0x2ef + -0x2671 + 0x238f), -0x1880 + 0x23d1 + -0xaec, _0x1cf8d5[-0x9de + 0x139 * 0x1 + -0x29 * -0x36] + (-0xc6e * 0x2 + -0xbb7 * -0x2 + 0x170), [-0x5d * 0xb + -0x16 * -0x1d + 0x5 * 0x56, -0x7a6 + -0x851 + 0x1026, -0x197b + -0x673 * -0x3 + 0x2 * 0x32f, -0x20a6 + 0x58f + 0x59e * 0x5]), Render.StringCustom(_0x337fb6 + (0x495 + 0x2075 + 0x12f * -0x1f), 0x218e + 0x2 * 0x864 + -0x323c + _0x207c90 + i * (-0x22 * -0xc + -0x14 * 0x192 + 0x1ddd), -0x595 + 0x164b + 0x592 * -0x3, _0x17ee94[i], [color[-0x3e3 + 0x1184 + -0xda1], color[-0x2 * 0x9c7 + -0x70 * -0x51 + -0xfe1], color[-0xd76 * -0x2 + 0x1 * 0x20f + -0x1cf9], -0x233d + 0x1968 + 0x56a * 0x2], _0x188ce9);
                if (Input.IsKeyPressed(-0xa02 + 0x4 * -0x42e + 0x1abb)) return _0x5b406c = i, _0x5b406c;
            }
            Render.StringCustom(_0x337fb6 + (-0x43a + 0x1e0b + -0x1978), 0x19f7 + -0x1 * 0x246 + -0xb * 0x225 + _0x207c90 + i * (-0x1 * -0x1d7a + 0x2 * 0x4c0 + 0x7c9 * -0x5), 0x1 * 0x18bd + -0x5c6 * -0x1 + -0x49 * 0x6b, _0x17ee94[i], [-0x64 * -0x11 + -0x24dc + 0x83 * 0x3d, -0x1c32 + 0x1f4f + -0x10f * 0x2, -0xa93 * 0x2 + -0x1a * -0xda + 0x1, 0xd40 * -0x2 + -0x1 * -0x103b + 0xadb], _0x188ce9);
        }
        if (Input.IsKeyPressed(0x102e + -0x7 * -0x196 + -0x1b47) && Globals.Realtime() > globaltime + (-0x859 + 0x1bd + 1692.2)) return globaltime = Globals.Realtime(), "closed";
        Render.Rect(_0x337fb6 + (0xf02 + -0x1bf4 + 0xc * 0x11b), _0x207c90 + (0x13be + -0x2e2 * 0xd + 0x7 * 0x28c), 0x11 * -0x22d + 0x11b6 + 0x13ac, _0x1e3389 + _0x17ee94.length * (-0xdd4 + -0x38c * 0xa + 0x314f) - (0x5a7 * -0x1 + 0x1bac + -0x1602), [0x794 * -0x2 + -0x3 * -0x5cf + -0x1fa, -0x65 * 0x2b + -0x1 * -0x26ef + -0x15a3, 0x9 * -0x24d + -0x17dd + 0x1d * 0x18d, 0x1 * -0xfe8 + 0x518 + 0xbcf]);
    }
}

function Dtextbox(_0x369de7, _0x489d42, _0x4dac0b, _0x3bda08, _0x547035) {
    const _0x53acd4 = Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x2 * 0x573 + 0x172d * 0x1 + -0xc46 * 0x1) / (0x13a5 + 0x9 * 0x10f + -7467.5)) % (Math['PI'] * (-0x1a8 * 0x8 + 0x1835 + 0x1 * -0xaf3)))) * (0x6f2 * 0x4 + -0xd * 0x2c + -0x188d);
    lmao = '';
    var _0x1777ee = Input.GetCursorPosition(),
        _0x315e53 = _0x1777ee[0x37 * 0x89 + -0x26b6 + 0x947],
        _0x2bd0bb = _0x1777ee[0x1f49 * -0x1 + -0x1a59 + 0x39a3],
        _0x9edc2 = Render.AddFont("Tahoma", -0x1 * -0x193b + -0x2394 + 0xa60, 0xc * 0x265 + -0xf1 * -0x23 + -0x3a2b),
        _0x53f823 = '';
    Render.Rect(_0x489d42 + (0xa1c + -0x24 * -0x1a + -0xd7d), _0x4dac0b - (-0x16 * 0x11b + -0x1dcb + -0x120a * -0x3), -0x3d6 + 0x116 * -0x3 + 0x789, 0x574 + 0x1618 + -0x1b76, [-0xa * -0x1d9 + 0x15b7 + -0x27e6, 0xa * 0x175 + -0xac6 * 0x3 + 0x1215, -0x1a7b + -0x3fb * -0x7 + -0xfb, -0x52f * -0x3 + -0x1738 + 0x8aa]), Render.Rect(_0x489d42 + (0x2a * -0x2 + 0x1 * -0x1e16 + 0x10 * 0x1eb), _0x4dac0b, 0x3f1 * -0x1 + -0xac * 0x5 + 0x7c0, 0x9c8 + 0x1021 + -0x11 * 0x185, [-0x1 * -0x17d8 + -0x26 * -0xfd + 0x1 * -0x3d1b, 0x1776 * -0x1 + 0x3 * 0x6f7 + 0x2e6, 0x144 + 0x8 * 0xa3 + -0x19 * 0x3d, -0x1d69 * -0x1 + -0x1157 * -0x1 + -0x2dc1]);
    var _0x3273d5 = "effects/";
    if (_0x3bda08.length == 0x2 * -0xbef + -0x267 + -0x8c5 * -0x3) _0x3273d5 = "ffects/";
    else {
        if (_0x3bda08.length == -0x25 * 0xdd + 0xe5d + 0x119f) _0x3273d5 = "fects/";
        else {
            if (_0x3bda08.length == -0x302 * 0xb + -0x149 + 0x10b * 0x21) _0x3273d5 = "ects/";
            else {
                if (_0x3bda08.length == 0x557 * 0x2 + -0x259 * -0x6 + 0x6f * -0x39) _0x3273d5 = "cts/";
                else {
                    if (_0x3bda08.length == -0x2 * -0x7e5 + -0x1cad * 0x1 + 0xcf1) _0x3273d5 = "ts/";
                    else {
                        if (_0x3bda08.length == -0x3 * 0x78b + 0x1170 + 0x60 * 0xe) _0x3273d5 = 's/';
                        else {
                            if (_0x3bda08.length == 0x13c3 + 0x1b5e * 0x1 + -0x2f11) _0x3273d5 = '/';
                            else _0x3bda08.length == 0xa0 * -0x3 + 0x8d * 0xb + -0x41e && (_0x3273d5 = '');
                        }
                    }
                }
            }
        }
    }
    if (_0x315e53 > _0x489d42 && _0x315e53 < _0x489d42 + (-0xa8e + -0x93 + 0x7 * 0x1b0) && _0x2bd0bb > _0x4dac0b && _0x2bd0bb < _0x4dac0b + (0x2579 + -0x3 * 0x19b + -0x209c) + (-0x9a1 + -0x1a3c + 0x23ee)) {
        _0x53acd4 > 0x8db + 0x244f + -0x2cab ? lmao = '|' : lmao = '';
        Render.Rect(_0x489d42 + (0x843 + -0x7 * 0x581 + 0x1e8b), _0x4dac0b - (-0x1 * 0x1a8d + 0x6b + 0x1a23), 0x99 * 0x2f + 0x1b12 + -0x36b8, 0x121 * -0x17 + 0x7b5 + 0x1258, [color[-0x280 + -0xb * 0x26 + 0x422], color[0x1 * 0xbb7 + 0x1819 + 0x1 * -0x23cf], color[0x185c + 0x196a * 0x1 + -0x31c4], 0xa52 * 0x1 + -0x9f5 * -0x2 + -0x1f3 * 0xf]), Render.Rect(_0x489d42 + (-0x12 * -0xbc + 0x1 * 0x1ed7 + -0x2bc9), _0x4dac0b, 0xc4e + -0x9 * 0x27 + -0xa7c, -0x53 * -0x4d + 0x6ee * -0x2 + -0xb07, [color[0x1348 + -0x1 * -0xd7c + -0x20c4], color[0x4fe + 0x1 * -0xcff + 0x802], color[0xc2c + -0x76d + -0x4bd * 0x1], 0x2165 * 0x1 + 0x784 + 0x2 * -0x13f5]);
        if (_0x3bda08.length < -0x590 + 0x6b * 0x52 + -0x1ca5 * 0x1)
            for (i = -0x16eb + 0x2 * 0xf7b + -0x1 * 0x80b; i < keyCodes.length; i++) {
                Input.IsKeyPressed(keyCodes[i]) && Globals.Realtime() > globaltime + (0xeb0 + 0x110f + -8126.91) && (globaltime = Globals.Realtime(), _0x3bda08 += keyChar[i]), Input.IsKeyPressed(0x15ff + 0x193e + -0x2 * 0x1796) && Input.IsKeyPressed(0x13ce + 0x22 * -0x35 + -0x4 * 0x32f) && Globals.Realtime() > globaltime + (0x147d + 0x1172 + -9710.91) && (globaltime = Globals.Realtime(), _0x3bda08 = _0x3bda08.substring(0x794 + 0x7c * 0x31 + -0x1f50, _0x3bda08.length - _0x3bda08.length));
            }
        Input.IsKeyPressed(0x1b5c + -0x32 * -0x1 + -0x1b86) && Globals.Realtime() > globaltime + (0xd97 * -0x1 + -0xd * 0x13d + 7600.09) && (globaltime = Globals.Realtime(), _0x3bda08 = _0x3bda08.substring(0x71 * -0x47 + -0x11b * 0x1a + 0x3c15, _0x3bda08.length - (0x2de + 0x1 * -0x1f3 + -0x3 * 0x4e)));
    }
    return _0x547035 ? _0x53f823 = _0x3273d5 + _0x3bda08 : _0x53f823 = _0x3bda08, Render.FilledRect(_0x489d42 + (0x36f * -0x7 + -0x1 * 0x8e1 + 0x2132), _0x4dac0b, -0x2 * 0x10d + -0x1 * -0x26e7 + -0x299 * 0xe, 0x3e * -0x7d + 0xd13 + -0x1 * -0x1147, [0x1954 + -0x1 * -0x17e3 + 0xc * -0x415, -0xa84 + -0x919 + 0x13dc, -0xf15 + -0x2 * 0xa58 + 0x240d, -0x1753 + 0x16d6 + 0x17c]), Render.FilledRect(_0x489d42 + (0xc * -0x295 + 0x94d * 0x1 + 0x15f6), _0x4dac0b + (-0x1 * -0x131f + 0x101b + -0x1 * 0x2339), -0x1b92 + -0x2580 + 0x4183, -0x25 * 0xa4 + -0x1faf * -0x1 + 0x3 * -0x2a3, [0x97 + 0x2337 + -0x2393, -0xbf6 + -0xc07 + -0x6 * -0x40a, 0x1380 + -0x1a9a + 0x762, 0x1ef7 * 0x1 + 0x9b * 0x14 + 0x2 * -0x150a]), Render.StringCustom(_0x489d42 + (0x1f9a + -0x661 * -0x3 + -0x326e), _0x4dac0b + (0x1577 + 0xf08 + 0x21 * -0x11b), -0x1b3a + -0x19 + 0x1 * 0x1b53, _0x53f823 + lmao, [0x19a6 + -0x1 * 0xfd7 + -0x8d0, 0x2d * -0x5d + 0x1d3 * -0xa + 0x2396, 0x62b + 0x6fe + 0xc2a * -0x1, -0x1875 + 0x925 + 0xfe6], _0x9edc2), Render.StringCustom(_0x489d42, _0x4dac0b + (0x422 + 0x80e + -0x29 * 0x4c), 0x19 * -0xad + 0x47 * 0x45 + 0xe * -0x29, _0x369de7, [-0x197c + -0x21a6 * 0x1 + 0x7 * 0x897, 0x25 * 0xb3 + 0x49d * 0x2 + 0x2d * -0xc2, 0x9ad + 0x1b1 + 0xf * -0xb1, 0xa0 + 0x1 * 0x1620 + -0x162a], _0x9edc2), _0x3bda08;
}

function cleartabs() {
    aimbottab = ![], antiaimtab = ![], visualstab = ![], misctab = ![];
}
var first = !![],
    firstspec = !![],
    firstkey = !![];

function moveElement(_0x2c50ce, _0x28bafd, _0xf7cadb) {
    cursor_pos = Global.GetCursorPosition();
    if (Input.IsKeyPressed(-0x29f * -0x1 + -0x8cf * 0x3 + 0x17cf) && cursor_pos[0x17 * 0x151 + -0x1 * 0x19bc + -0x48b] > _0x2c50ce[0xb3b + -0x1844 + 0x1 * 0xd09] - (0x1d80 + 0x1 * -0x8cb + -0x14b0) && cursor_pos[-0x1e1f + -0x2d7 * -0x5 + 0xfec] < _0x2c50ce[0x122b + 0x5a2 + -0x17cd] + _0x28bafd + (-0x47 * -0x17 + 0x20c2 + -0x271e) && cursor_pos[0x3 * 0xace + 0x1 * 0xe1f + 0x2 * -0x1744] > _0x2c50ce[-0x1 * -0xa9 + 0x8d9 + 0x1 * -0x981] - (-0xeeb + -0x19b0 + 0x5 * 0x820) && cursor_pos[0x19e6 + -0x31 * 0xb3 + 0x42f * 0x2] < _0x2c50ce[-0x1 * 0xb6c + 0x1 * -0x1292 + 0x449 * 0x7] + _0xf7cadb) return first && (difference = [cursor_pos[0x51a * -0x4 + -0x1 * -0x1ab9 + -0x651] - _0x2c50ce[0x1f19 + 0x147 * -0x17 + 0x5 * -0x58], cursor_pos[0x1 * -0x49e + 0x1f * 0x1 + 0x480] - _0x2c50ce[0x266d + -0xb23 * -0x1 + -0x1 * 0x318f]], first = ![]), [cursor_pos[-0x1858 + -0x4 * 0x79 + 0x1a3c] - difference[0x1e28 + -0x710 + -0x2e3 * 0x8], cursor_pos[-0x2026 + -0x1dd1 + 0x3df8] - difference[0x1 * -0x2254 + -0x80f * -0x1 + 0x1a46]];
    else {
        if (!first && Input.IsKeyPressed(-0x1964 + -0x1 * -0x195f + 0x6)) return [cursor_pos[-0x230c + 0x390 + -0x7df * -0x4] - difference[-0xe * -0xb1 + -0xe * 0xb7 + 0x54], cursor_pos[-0x6 * -0x2a9 + 0x19e6 * -0x1 + 0x9f1] - difference[-0x68e + -0x2121 + 0x27b0]];
        else return first = !![], _0x2c50ce;
    }
}

function moveElementspec(_0xeb8493, _0x188357, _0x2d59e8) {
    cursor_pos = Global.GetCursorPosition();
    if (Input.IsKeyPressed(0x1e64 + -0x568 + -0x1 * 0x18fb) && cursor_pos[0x3d * 0x88 + 0x9 * -0x392 + -0x23 * 0x2] > _0xeb8493[0x2 * -0x153 + 0x144a + -0x11a4] - (0x16f2 + 0x85a * -0x3 + 0x221 * 0x1) && cursor_pos[0x10bd * -0x2 + 0x1030 + 0x114a] < _0xeb8493[-0x1cf6 + -0x1391 + 0x3087] + _0x188357 + (0x2a * 0x4d + -0x1 * -0x1218 + -0x1eb5) && cursor_pos[0xe01 + -0x26d8 + 0x109 * 0x18] > _0xeb8493[0x25f * -0x8 + 0xd52 + -0x5a7 * -0x1] - (-0x37c + 0x879 + 0x1a8 * -0x3) && cursor_pos[-0x453 + 0xcc5 * 0x3 + -0x21fb] < _0xeb8493[-0x1 * -0x985 + -0x8e * -0x13 + -0x140e] + _0x2d59e8) return firstspec && (difference = [cursor_pos[0x207e + 0x1cc0 + -0x3d3e] - _0xeb8493[-0xb3f * 0x1 + 0x1 * -0x737 + 0x1276], cursor_pos[-0x517 + 0x10bf + -0xba7] - _0xeb8493[-0x1747 + 0x2c5 * 0x1 + 0x1483]], firstspec = ![]), [cursor_pos[0x18be + 0x1b5d + -0x341b] - difference[-0x2228 + 0x622 + 0x1c06], cursor_pos[0xfc2 * 0x1 + -0x23c6 + 0x401 * 0x5] - difference[0x1703 * 0x1 + -0x7fd * -0x1 + -0x1eff]];
    else {
        if (!firstspec && Input.IsKeyPressed(-0x20b * 0x2 + -0x1 * 0x1f39 + 0x2350)) return [cursor_pos[0xb * 0x371 + 0x599 * -0x5 + -0x9de] - difference[0x61 * -0x11 + -0x1e0c + 0x247d], cursor_pos[0x1508 + -0x4c * -0x75 + -0x37c3] - difference[-0x267 * -0xc + 0x6ab * 0x1 + -0x237e]];
        else return firstspec = !![], _0xeb8493;
    }
}

function moveElementkey(_0xd309e7, _0x372037, _0x2f35ac) {
    cursor_pos = Global.GetCursorPosition();
    if (Input.IsKeyPressed(0xd20 + -0x59c + 0x281 * -0x3) && cursor_pos[-0x1 * 0x2433 + -0x230c * 0x1 + 0xd * 0x57b] > _0xd309e7[-0xf1 * 0x6 + -0x1f8d + 0x2533] - (-0x2411 + -0x2 * 0x2f2 + 0x29fa * 0x1) && cursor_pos[-0x1237 + -0xc5 + 0x1e * 0xa2] < _0xd309e7[-0x2f + -0x469 * -0x2 + 0x43 * -0x21] + _0x372037 + (0x13 * 0x143 + 0x239d + -0x3b91) && cursor_pos[-0x1d77 + -0x3 * -0xc95 + 0xa3 * -0xd] > _0xd309e7[0x1dbf + 0x85a + -0x8 * 0x4c3] - (-0xf33 + -0x165e + 0x2596) && cursor_pos[-0x74a + 0x2289 + -0x1b3e] < _0xd309e7[-0x21e6 + -0x19 * 0x102 + 0x3b19] + _0x2f35ac) return firstkey && (difference = [cursor_pos[-0x148f + 0x3 * -0xc64 + -0x39bb * -0x1] - _0xd309e7[0x1652 + 0xf96 + -0x2 * 0x12f4], cursor_pos[-0xcfb + -0x8e8 + 0x15e4] - _0xd309e7[0x332 + -0x1 * -0xc9 + -0x3fa]], firstkey = ![]), [cursor_pos[0x65 * 0x5b + 0x1 * -0x56f + -0x1e78] - difference[-0x1 * -0x38f + 0xbfd + -0x5 * 0x31c], cursor_pos[-0x179 + -0x1849 + -0x5 * -0x527] - difference[-0xe7f * 0x1 + -0x1 * -0x12ef + -0x46f]];
    else {
        if (!firstkey && Input.IsKeyPressed(-0x1 * -0x593 + -0x2 * 0xcbb + 0x13e4)) return [cursor_pos[-0xb71 + -0x526 * 0x4 + -0x1 * -0x2009] - difference[0x4d * 0x29 + 0x1d8a + -0x3 * 0xdf5], cursor_pos[0x1 * -0x159a + -0x7a9 + -0x1d44 * -0x1] - difference[0x838 * 0x3 + 0x144a + -0x5 * 0x8fd]];
        else return firstkey = !![], _0xd309e7;
    }
}
var textboxstring = "cube_white",
    base = "vgui/white";

function MenuRender() {
    if (!yes) return;
    UI.SetValue("Misc", "JAVASCRIPT", "Script items", "improveddtcheck", improveddt), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "lethaldtcheck", lethaldt), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "safeawpcheck", safeawp), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "safelimbcheck", safelimb), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "dtbaimcheck", dtbaim), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "mindmgcheck", mindmg), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "awpcheck", awpautobuy), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "nameespcheck", nameesp), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "weaponiconscheck", weaponicons), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "hitmarkerscheck", hitmarkers), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "legacykillcheck", legacykill), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "transparentnadecheck", transparentnade), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "customchamcheck", customcham), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "speclistcheck", speclist), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "keybindlistcheck", keybindlist), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "manualaacheck", manualaa), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "legitaacheck", legitaa), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "AA mode", chosenoption), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "manualmodes", chosenthing), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "customchampreset", preset), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "adaptiveflagcheck", adaptiveflag), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "disableflagcheck", disableflag), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "fakeduckcheck", fakeduck), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "speedcheck", speedupfd), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "watermarkcheck", watermark), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "clantagzcheck", clantagz), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "hitlogcheck", hitlog), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "tponpeekcheck", tponpeek), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "autopeekcheck", autopeek), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "r8hccheck", r8hc), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "fastduckcheck", fastduck), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "rainbowlinecheck", rainbowline), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "rainbowmenucheck", rainbowmenu), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "underglowcheck", underglow), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "killsaycheck", killsay), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "pulsatecheck", pulsate), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "Animated Indicators", animatedindicators), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "fakeamountcheck", fakeamount), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "Static color", staticcolor), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "Minimum damage", mindmgslider), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "Blend amount", blendslider), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "Hitchance", r8slider), pos = moveElement(pos, 0x1 * -0x215f + -0x17ff + -0x1da9 * -0x2, -0x1 * 0x2533 + -0x1 * -0x2051 + -0x140 * -0x4);
    var _0x376d00 = pos[-0x992 * 0x1 + 0xf5 + 0x7 * 0x13b] + (-0xd81 + -0x1 * 0x23d1 + 0x1 * 0x317d),
        _0x4ea4ed = pos[0x48b * -0x6 + -0x925 * -0x1 + 0x3 * 0x60a] + (0x5 * 0x4d8 + -0x1525 * 0x1 + -0x2a5);
    if (UI.IsMenuOpen()) {
        Dmenu('D', pos[-0x2133 + -0x8da * 0x4 + 0xc1 * 0x5b], pos[-0x1fc0 + 0x1 * -0x331 + 0x2 * 0x1179], 0x186c + 0x2066 + -0xa1 * 0x56, -0x2 * 0xb8f + 0x9fb + 0xe4f);
        Dtab("Aimbot", pos[0x103f * -0x1 + 0x735 + 0x1 * 0x90a] + (-0x1c * 0xed + 0x5d7 + 0x1451), pos[-0x467 * 0x2 + 0x9 * 0x15a + -0x1 * 0x35b] + (0x218c + 0x7 * 0xa5 + -0x1 * 0x25f1)) && (cleartabs(), aimbottab = !![]);
        Dtab("Anti-aim", pos[0xde + 0x779 + -0x857 * 0x1] + (-0xa00 + -0x1 * 0x591 + -0x5 * -0x33f), pos[0xcfa + -0x1 * 0x7f9 + -0x8 * 0xa0] + (0x10aa + -0x1b25 + 0xa99)) && (cleartabs(), antiaimtab = !![]);
        Dtab("Visuals", pos[-0x11f0 + 0x18bf + -0x6cf] + (-0x882 + -0xce1 * -0x1 + -0x33d * 0x1), pos[-0x7d * 0xb + 0x1f6 * 0x9 + 0x623 * -0x2] + (0x6b * -0x53 + 0x18d2 * 0x1 + 0x9fd)) && (cleartabs(), visualstab = !![]);
        Dtab("Misc", pos[0x256c + 0xb99 + 0x59 * -0x8d] + (-0x4 * -0x851 + 0x5 * 0x783 + -0x4543), pos[-0xb0f * 0x1 + 0x2 * -0x6d5 + 0x1 * 0x18ba] + (0x22 * 0xdb + 0xec4 + -0x2bbc)) && (cleartabs(), misctab = !![]);
        if (aimbottab) {
            mindmg ? Dcategory(_0x376d00 - (0x41 + -0x4 * -0x434 + -0x1107), _0x4ea4ed - (0xdd2 + 0x1405 + -0x21c8), 0x18e * -0xe + 0xf * 0x3f + 0x3 * 0x649, 0x7 * -0x15d + -0x1582 + -0x1f49 * -0x1, "Aimbot") : Dcategory(_0x376d00 - (0x1151 * 0x1 + 0x1935 + 0xa9f * -0x4), _0x4ea4ed - (-0x17ac + 0x660 + -0x5c9 * -0x3), 0x2209 * 0x1 + 0x1 * 0x166f + -0x4a4 * 0xc, -0x1 * -0x1990 + -0x2bc + -0x3 * 0x78d, "Aimbot");
            r8hc && mindmg ? Dcategory(_0x376d00 - (0x62 * -0x1 + -0x3 * 0xccf + 0x75 * 0x55), _0x4ea4ed - (0x20bb + 0xbb2 + -0x2c5e), 0x1525 + 0x23ae + -0x380b * 0x1, -0x12f6 * 0x2 + -0x75e * 0x5 + 0xc83 * 0x6, "Aimbot") : Dcategory(_0x376d00 - (-0x19f1 + -0x161 * 0x8 + 0x2503), _0x4ea4ed - (0x3c7 + -0x1 * -0x4d5 + -0xc7 * 0xb), -0x989 + 0x60 * 0x14 + 0x2d1, -0x1c5 * 0x9 + 0xf4d + 0xcd, "Aimbot");
            r8hc ? Dcategory(_0x376d00 - (-0x1023 + -0x655 + 0x1682), _0x4ea4ed - (0x16a8 + 0x34d * -0x3 + -0xcb2), 0x1 * 0x2610 + -0x1 * 0xf7a + -0x15ce, -0x17a8 + 0x717 * -0x5 + 0x3b5c, "Aimbot") : Dcategory(_0x376d00 - (-0x204a + -0x2 * -0x4e1 + 0x1692), _0x4ea4ed - (0x1697 + 0x8 * 0x181 + -0x2290), -0x1 * -0x1d04 + -0xe25 * 0x2 + 0x7 * 0x2, 0x1309 * -0x1 + -0x1f57 + 0x328d * 0x1, "Aimbot");
            Dcategory(_0x376d00 + (-0x1c7c + -0x2186 + 0x2 * 0x1f6f), _0x4ea4ed - (-0xf00 + 0x89c + 0x673), 0x108c + -0x1 * -0x1c74 + -0x2c38, 0x19ec + -0x1206 * -0x2 + -0x3dbc, "Doubletap"), Dcategory(_0x376d00 + (-0x1d81 + -0x1 * -0x17a8 + -0x11 * -0x65), _0x4ea4ed + (-0x2 * 0x11a5 + 0x19f1 + 0x99a), 0x3 * 0xb3d + -0x21 * -0xd4 + -0x3c43, 0x40 * -0x6b + 0x1b96 + -0xa9, "Target safety");
            if (Dcheckbox("Revolver hitchance in air", _0x376d00, _0x4ea4ed, r8hc)) r8hc = !r8hc;
            if (r8hc) {
                r8slider = Dslider("Hitchance", _0x376d00, _0x4ea4ed + (-0x145b + 0x126c + 0x64 * 0x5), r8slider, -0x12 * 0x1ab + -0x1 * 0x19af + 0x37b6);
                var _0x63d178 = pos[0x1ac3 + -0x2352 + 0x890] + (0x180f + 0x33a + 0x1ac7 * -0x1);
            } else var _0x63d178 = pos[0x2534 + 0x1aae + -0x4f * 0xcf] + (-0x197c + -0xfc1 + 0x29ab);
            if (Dcheckbox("Minimum damage override", _0x376d00, _0x63d178 + (0x6b * -0x49 + -0xbd8 + -0x3d * -0xb2), mindmg, !![], "Overrides minimum damage")) mindmg = !mindmg;
            mindmg && (mindmgslider = Dslider("Damage", _0x376d00, _0x63d178 + (0x25bd + 0x242f + -0x49d8), mindmgslider, -0x50e + -0x2df + 0x7ee, !![], !![]));
            if (Dcheckbox("Improved Doubletap", _0x376d00 + (-0x14f1 + 0x1 * 0x8c8 + 0xd0f), _0x4ea4ed, improveddt, !![], "Speeds up doubletap")) improveddt = !improveddt;
            if (Dcheckbox("Ensure Lethal Doubletap", _0x376d00 + (-0x3 * -0x5fc + -0xb76 + -0x598), _0x4ea4ed + (-0x1321 + 0xbd * 0x1 + -0x1 * -0x1273), lethaldt, !![], "HP / 2 while doubletap is active")) lethaldt = !lethaldt;
            if (Dcheckbox("Force Doubletap baim", _0x376d00 + (0x13d5 * 0x1 + 0xb68 + -0x1e57), _0x4ea4ed + (-0x21fa + -0x46c + 0x2684), dtbaim, !![], "Prefers body while doubletapping")) dtbaim = !dtbaim;
            if (Dcheckbox("Force safe point on awp", _0x376d00 + (-0x1a92 + -0xb59 * 0x1 + 0x26d1), _0x4ea4ed + (0x45 * -0x6b + 0x1 * -0x2581 + 0x42a8), safeawp)) safeawp = !safeawp;
            if (Dcheckbox("Force safe point on limbs", _0x376d00 + (-0x48b + 0x1 * 0x20bc + -0x1b4b), _0x4ea4ed + (0x3d9 + 0x226c + -0x25e6), safelimb)) safelimb = !safelimb;
        }
        if (antiaimtab) {
            fakeduck ? (Dcategory(_0x376d00 - (-0xd6 * 0x1b + 0x1 * -0x184d + -0x1 * -0x2ee9), _0x4ea4ed - (0xa3 * -0x20 + -0x23e3 + 0x216 * 0x1b), -0xfff * 0x1 + 0x1494 + -0x3cd, 0x5e3 * 0x2 + 0xb45 * 0x3 + -0x2d31, "Desolate Anti-aim"), _0x533b39 = pos[0x5f2 * 0x3 + 0xce + -0x12a3] + (-0x6d * 0x3f + 0x22 * 0x5 + 0x8e2 * 0x3)) : (Dcategory(_0x376d00 - (-0x1ebf + 0xc1 * 0x25 + -0x94 * -0x5), _0x4ea4ed - (-0x23cb * -0x1 + -0x1 * 0x20ef + 0x1 * -0x2cd), 0x955 + 0x33 * -0x4 + -0x7c1, -0x33 * 0x21 + -0x17 * 0x13d + 0x1 * 0x2363, "Desolate Anti-aim"), _0x533b39 = pos[-0xd0 * 0xc + 0x222e + -0x186d] + (-0x1 * -0x1663 + 0x36d * -0x5 + -0x4d4));
            Dcategory(_0x376d00 + (0x1 * -0x5c3 + -0x1ddd * -0x1 + -0x173e), _0x4ea4ed - (-0x8e1 + 0xf9f + -0x6af), -0x363 + 0x3fd * -0x4 + 0x141f, 0x1 * -0x26e7 + 0x1 * 0x1688 + 0x4 * 0x423, "Fakelag");
            if (Dcheckbox("Manual AA", _0x376d00, _0x4ea4ed, manualaa)) manualaa = !manualaa;
            if (server == "valve") {
                if (Dcheckbox("Matchmaking fakeduck", _0x376d00, _0x4ea4ed + (-0x203e * -0x1 + -0x40a + -0x1c25), fakeduck)) fakeduck = !fakeduck;
                if (fakeduck) {
                    if (Dcheckbox("Speed up FD", _0x376d00, _0x4ea4ed + (0xb00 + -0x1d74 + 0x1292), speedupfd)) speedupfd = !speedupfd;
                }
            } else {
                if (Dcheckbox("Matchmaking fakeduck [disabled]", _0x376d00, _0x4ea4ed + (0x835 * 0x1 + -0x8db + 0xb5), fakeduck)) fakeduck = !fakeduck;
                if (fakeduck) {
                    if (Dcheckbox("Speed up FD", _0x376d00, _0x4ea4ed + (-0xae1 + -0xbc0 + -0x1 * -0x16bf), speedupfd)) speedupfd = !speedupfd;
                }
            }
            if (Dcheckbox("Legit AA on use key", _0x376d00, _0x533b39 + (0x1b32 + 0x24f7 + -0x400b), legitaa)) legitaa = !legitaa;
            var _0xe23223 = ["Off", "Primary", "Anti-brute", "Reverse freestand", "Legit"],
                _0x4473be = Ddropdown("AA mode", _0x376d00, _0x533b39 + (-0x299 * -0x1 + 0xc72 + -0x1 * 0xede), _0xe23223, arrayopened, ![], _0xe23223[chosenoption]);
            _0x4473be != undefined && (_0x4473be == "closed" ? arrayopened = !arrayopened : (chosenoption = _0x4473be, arrayopened = !arrayopened));
            if (UI.GetValue("AA mode") == 0xb47 + 0x20de + 0x403 * -0xb) legitaa = ![];
            if (Dcheckbox("Adaptive fakelag", _0x376d00 + (0x6e5 * 0x2 + -0x16d * 0x12 + 0xcc6), _0x4ea4ed, adaptiveflag)) adaptiveflag = !adaptiveflag;
            if (Dcheckbox("Disable fakelag while standing", _0x376d00 + (0x104e + 0x1676 + -0x25de), _0x4ea4ed + (-0x159 + 0xe0b * 0x1 + -0xca3), disableflag)) disableflag = !disableflag;
        }
        if (visualstab) {
            Dcategory(_0x376d00 - (0x1516 + 0x3 * 0x1dd + 0x3 * -0x8e1), _0x4ea4ed - (-0x9f * 0x1f + 0x100d + 0x343), 0x1914 * -0x1 + 0x2657 + 0xc7b * -0x1, 0x1 * -0xdd8 + -0x217e + 0x2fa1, "Player ESP");
            customcham && Dcategory(_0x376d00 - (0x1b84 + -0x2fb * 0xd + -0x241 * -0x5), _0x4ea4ed - (0x14dc + -0x1 * -0x18f5 + -0x2dc2), -0x1c19 + -0x1 * -0xd2b + 0xfb6, 0x220a * 0x1 + -0x3bf + -0x1de7, "Player ESP");
            customcham && UI.GetValue("customchampreset") == -0x1081 + -0x66f * -0x3 + -0x2cc && Dcategory(_0x376d00 - (-0x1f * -0x131 + 0x20eb + -0x45d0), _0x4ea4ed - (-0x1569 + 0xa11 + 0x8b * 0x15), 0x3 * -0x6a9 + -0x21df + -0xe * -0x3e7, -0x4 * -0x333 + -0xe9c + 0x266, "Player ESP");
            UI.GetValue("manualmodes") == 0x2ed * 0x7 + -0x2116 + 0xc9d && Dcategory(_0x376d00 + (0x1 * 0x25c8 + -0xe45 + -0x16a7 * 0x1), _0x4ea4ed - (0x1 * -0x1aff + -0x44f * -0x4 + 0x9d2), 0x1df5 + -0x20e6 + 0x3b9, -0xb9f + 0xfb8 * 0x2 + -0x136d, "Indicators");
            UI.GetValue("manualmodes") == 0x1485 + -0xbbc + -0x8c7 && legacykill && Dcategory(_0x376d00 + (-0x817 + -0x1 * -0x907 + -0x5 * 0x4), _0x4ea4ed - (0x13 * -0x19d + 0x9cd + -0x35 * -0x65), 0x15c + -0x1e90 * 0x1 + 0x1dfc, 0x117a + 0x50 * -0x26 + 0x7 * -0xbb, "Indicators");
            if (legacykill) {
                Dcategory(_0x376d00 + (0x6c0 + -0x3 * 0x4f8 + 0x904), _0x4ea4ed - (-0x1 * -0xd54 + 0x1 * -0x1d33 + 0xfee), 0xaa9 + -0x3 * 0x2f + -0x954, -0x1b86 + 0x33 * 0x6 + 0x89 * 0x32, "Indicators");
                var _0x533b39 = pos[0x13 * -0x91 + 0x6c7 * 0x1 + 0x1 * 0x3fd] + (0x1 * -0xf8d + -0x1 * 0x47f + 0x298 * 0x8);
            } else {
                Dcategory(_0x376d00 + (0x1 * 0xe6f + 0xf4b + -0x1cde), _0x4ea4ed - (-0xf8b + -0x1 * -0x24fa + 0xe4 * -0x18), -0x1 * -0x245b + 0x1adf + 0x1 * -0x3e72, 0x25ca + -0x25c7 + -0x1 * -0x52, "Indicators");
                var _0x533b39 = pos[-0x5 * -0x3ee + 0xf5a + -0x20f * 0x11] + (0x1 * -0xa27 + -0x2217 + 0x2cd9);
            }
            if (Dcheckbox("Name ESP", _0x376d00, _0x4ea4ed, nameesp, !![], "Creates a custom name ESP")) nameesp = !nameesp;
            if (Dcheckbox("Custom weapon icons", _0x376d00, _0x4ea4ed + (0x1b24 + -0x2eb * 0x5 + 0x63f * -0x2), weaponicons, !![], "Creates coloured weapon icons")) weaponicons = !weaponicons;
            if (Dcheckbox("Hitmarker", _0x376d00, _0x4ea4ed + (0x8d8 + 0x5dc + 0x74b * -0x2), hitmarkers)) hitmarkers = !hitmarkers;
            if (Dcheckbox("Custom chams", _0x376d00, _0x4ea4ed + (-0x122b * -0x1 + -0x1957 + -0x13 * -0x63), customcham)) customcham = !customcham;
            if (customcham) {
                UI.GetValue("customchampreset") == 0x5 * -0x3c7 + 0x1 * 0x2063 + -0x1b0 * 0x8 && (base = Dtextbox("Basetexture", _0x376d00, _0x4ea4ed + (0xb1e + -0x2c3 + -0x806), base), textboxstring = Dtextbox("Envmap", _0x376d00, _0x4ea4ed + (-0x2628 + -0x7 * 0x47b + 0x45f3), textboxstring, !![]));
                var _0x5458cd = ["Custom", "Skeet", "Metal", "Pearl"],
                    _0x28a8cc = Ddropdown("Presets", _0x376d00, _0x4ea4ed + (0xca * 0x8 + -0x2630 + 0x201c), _0x5458cd, chamarray, ![], _0x5458cd[preset]);
                _0x28a8cc != undefined && (_0x28a8cc == "closed" ? chamarray = !chamarray : (preset = _0x28a8cc, chamarray = !chamarray));
            }
            if (Dcheckbox("Keybinds list", _0x376d00 + (-0x17 * -0x115 + -0x120 + 0x3 * -0x79f), _0x4ea4ed, keybindlist, !![], "Displays keybinds")) keybindlist = !keybindlist;
            if (Dcheckbox("Spectator list", _0x376d00 + (-0x204 + -0x11 * -0x7 + 0x273), _0x4ea4ed + (0x125d + -0x3 * -0x962 + 0x3 * -0xf7c), speclist, !![], "Displays spectators")) speclist = !speclist;
            if (Dcheckbox("Legacy kill indicators", _0x376d00 + (0x17cc + 0x1 * -0x9d5 + -0x29d * 0x5), _0x4ea4ed + (-0x4 * -0x575 + 0x3 * 0x755 + 0xa7 * -0x43), legacykill, !![], "Returns onetap v2 kill indicators")) legacykill = !legacykill;
            if (legacykill) {
                if (Dcheckbox("Animated indicators", _0x376d00 + (0x4 * -0x22f + -0x17b * -0xd + -0x99d), _0x4ea4ed + (-0xaf1 + -0x618 + 0x1136), animatedindicators, !![], "Animates onetap v2 kill indicators")) animatedindicators = !animatedindicators;
                if (Dcheckbox("Static color", _0x376d00 + (0x2e0 + 0xf1f + -0x1119), _0x4ea4ed + (0xda7 + 0x962 * 0x3 + -0x2991), staticcolor)) staticcolor = !staticcolor;
            }
            if (UI.GetValue("manualmodes") == -0x1c06 + 0xd04 + 0xf04) {
                if (Dcheckbox("Fake amount color", _0x376d00 + (-0x150e + 0xa6 * 0x2a + -0x548), _0x533b39 + (-0x41a + 0x2 * -0xe72 + 0x2117), fakeamount, !![], "Animates onetap v2 kill indicators")) fakeamount = !fakeamount;
            }
            var _0x1c37cc = ["Off", "Simple", "Advanced"],
                _0x39e4f1 = Ddropdown("AA Indicator", _0x376d00 + (0xac * -0x1e + -0x1cb9 + 0x31c7), _0x533b39, _0x1c37cc, arrayopened2, ![], _0x1c37cc[chosenthing]);
            _0x39e4f1 != undefined && (_0x39e4f1 == "closed" ? arrayopened2 = !arrayopened2 : (chosenthing = _0x39e4f1, arrayopened2 = !arrayopened2));
        }
        if (misctab) {
            underglow ? (Dcategory(_0x376d00 - (-0x1 * 0x94d + 0x12 * -0x163 + 0x224d), _0x4ea4ed - (0x1 * 0x695 + 0x893 * 0x1 + -0xf19), 0xe0d + 0x2 * 0x49d + -0x167f, -0x2444 + 0x2bb * 0x9 + 0x11b * 0xb, "Visual misc"), _0x533b39 = pos[0x113 * 0x22 + 0xc * 0xf2 + -0x2fdd * 0x1] + (-0xf * 0xc + 0x270f + -0x2 * 0x12ef), sy3 = pos[-0xf19 + -0x22ca + -0xce * -0x3e] + (-0x1013 * -0x2 + -0x4c9 * 0x1 + -0x2b * 0xa0)) : (Dcategory(_0x376d00 - (-0x1 * 0x1a5c + 0xa0a + 0x105c), _0x4ea4ed - (-0x4 * -0x38b + -0xa66 + -0x3b7), 0xd3 * 0x2b + -0x12 * 0x1d2 + -0x1e5, -0xc2a + 0x4ca + 0x7c9, "Visual misc"), _0x533b39 = pos[-0x4 * 0x745 + 0x69c + -0xb * -0x20b] + (-0x2655 + -0x5a9 + 0x2c6c), sy3 = pos[-0x4a * 0x42 + -0xc60 + 0x1f75 * 0x1] + (0x1 * 0x29b + -0x25 * -0xf9 + -0x262a));
            transparentnade && (Dcategory(_0x376d00 - (-0x45 + -0xab9 * -0x1 + -0xa6a), _0x4ea4ed - (-0x2bc + -0x1 * -0x1edd + -0x1c12), 0x3 * -0x453 + 0xbe6 * 0x1 + 0x5f * 0x5, -0x10c9 * -0x1 + -0x16df + -0xbb * -0x9, "Visual misc"), sy3 = pos[-0x1 * -0x1a4d + 0x2068 * -0x1 + 0x61c] + (0xe8f + 0x71 * 0x1f + -0x1bbc));
            transparentnade && underglow && (Dcategory(_0x376d00 - (0xb21 + -0x25f * 0x1 + 0x117 * -0x8), _0x4ea4ed - (0xe * 0x2b1 + -0x1e90 + 0x1 * -0x70f), 0x3 * -0x233 + 0x1735 + 0x1 * -0xfd4, 0x91f + 0x11e * 0x8 + -0x1183, "Visual misc"), sy3 = pos[0x235a + -0x1 * 0x1f85 + 0x62 * -0xa] + (0x23 * -0xa7 + 0x5a + -0x2 * -0xb86));
            Dcategory(_0x376d00 + (-0x9 * -0x445 + -0x117f + -0x1412), _0x4ea4ed + (-0x26 * -0x2a + 0x1e5c + -0x2457), -0x2419 * -0x1 + 0x1e03 + -0x4154, 0x26f * -0x3 + 0x1fff + -0x1f * 0xca, "Misc"), Dcategory(_0x376d00 + (0xef3 + -0xf7b + 0x164), _0x4ea4ed - (0xdff + -0x20b * 0x13 + 0x18e1), -0x250d + -0x5 * 0x3f5 + 0x399e, -0x8 * -0x115 + -0xbe1 * 0x2 + 0x97 * 0x1a, "Movement");
            if (Dcheckbox("Watermark", _0x376d00, _0x4ea4ed, watermark, !![], "Desolate watermark")) watermark = !watermark;
            if (Dcheckbox("Rainbow menu", _0x376d00, _0x4ea4ed + (-0x3bf + 0x109e + -0xcd0), rainbowmenu)) rainbowmenu = !rainbowmenu;
            if (Dcheckbox("Rainbow line", _0x376d00, _0x4ea4ed + (0x1 * 0x26c7 + 0x25f9 * 0x1 + -0x4ca2), rainbowline)) rainbowline = !rainbowline;
            if (Dcheckbox("Underglow", _0x376d00, _0x4ea4ed + (-0x1c9e + 0x206b + -0x3a0), underglow)) underglow = !underglow;
            if (underglow) {
                if (Dcheckbox("Pulsate", _0x376d00, _0x4ea4ed + (0x10 * -0x64 + 0x1178 + -0x26 * 0x4a), pulsate)) pulsate = !pulsate;
            }
            if (Dcheckbox("Transparency on grenade", _0x376d00, _0x533b39 + (0x17 * -0xbf + 0x3 * -0x3fe + 0x1d5f * 0x1), transparentnade)) transparentnade = !transparentnade;
            transparentnade && (blendslider = Dslider("Blend amount", _0x376d00, _0x533b39 + (-0x1ad9 * 0x1 + -0x7a3 * -0x1 + 0x1377), blendslider, 0x21e9 * 0x1 + -0x1a * -0xb + -0x2306));
            if (Dcheckbox("Kill say", _0x376d00, sy3 + (0x15d5 + 0x1d5c + -0x32e6), killsay)) killsay = !killsay;
            if (Dcheckbox("Fast duck", _0x376d00 + (-0x85 * -0x28 + 0x2495 * -0x1 + 0x19 * 0xab), _0x4ea4ed, fastduck)) fastduck = !fastduck;
            if (Dcheckbox("Teleport on peek", _0x376d00 + (0xbd * -0x12 + 0x1 * -0x20db + -0x2f0b * -0x1), _0x4ea4ed + (0x3b * -0x2e + 0x1bf0 + -0x1 * 0x1147), tponpeek)) tponpeek = !tponpeek;
            if (Dcheckbox("Auto peek", _0x376d00 + (-0x4 * -0x1ab + 0x912 + 0x2f8 * -0x5), _0x4ea4ed + (-0x4cc + -0x12d3 + 0x17bd), autopeek)) autopeek = !autopeek;
            if (Dcheckbox("Hitlogs", _0x376d00 + (0x20a8 + -0x89 * 0x19 + 0x3ad * -0x5), _0x4ea4ed + (0x1ceb + -0x63a + -0x1661), hitlog)) hitlog = !hitlog;
            if (Dcheckbox("Clantag", _0x376d00 + (-0x36d * -0x9 + 0x5 * -0x496 + -0x701), _0x4ea4ed + (-0x2060 + -0xd * 0x14e + -0x1 * -0x31b5), clantagz, !![], "Desolate clantag")) clantagz = !clantagz;
            if (Dcheckbox("Faster awp autobuy", _0x376d00 + (-0x1786 + -0x29 * -0x2 + -0x181a * -0x1), _0x4ea4ed + (0x86e * -0x1 + 0x1bcf + -0x63 * 0x31), awpautobuy, !![], "Autobuys the awp faster")) awpautobuy = !awpautobuy;
        }
    }
    UI.SetValue("Misc", "JAVASCRIPT", "Script items", "menu list x", pos[0x3e + 0x1 * 0xd72 + -0xdb0]), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "menu list y", pos[0x1d75 + 0x4 * 0x9b7 + -0x2 * 0x2228]);
}
Cheat.RegisterCallback("Draw", "MenuRender");

function player_death() {
    if (Entity.GetEntityFromUserID(Event.GetInt("attacker")) == Entity.GetLocalPlayer() && legacykill) {
        var _0x2a686b = Render.GetScreenSize()[0x64c + -0x2 * -0x1309 + -0x12 * 0x277] / (0x503 * -0x7 + -0x1fe5 + -0x217e * -0x2),
            _0x2b82c7 = Render.GetScreenSize()[0x5 * 0x2c9 + -0xe45 + 0x59] / (-0x2 * 0x1373 + -0x2f9 * -0xb + 0x635),
            _0x8a5e1f = [-0x898 * 0x4 + 0x5 * -0x190 + 0x2a6c, 0x470 + -0xf * -0x4d + -0x899 + (-0x24f5 + 0x2572 + -0x5f), 0x81d + 0x22f9 + -0x2a62 + (-0x1771 + 0x143 * -0x10 + 0xe9f * 0x3), -0x6 * -0x27b + 0x80e + -0x15e2 + (0x1cb5 + -0x1482 + -0x815)];
        effects.push([texts[Math.min(kills, texts.length)], -0x2df * 0xd + 0x21d9 + 0x37a, !![], _0x2a686b, _0x2b82c7, _0x8a5e1f[kills % _0x8a5e1f.length], -0x205e + 0xa80 + 0x15de, 0x4ed * 0x7 + -0x1d95 + -0xda * 0x3, !![],
            [Math.random() * (-0x7ed + 0x1 * -0x74b + -0x1 * -0x1037) / (-0x2 * -0xb24 + -0x384 + 0x1 * -0x12c2) + (-0xd * 0x11b + -0x691 * -0x1 + -0x3 * -0x2ef) / (-0x1f0e + -0x2005 + 0x3f15), Math.random() * (0x202e + -0x535 + -0x23 * 0xbe) / (-0x1b8a + 0x223 * 0x1 + 0x1969) + (0xf8f + 0x1ebc + -0x34 * 0xdf) / (0x1332 + -0x166 + -0x11ca), Math.random() * (-0x4 * 0x37d + -0x12b5 * 0x1 + 0x21a8) / (0x17eb + 0x1c21 + 0x340a * -0x1) + (-0x1c * -0xde + -0x1 * 0x1404 + 0x1 * -0x345) / (0x13 * -0x9e + -0x1333 + -0x1eef * -0x1)]
        ]), kills++;
    }
}

function roundstart() {
    kills = -0x419 * 0x1 + -0x14b6 + 0x18cf, globals.alternate.tickcount = -0x5a2 * 0x1 + -0x139b + 0x193d, localobservers = [], n_localobservers = [];
}

function itemcheck() {
    UI.IsMenuOpen() && (UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "menu list x", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "menu list y", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "spectator list x", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "spectator list y", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "keybinds list y", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "keybinds list x", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "customchampreset", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "improveddtcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "lethaldtcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "safeawpcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "awpcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "safelimbcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "dtbaimcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "mindmgcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "nameespcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "weaponiconscheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "hitmarkerscheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "legacykillcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "transparentnadecheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "customchamcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "speclistcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "keybindlistcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "hitlogcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "manualaacheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "adaptiveflagcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "disableflagcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "fakeduckcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "speedcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "watermarkcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "clantagzcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "tponpeekcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "autopeekcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "r8hccheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "fastduckcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "rainbowlinecheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "rainbowmenucheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "underglowcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "killsaycheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "pulsatecheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "manualmodes", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "fakeamountcheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "legitaacheck", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Animated Indicators", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Static color", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "AA mode", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Hitchance", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Minimum damage", ![]), !mindmg ? UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Minimum damage key", ![]) : UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Minimum damage key", !![]), !manualaa ? (UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Manual left", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Manual right", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Manual back", ![])) : (UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Manual left", !![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Manual right", !![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Manual back", !![])), !tponpeek ? UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Teleport key", ![]) : UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Teleport key", !![]), !autopeek ? (UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Auto peek key", ![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Auto peek color", ![])) : (UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Auto peek key", !![]), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Auto peek color", !![])), UI.SetEnabled("Misc", "JAVASCRIPT", "Script items", "Blend amount", ![]));
}
vec = [], vec2 = [], lpe = [], delay = -0x1 * -0xeb + -0x1d09 * 0x1 + 0x1c1e;

function reload() {
    Curtime = Globals.Curtime(), Curtime >= delay && (delay = Curtime + (0x23ce + -0x1 * 0x1fcf + 0x1 * -0x3fb), vec = [], vec2 = []);
}
var accs = ["sznwaves", "summer08", "midniight", "Hyu", "anticlub", "Lythicals", "erupt", "Antismog", "vapingcat", "d3tox", "xslayer6969", "vapingcat"];

function includes(_0x4a6514, _0x2b03a1) {
    return true //_0x4a6514.indexOf(_0x2b03a1) != -1;
}

function a() {
    var _0x2c2cf6 = Globals.Tickrate().toString();
    includes(accs, niggas) ? cring && (Cheat.PrintChat(" [desolate] Whitelist verified - Cracked by \x78\x38\x36\x23\x30\x30\x38\x36"), Cheat.PrintChat(" [" + "deso" + "late" + "] " + "Welcome to desolate, " + niggas), cring = ![]) : yes && (Cheat.PrintChat(" [" + "deso" + "late" + "] " + "Whitelist failed "), yes = ![]), _0x2c2cf6 == -0x175d * -0x1 + -0x1 * 0x1c3d + -0x158 * -0x4 ? exploitwarning && (Cheat.PrintChat(" [" + "deso" + "late" + "] " + "WARNING You are on an 128 tick server! Exploits will be greatly effected! "), exploitwarning = ![]) : exploitwarning = !![], server == "valve [aimstep]" || server == "valve" ? matchmakingwarning && (Cheat.PrintChat(" [" + "deso" + "late" + "] " + "WARNING You are on a Valve server! Exploits have been disabled! "), matchmakingwarning = ![]) : matchmakingwarning = !![];
}

function cm() {
    if (!yes) return;
    plocal = Entity.GetLocalPlayer(), plocal_alive = Entity.IsAlive(plocal), update(), handle_hotkeys(), adjust_antiaim(), adjust_lag();
    Input.IsKeyPressed(0x24e + -0xe0c + 0xc17) && (typing = !![]);
    (Input.IsKeyPressed(0x31 * 0x22 + 0x1 * 0x1835 + -0x1e9c) || Input.IsKeyPressed(-0x6b * -0x2b + 0x2f * -0x30 + -0x91c)) && (typing = ![]);
    (UI.GetValue("AA mode") == 0x228b + -0xec0 + 0x3d * -0x53 || legitaa && Input.IsKeyPressed(0x73 * -0x6 + -0x21cc + 0x24c3) && !typing) && plegitaa();
    if (fastduck) {
        var _0x517c80 = UserCMD.GetButtons();
        UserCMD.SetButtons(_0x517c80 | -0x1 * 0x2564 + -0xa22 * -0x1 + 0x1b43 << -0xce * -0x22 + 0x18cd + -0x3413);
    }
    if (clantagz && server != '') {
        var _0x1c176c = "desolate                ";
        for (_0x2a30a5 = 0xfb0 + -0x151a + 0x56a; _0x2a30a5 < Math.floor(Globals.Tickcount() / (0xfc9 + -0x5b * -0xb + -0x13a2)) % _0x1c176c.length; _0x2a30a5++) {
            _0x1c176c += _0x1c176c.substr(0x412 * 0x3 + -0x10 * -0x227 + -0x2ea6, -0x1783 * 0x1 + -0x571 + 0x1cf5), _0x1c176c = _0x1c176c.substr(-0x10d1 * -0x1 + 0x13a6 + -0x2476);
        }
        _0x1c176c != lasttag && (lasttag = _0x1c176c, Local.SetClanTag(_0x1c176c)), autodisable = !![];
    } else autodisable && (autodisable = ![], Local.SetClanTag(''));
    if (fakeduck && UI.IsHotkeyActive("Anti-Aim", "Extra", "Fake duck") && server == "valve") {
        UI.SetValue("Anti-Aim", "Fake-Lag", "Limit", -0x1 * 0x541 + 0x26d * -0x10 + 0xf * 0x2f1);
        var _0x46b41d = Entity.GetProp(Entity.GetLocalPlayer(), "CCSPlayer", "m_flDuckAmount");
        UserCMD.Choke();
        (_0x46b41d <= speedupfd ? 0x18c7 + 0x191a + -0x31af : (0x1a90 + -0xa5f + -0x102f) / (-0x18c * -0xb + 0xf * 0x10b + 0x2ef * -0xb)) && (globals['fd'].crouch = !![]);
        _0x46b41d >= 0x1a47 + -0xb38 + -3854.22 && (globals['fd'].crouch = ![], UserCMD.Send());
        var _0x513c65 = -0x326 * -0x4 + -0x5 * -0x7ae + -0x32fd << -0x419 * -0x2 + 0x2 * 0x644 + 0x2 * -0xa5c,
            _0x517c80 = UserCMD.GetButtons();
        globals['fd'].crouch ? _0x517c80 |= _0x513c65 : _0x517c80 &= ~_0x513c65, UserCMD.SetButtons(_0x517c80 | -0x79 * 0x2f + -0x2684 + 0x3cbc << 0x1d * -0x57 + 0xe * 0x35 + 0x70b);
    }
    UI.GetValue("AA mode") != 0x793 * -0x2 + 0xe8b * 0x1 + -0x27 * -0x4 && AntiAim.SetOverride(0x1 * 0x92b + -0xf8c + 0x661);
    if (improveddt) {
        var _0x46bacf = Entity.GetName(Entity.GetWeapon(Entity.GetLocalPlayer())),
            _0x1fa6c6 = Exploit.GetCharge(),
            _0x308cc7 = 0xc31 + 0x1 * 0x1e6d + -0x2a9e;
        Exploit[(_0x1fa6c6 != -0x1 * -0x1b81 + 0x1b80 + 0x2c * -0x140 ? "Enable" : "Disable") + "Recharge"](), shiftshit(0x2 * -0x755 + 0x9 * -0xab + 0x14bb) && _0x1fa6c6 != -0x11ca + -0x190 * 0x11 + 0x1 * 0x2c5b && (Exploit.DisableRecharge(), Exploit.Recharge()), Exploit.OverrideTolerance(_0x308cc7), Exploit.OverrideShift(0x17 * -0xcb + 0x3 * -0xbde + -0x49 * -0xbd - _0x308cc7);
    }!improveddt && (Exploit.EnableRecharge(), Exploit.OverrideTolerance(0x251d * 0x1 + 0x21e1 + -0x46fc), Exploit.OverrideShift(-0x77b + -0xd65 + 0x67 * 0x34));
    disableflag && (get_velocity() < -0x1 * 0x1931 + -0x4 * -0x52d + -0x241 * -0x2 ? UI.SetValue("Anti-Aim", "Fake-Lag", "Enabled", ![]) : UI.SetValue("Anti-Aim", "Fake-Lag", "Enabled", !![]));
    var _0x2a30a5;
    if (autopeek) {
        if (!plocal || !plocal_alive) return;
        UI.IsHotkeyActive("Script items", "Auto peek key") ? moving = !![] : (saved = ![], moving = ![]);
        fired && UI.IsHotkeyActive("Script items", "Auto peek key") ? (playing = !![], UI.IsHotkeyActive("Script items", "Auto peek key") && (UI.ToggleHotkey("Script items", "Auto peek key"), moving = ![])) : (playing = ![], fired = ![]);
        if (moving) {
            savestartpos();
            var _0x517c80 = UserCMD.GetButtons();
            safeloc.push([Local.GetViewAngles(), _0x517c80]);
        } else playing && Return2Dest(startpos);
    }
    if (dtbaim) {
        local_player_eyepos = Entity.GetEyePosition(plocal);
        var _0xc202c6;
        if (dtbaim && Exploit.GetCharge() == -0x1ade + 0x15d7 + 0xa1 * 0x8 && UI.GetValue("Rage", "GENERAL", "Exploits", "Doubletap") && UI.IsHotkeyActive("Rage", "GENERAL", "Exploits", "Doubletap")) _0xc202c6 = !![];
        else _0xc202c6 = ![];
        for (_0x2a30a5 = -0xc25 * 0x1 + -0x241 * -0x11 + -0x29e * 0xa; _0x2a30a5 < enemies.length; _0x2a30a5++) {
            if (Entity.IsAlive(enemies[_0x2a30a5]) && Entity.IsValid(enemies[_0x2a30a5]) && !Entity.IsDormant(enemies[_0x2a30a5])) {
                var _0x744446 = Entity.GetProp(enemies[_0x2a30a5], "CBasePlayer", "m_iHealth");
                for (j = 0x6bf + -0x4a * -0x83 + 0x259 * -0x13; j <= -0x1 * -0xdf6 + -0x1859 * -0x1 + -0x2643; j++) {
                    hitbox_pos = Entity.GetHitboxPosition(enemies[_0x2a30a5], j), traced = Trace.Bullet(plocal, enemies[_0x2a30a5], local_player_eyepos, hitbox_pos);
                    if (traced == null) continue;
                    if (traced[-0xe6 + 0x10 * -0x166 + 0x1747] >= _0x744446) {
                        force_baim = -0x1d14 * 0x1 + -0x10 * -0x26b + -0x99b;
                        return;
                    }
                    if (_0xc202c6 && traced[-0x611 + -0x13d + 0x74f] >= _0x744446 / (0x1485 + 0xc05 + 0x4 * -0x822)) {
                        force_baim = 0x6 * 0x37b + -0x616 + 0x277 * -0x6;
                        return;
                    }
                }
            }
        }
    }
    if (manualaa) {
        isLeftActive = UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Manual left"), isRightActive = UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Manual right"), isBackActive = UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Manual back");
        if (!typing && isLeftActive) drawLeft = 0x127e + -0x1 * -0xc7a + -0x1ef7, drawBack = -0xbd * -0x19 + 0x19 * -0x13b + 0x1e * 0x69, drawRight = 0x2d3 + 0xad7 * 0x3 + -0x2358, UI.SetValue("Anti-Aim", "Rage Anti-Aim", "Yaw offset", -(0xb * -0x1e5 + 0xa * -0x6c + -0x1 * -0x1969)), UI.SetValue("Anti-Aim", "Rage Anti-Aim", "At targets", ![]);
        else {
            if (!typing && isRightActive) drawLeft = -0xcc1 + 0xbf9 * -0x1 + -0x3 * -0x83e, drawBack = -0x4 * -0x3fb + -0x415 * 0x2 + -0x7c2, drawRight = -0xedd + -0x2339 + 0x1 * 0x3217, UI.SetValue("Anti-Aim", "Rage Anti-Aim", "Yaw offset", 0x17b3 + -0x1fbb + -0x4a * -0x1d), UI.SetValue("Anti-Aim", "Rage Anti-Aim", "At targets", ![]);
            else !typing && isBackActive && (drawLeft = -0xb03 * 0x2 + -0x5b * -0x39 + 0x1c3, drawBack = 0x1b4 * 0x15 + 0x2b1 + -0x2e * 0xd6, drawRight = 0x25b4 + 0x204 + -0x13dc * 0x2, UI.SetValue("Anti-Aim", "Rage Anti-Aim", "Yaw offset", -0x1 * -0x1f83 + 0x2035 + -0x2 * 0x1fdc), UI.SetValue("Anti-Aim", "Rage Anti-Aim", "At targets", !![]));
        }
    }
    if (lethaldt && UI.IsHotkeyActive("Rage", "GENERAL", "Exploits", "Doubletap") && !UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Minimum damage key") && !UI.IsHotkeyActive("Anti-Aim", "Extra", "Fake duck"))
        for (_0x2a30a5 in enemies) {
            if (!Entity.IsAlive(enemies[_0x2a30a5]) || Entity.IsDormant(enemies[_0x2a30a5])) continue;
            if (Exploit.GetCharge() == 0xad1 + 0x983 * 0x4 + -0x3b * 0xd4) Ragebot.ForceTargetMinimumDamage(enemies[_0x2a30a5], Math.round(Entity.GetProp(enemies[_0x2a30a5], "CBasePlayer", "m_iHealth") / (-0x1 * 0x665 + -0x46 + 0x6ad * 0x1)));
            else {
                if (Entity.GetProp(enemies[_0x2a30a5], "CBasePlayer", "m_iHealth") <= 0x2 * -0x93b + 0x265 + -0x1043 * -0x1) Ragebot.ForceTargetMinimumDamage(enemies[_0x2a30a5], Entity.GetProp(enemies[_0x2a30a5], "CBasePlayer", "m_iHealth"));
            }
        }
    if (safelimb)
        for (_0x2a30a5 = -0x9ce * -0x1 + -0xa3d + 0x70 * 0x1; _0x2a30a5 < 0x1213 * 0x1 + -0x1a56 + 0x84f; _0x2a30a5++) {
            Ragebot.ForceHitboxSafety(_0x2a30a5);
        }
    if (tponpeek && UI.IsHotkeyActive("Rage", "GENERAL", "Exploits", "Doubletap") && UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Teleport key")) {
        var _0x4e9460 = Entity.GetProp(plocal, "CBasePlayer", "m_vecVelocity[0]"),
            _0x2dee05 = Entity.GetEyePosition(plocal),
            _0x38c37c = [];
        _0x4e9460[0x21cb + 0x2 * -0x3ad + 0x7 * -0x3c7] *= 0x130d + -0xe8 + -4644.8, _0x4e9460[0x54a + -0x824 + -0x1 * -0x2db] *= 0x1 * -0x7ba + -0x1206 + 6592.2, _0x4e9460[-0xb29 + 0x1fa5 + 0x147a * -0x1] *= -0xf3 * -0x7 + -0x8dc + 567.2, _0x4e9460 = vec_add(_0x2dee05, _0x4e9460);
        for (_0x2a30a5 in enemies) {
            if (!Entity.IsAlive(enemies[_0x2a30a5]) || Entity.IsDormant(enemies[_0x2a30a5])) continue;
            var _0x480938 = Trace.Line(enemies[_0x2a30a5], Entity.GetEyePosition(enemies[_0x2a30a5]), _0x4e9460);
            if (_0x480938 && _0x480938[-0x251c + 0x1a7c + -0x1 * -0xaa1] && _0x480938[0x1ab5 + 0x3 * 0x13d + -0x1e6b] == 0x1a31 + -0x7b4 + -0xb6 * 0x1a) {
                UI.ToggleHotkey("Rage", "GENERAL", "Exploits", "Doubletap");
                break;
            }
        }
    }
    if (safeawp) {
        var _0x46bacf = Entity.GetName(Entity.GetWeapon(Entity.GetLocalPlayer()));
        _0x46bacf == "awp" && (target = Ragebot.GetTarget(), Ragebot.ForceTargetSafety(target));
    }
}

function get_velocity() {
    return velocity = Entity.GetProp(Entity.GetLocalPlayer(), "CBasePlayer", "m_vecVelocity[0]"), speed = Math.sqrt(velocity[0x2415 + 0x3b * 0x10 + -0x1 * 0x27c5] * velocity[0x16f1 + -0xaf * 0x2c + 0x723] + velocity[0x11 * 0x121 + -0x1f7b * 0x1 + -0xc4b * -0x1] * velocity[-0x15 * -0xc7 + 0x176e + 0x1a8 * -0x18]), speed;
}

function rand_int(_0x15ca11, _0x697efe) {
    return Math.floor(Math.random() * (_0x697efe - _0x15ca11 + (0x2e * -0x75 + 0x25e5 + -0x7f * 0x22)) + _0x15ca11);
}

function update() {
    globals.tick_count = Globals.Tickcount(), globals.cur_time = Globals.Curtime(), local.real = Math.floor(Local.GetRealYaw()), local.fake = Math.floor(Local.GetFakeYaw()), local.duck_amount = Entity.GetProp(Entity.GetLocalPlayer(), "CBasePlayer", "m_flDuckAmount");
}

function set_wish_angles() {
    if (!yes || UI.GetValue("AA mode") != -0x418 * 0x7 + -0x1058 + 0x2d01) return;
    AntiAim.SetOverride(-0x245a + -0xbf7 + 0x9aa * 0x5), AntiAim.SetRealOffset(wish.real), AntiAim.SetFakeOffset(wish.fake), AntiAim.SetLBYOffset(wish.lby);
}

function handle_hotkeys() {
    wish.side = UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter") ? 0x8ed * -0x1 + -0x1d05 + 0x25f3 : -0x1 * -0x20a2 + 0xfc + -0x219e, local.shifting = Input.IsKeyPressed(-0x2361 + 0xa57 + 0x191a) ? !![] : ![];
}

function adjust_antiaim() {
    if (!yes || UI.GetValue("AA mode") != 0x111d + -0x1b48 + 0xa2c) return;
    if (local.shifting) get_velocity() > -0x20dc + -0x1620 + -0x2 * -0x1b7f && (wish.lby = -(0xf71 + -0x123 * 0x11 + 0x1 * 0x4d2), wish.real = globals.tick_count % (-0x28d * 0x2 + 0x11ce + -0xcb2) ? rand_int(-(0x118b + 0x2377 + -0x34cb), -(-0xbb * 0x9 + 0x1f * 0xbb + -0xffc)) : rand_int(0xe8f * 0x1 + 0xb * 0x21f + 0x12e7 * -0x2, 0xa0d * -0x3 + -0x61a + 0x2478));
    else {
        if (wish.side == -0x503 * -0x3 + -0x67 * -0x9 + -0x12a8) wish.lby = -(-0x7 * 0x3b3 + -0x20dd + 0x3b4e), wish.real = globals.tick_count % (-0x1c9 + 0x210b + -0x1eff) ? rand_int(-(-0x3b * -0x15 + 0xc11 + 0x1093 * -0x1), -(-0x827 * -0x1 + 0x9 * -0x10d + 0x169)) : rand_int(0x252d + -0x4f * -0x3b + 0x43f * -0xd, -0x3a6 + 0x1d4 * 0x3 + -0x1c7 * 0x1);
        else wish.side == 0x16b * -0xb + -0x1192 * 0x2 + 0x32be && (wish.lby = -(0x214a * 0x1 + 0x104b * -0x1 + -0x1073), wish.real = globals.tick_count % (-0x17a0 + 0x10d * 0xd + 0x176 * 0x7) ? rand_int(-0x23 * 0x25 + -0xca * -0xc + -0x15c * 0x3, -0x238f + -0x17eb + 0x3b95 * 0x1) : rand_int(-(0x2005 + -0x1e95 + -0x6b * 0x3), -(-0x3f8 * 0x7 + -0x3d * -0x25 + 0x983 * 0x2)));
    }
    set_wish_angles();
}

function adjust_lag() {
    if (!yes || !adaptiveflag) return;
    in_air() ? (distance_per_tick = get_velocity() * Globals.TickInterval(), choked_ticks = Math.ceil((0x955 + -0x506 * 0x3 + 0x5fd) / distance_per_tick), wish.limit = Math.min(choked_ticks, 0x12cb * 0x2 + 0x24de + 0x1299 * -0x4)) : wish.limit = rand_int(-0x13df * 0x1 + 0x16f1 + 0x9d * -0x5, -0x2 * -0xc5f + 0x2f * -0x9 + -0xe3 * 0x1a), UI.SetValue("Anti-Aim", "Fake-Lag", "Limit", wish.limit);
}

function ifunload() {
    AntiAim.SetOverride(-0x9a8 * 0x1 + 0x10 * 0xc7 + -0x2c8), Local.SetClanTag(''), Exploit.EnableRecharge(), Exploit.OverrideTolerance(-0x47 * 0x3a + -0x6 * -0x3aa + 0x5e4 * -0x1), Exploit.OverrideShift(-0x220d + -0x23d1 + 0x174e * 0x3);
    for (i in materials) {
        Material.Destroy(materials[i][-0x2 * 0xfb2 + 0x2b3 * -0x2 + -0x1 * -0x24cb]);
    }
}

function HSVtoRGB(_0x4935e8, _0x442022, _0x41bc1a) {
    var _0xacad07, _0x57510c, _0x148b8c, _0x41a81c, _0x30b2e0, _0x344a02, _0x9b29e5, _0x11f4d4;
    arguments.length === -0xc27 + 0x1194 + -0x15b * 0x4 && (_0x442022 = _0x4935e8['s'], _0x41bc1a = _0x4935e8['v'], _0x4935e8 = _0x4935e8['h']);
    _0x41a81c = Math.floor(_0x4935e8 * (-0x13 * 0x111 + -0x9e * 0x16 + 0x1 * 0x21dd)), _0x30b2e0 = _0x4935e8 * (0x86c * 0x1 + -0x5 * 0x60d + 0x45f * 0x5) - _0x41a81c, _0x344a02 = _0x41bc1a * (-0x1f7 * -0xb + -0x4b3 * 0x1 + 0x25 * -0x75 - _0x442022), _0x9b29e5 = _0x41bc1a * (0x1165 + 0x144f + -0x3 * 0xc91 - _0x30b2e0 * _0x442022), _0x11f4d4 = _0x41bc1a * (-0x1 * 0x13ab + -0x1698 + 0x2a44 - (-0x2b * -0x71 + -0x2282 + -0x47 * -0x38 - _0x30b2e0) * _0x442022);
    switch (_0x41a81c % (-0x1591 + -0x1545 + -0xab7 * -0x4)) {
        case 0x2412 + -0x5 * -0x184 + -0x2ba6:
            _0xacad07 = _0x41bc1a, _0x57510c = _0x11f4d4, _0x148b8c = _0x344a02;
            break;
        case -0x2f * -0x63 + 0x7 * -0x68 + -0xf54:
            _0xacad07 = _0x9b29e5, _0x57510c = _0x41bc1a, _0x148b8c = _0x344a02;
            break;
        case -0x1 * -0x16d + 0x4 * 0x7df + 0x1 * -0x20e7:
            _0xacad07 = _0x344a02, _0x57510c = _0x41bc1a, _0x148b8c = _0x11f4d4;
            break;
        case -0x2cf + -0x3f5 + -0x15b * -0x5:
            _0xacad07 = _0x344a02, _0x57510c = _0x9b29e5, _0x148b8c = _0x41bc1a;
            break;
        case -0x922 * 0x1 + 0x79d + 0x189 * 0x1:
            _0xacad07 = _0x11f4d4, _0x57510c = _0x344a02, _0x148b8c = _0x41bc1a;
            break;
        case 0xc8a + 0x2 * -0xc64 + 0x1 * 0xc43:
            _0xacad07 = _0x41bc1a, _0x57510c = _0x344a02, _0x148b8c = _0x9b29e5;
            break;
    }
    var _0x31be96 = {};
    return _0x31be96['r'] = Math.round(_0xacad07 * (0x2f7 * 0x4 + -0x3 * -0x93f + -0x36 * 0xb7)), _0x31be96['g'] = Math.round(_0x57510c * (0x15e8 + 0x1b8e * 0x1 + -0x28d * 0x13)), _0x31be96['b'] = Math.round(_0x148b8c * (0xa6e + 0x240f + -0x2d7e)), _0x31be96;
}
var disabled = 0x4e9 + -0xbdc + 0x6f3,
    started = 0x39 + 0xd61 + -0x1 * 0xd9a;
timezz = Globals.Curtime(), delayzz = timezz + (-0x35f * -0xb + -0x26e9 + 0x1d5);
var shitcum = 0x6 * -0x5bd + -0xe6f + -0x6fb * -0x7;

function paint() {
    tickcount = Global.Tickcount(), colors = HSVtoRGB(Globals.Realtime() / (0x269a + -0xc79 * 0x1 + 0x2e5 * -0x9), 0x1981 * 0x1 + 0x1 * -0x1b55 + 0x1d5 * 0x1, -0x1d97 + -0x1837 + 0x35cf, 0x1 * 0x1add + -0x3f7 + -0x1 * 0x16e5, 0x2127 + 0x26ef + -0x4717), itemcheck();
    if (!yes) return;
    plocal = Entity.GetLocalPlayer(), plocal_alive = Entity.IsAlive(plocal);
    var _0x128720 = Render.AddFont("Verdana", -0x1 * -0x11c8 + -0x1 * 0x205d + 0xe9c, -0x2 * 0x569 + 0xa01 * -0x2 + 0x2064),
        _0x3ca377 = Render.AddFont("gotham-bold", 0x2 * 0x586 + 0x1784 + -0x227c, 0x157a * -0x1 + -0xbd * 0xb + 0x1dfd),
        _0xbb987c = Render.AddFont("gotham-bold", 0x10cc * -0x2 + 0x2ce + -0x2 * -0xf8d, 0x10 * 0x184 + -0x3cd + 0x1 * -0x140f);
    color = UI.GetColor("Misc", "JAVASCRIPT", "Script items", "Main color"), espcolor = UI.GetColor("Misc", "JAVASCRIPT", "Script items", "ESP color");
    if (color[-0x477 + -0x65b * -0x3 + 0x7 * -0x216] === 0x39 * 0xa5 + 0x1d88 + -0x4245 && color[0x2245 + -0x10bc + -0x1188] === 0x699 + 0x14 * 0xfb + -0x1a35 && color[0x16a7 + -0x2288 + 0xbe3] === -0x214d + 0x156e + 0xbdf && color[-0x8b1 + -0x1768 + -0x66c * -0x5] === -0xeae + 0xf8e + 0x38 * -0x4) UI.SetColor("Misc", "JAVASCRIPT", "Script items", "Main color", [0x1fa4 + -0x750 + -0x17cb, 0x211f * 0x1 + 0x2202 + -0x42a0, -0x644 * -0x5 + -0x139e + -0xab7, -0x1153 + 0x2c + -0x65 * -0x2e]);
    if (espcolor[0x2 * -0x9ff + 0x222e + -0x1c6 * 0x8] === 0x25 * -0x10d + -0x67 * -0x59 + 0x312 && espcolor[-0x1 * -0x197f + 0x148 * -0x2 + -0x16ee] === 0x224b + -0x12c2 * 0x2 + 0x339 && espcolor[0x4 * 0x4dd + 0x8 * -0x33a + 0xa * 0xa3] === 0xc74 + 0x16b * 0x3 + -0x10b5 && espcolor[0x97 * -0x37 + 0xef3 + 0x1181 * 0x1] === 0x4f2 + -0x229 * 0xb + 0x1 * 0x12d1) UI.SetColor("Misc", "JAVASCRIPT", "Script items", "ESP color", [0x1d5a + -0xb2b * -0x3 + 0x8e7 * -0x7, 0x28d + -0x784 + 0x55e, -0x2236 + 0x19ab + 0x980, -0x3 * 0x949 + 0xffc + 0xcde]);
    var _0x4185f0 = Global.GetScreenSize()[-0x1 * -0x19be + 0xb51 * 0x1 + -0x250f] / (0x3 * 0x207 + 0x97f + -0xf92) - (-0xb55 * -0x1 + -0x1d56 + 0x1305);
    curpos = Global.GetScreenSize()[0x2644 + 0x1a * -0xfb + -0xcc5] / (0x46 * -0x6a + 0x1619 + 0x4 * 0x1bb), poopshartfont = Render.AddFont("consolas", 0x234b * 0x1 + -0x3cb + -0x1f62, -0x301 + 0x7 * 0x2cf + -0x2 * 0x827), welcomer = "Welcome to Desolate V2";
    var _0x598385 = Render.TextSizeCustom(welcomer, poopshartfont)[0x1 * -0x12e6 + 0x3 + 0x12e3] + (0x5 * -0x60 + 0x1 * -0x1f15 + 0x213b);
    const _0x4b3d0e = Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((0xf15 + -0xb82 + -0x392) / (-0x1250 + 0x13 * 0xad + 1401.5)) % (Math['PI'] * (0x18db + 0xcc6 + -0x259f)))) * (-0xe15 + -0x13 * 0x40 + 0x13d4);
    stupidnn = Globals.Curtime();
    if (stupidnn >= delayzz) {
        if (started == 0x122b + -0x1 * 0x48d + 0x6 * -0x245) {
            if (disabled >= 0x76 * -0x36 + -0x1 * -0x10f8 + -0x27 * -0x34) disabled++;
            if (disabled == -0x1 * 0x2641 + 0x1 * 0x7b2 + 0x1f4d);
        }
    }
    started != -0x4bc + -0x1f62 + 0x241f && (Render.FilledRect(_0x4185f0, curpos - (0x22e5 + 0xbd0 + -0x2eab) - disabled, _0x598385 + (0x2630 + 0x1f * -0xf6 + -0x85c), -0x6a * 0x39 + 0x1 * -0x1b0f + 0x32f9, [0xc9b * -0x1 + -0xd3 * 0x2b + -0x337 * -0xf, -0x1 * -0x41f + -0x1 * 0xf6d + -0x2 * -0x5bf, -0x29 * -0x3f + -0x11f + -0x8c1, -0xf * 0x1f + -0x213d + 0xb * 0x347]), Render.FilledRect(_0x4185f0 - (-0x14d6 + -0x21 * -0xe1 + -0x5f * 0x16), curpos - (-0x150 + 0x9 * 0x45 + -0x114) - disabled, _0x598385 + (-0x18d1 * -0x1 + -0x1 * -0x1f1b + -0x37e0), 0x7a * 0x13 + 0x1 * 0xd61 + -0x1621 * 0x1, [-0x1 * -0x223e + 0xff5 * -0x2 + -0x227, 0x32b * 0x6 + -0x1518 + 0x2 * 0x123, -0x117 * -0x17 + 0x858 + -0x2132, 0x1e * 0x4f + -0x1 * -0x263f + -0x2e82]), Render.GradientRect(_0x4185f0, curpos - (-0xc1d * 0x2 + 0x3e * -0x97 + 0x3cd8) - disabled, _0x598385 + (-0xbe1 * -0x2 + -0x18de + 0x125), -0x3b * -0xa3 + -0x1b5 * 0x8 + -0x17cf, -0xaa5 + 0x9 * 0x3ec + -0x18a7, rainbowmenu ? [colors['r'], colors['g'], colors['b'], _0x4b3d0e] : [color[-0xd2f + -0x1 * -0x1b9d + -0xe6e], color[0x16 * 0x98 + 0x55a * 0x7 + 0x1b * -0x1df], color[0x1b44 + -0x4 * -0x28a + -0x256a], _0x4b3d0e], [-0x1a92 + -0x1 * -0x625 + 0x146d, 0x332 + 0xcb1 * 0x1 + -0xfe3, -0x27 * 0xbd + 0x1773 + 0x6 * 0xe4, 0xc5f + -0x23cb + 0x176c]), Render.GradientRect(_0x4185f0, curpos - (0x1303 + 0xbde + -0x1ecd) - disabled, _0x598385 + (0xca6 + 0x2ae + -0xf4a), 0x7 * -0x2dd + -0x1951 * -0x1 + 0xf * -0x59, 0x3 * 0x6b1 + -0x2057 + -0x15d * -0x9, rainbowmenu ? [colors['r'] * (0x1fad + -0x30a * -0x7 + -13554.25), colors['g'] * (0xa9a + -0xa2c + -109.25), colors['b'] * (-0x11 * 0x112 + 0x1 * -0xa62 + 7316.75), -0x12e2 + -0xaaf + 0x1e90] : [color[0x1cb3 + -0x955 * 0x3 + -0xb4] * (0xb * 0x12a + 0x341 + -4110.25), color[0x1d81 * 0x1 + 0x1 * -0x9a7 + -0x13d9 * 0x1] * (-0x1 * 0x79c + 0x7aa + -13.25), color[-0x752 + -0x287 * 0xb + 0x1 * 0x2321] * (-0x507 + 0x8b8 + -944.25), -0xc1f + 0x3cd + 0x951], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x93c * -0x2 + 0x9aa + 0x3d * 0x25]] : [color[0x6 * -0x38c + 0x1 * 0x370 + 0x11d8], color[-0x4ff + 0x12 * -0x1b9 + 0x2402], color[-0x1 * 0x73f + 0xd * 0x1c4 + -0xfb3], color[0x2 * 0x661 + 0x12a4 + 0x1f63 * -0x1]]), Render.GradientRect(_0x4185f0 - (0x1b8 * 0xb + -0x13aa * -0x1 + -0x2691), curpos - (0x890 + 0x2130 + 0xe3 * -0x2f) - disabled, _0x598385 + (0x1999 + 0x1 * 0x107b + -0x2a08), -0x11d3 + -0x1f42 + 0x3122, 0x154c + -0x1577 + 0x2c, rainbowmenu ? [colors['r'] * (0xa37 + -0x17c + -2234.25), colors['g'] * (0x1d86 * 0x1 + 0x1a75 + -14330.25), colors['b'] * (-0x4ed * -0x2 + 0xd * -0x7 + -2430.25), -0x7d7 + -0x256 + -0x8f * -0x14] : [color[-0x9 * 0x44d + 0x119 + 0x259c] * (0xed6 + 0xf * -0x28a + 5952.75), color[0x1 * -0x7cb + 0x4ca * 0x1 + 0x302] * (0x11 * -0xf8 + -0x10 * 0x1cf + 11624.75), color[0x829 * -0x1 + -0xe74 + 0x169f] * (0x1f25 + 0x1279 * 0x2 + -17430.25), 0x7eb * 0x2 + 0x2ba * 0x2 + -0x144b * 0x1], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[-0x1954 + 0x1 * -0x1304 + 0x2c5b]] : [color[0x6 * -0x241 + 0xd5d + 0x29], color[0x47f * -0x7 + 0x218d + -0x9 * 0x3b], color[0x21fb + -0xde0 * 0x2 + 0x3 * -0x213], color[0x132 + -0x1 * -0x1547 + -0x1676]]), Render.Rect(_0x4185f0, curpos - (-0x565 * -0x1 + -0x4d1 + -0x2c * 0x3), _0x598385 + (0x739 + 0x464 + 0x72 * -0x1a) - disabled, -0x1aed * 0x1 + -0xf51 + 0x2a58, 0x30a * -0xa + 0xbba + 0x12aa, [-0x185a + -0x221c + -0x2 * -0x1d3b, -0xdc3 + -0x77b + 0x153e, -0x55 * 0x25 + 0x735 + 0x514, -0x42d * -0x1 + -0x1c6 * 0x1 + -0x168]), bettercircle(_0x4185f0 - (0x14b7 + -0x1 * -0x144b + -0x1 * 0x28f9), curpos + (-0x1ec8 + 0xedf + 0xffd) - disabled, -0x5 * 0x56d + 0x16b0 + -0x7 * -0xab, rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x1 * -0x2329 + 0x7db + 0x3f * 0x73] : [color[-0x53 * -0x6a + 0x1a35 * 0x1 + -0x1431 * 0x3], color[0x1922 + -0x1 * 0xe32 + -0x9 * 0x137], color[-0x2334 + 0xae3 + 0x1853], 0x4 * 0x1fe + -0x97b + 0x2 * 0x141]), bettercircle(_0x4185f0 - (0x12d * 0x8 + -0x25fd + -0x98a * -0x3), curpos + (0x399 * 0x8 + -0x1242 * 0x1 + -0xa72) - disabled, 0x1436 + -0xb2f * -0x3 + -0x1ac4 * 0x2, [-0x16c8 + -0x167 * -0x14 + -0x1 * 0x517, 0x435 * -0x2 + -0x24f6 + 0x2d90, -0x53 * 0x37 + -0x1ee0 + 0x30ec, -0x19c2 + -0x61 * 0x43 + 0xbc * 0x47]), Render.StringCustom(_0x4185f0 - (0x3ef * 0x8 + 0x47d + -0x23c8), curpos - (-0x11ea + -0x1afa * -0x1 + 0x1 * -0x8e3) - disabled, 0x42b * -0x1 + -0x25a1 + 0x29cc, 'D', rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x1 * 0x1b73 + -0x17 * 0xd4 + 0x3b4 * -0x2] : [color[0x146 * 0xd + 0x166c + -0x26fa], color[0x436 * -0x9 + 0x466 + 0x2181], color[0xa53 + 0x1 * 0x20cf + -0x1e0 * 0x17], 0xe6 + -0x263d + 0xe * 0x2bd], _0xbb987c), Render.StringCustom(_0x4185f0 + (-0x931 * 0x1 + 0x1 * 0x16cc + -0x15 * 0xa3), curpos + (-0x36a + -0x153 * 0x11 + 0x19f2 * 0x1) - disabled, -0x201c + 0x26b9 + 0x1 * -0x69d, welcomer, [0x76 * 0x41 + -0x2419 + -0x391 * -0x2, 0x184a + -0x1 * -0x22eb + 0x2 * -0x1d1b, -0x1fbc + 0x106c + 0x104f, 0xefd + 0x181f + -0x261d], poopshartfont));
    if (watermark) {
        var _0x40d548 = '';
        if (includes(accs[1], niggas)) _0x40d548 = "Dev";
        else {
            if (!includes(accs[0], niggas) && !includes(accs[1], niggas)) _0x40d548 = niggas + " | alpha";
            else includes(accs[0], niggas) && (_0x40d548 = niggas);
        }
        const _0x5cc773 = Math.floor(Global.Latency() * (-0x38f * 0x1 + 0x57f + 0x1f8) / (-0x1f * 0x6a + -0x216f + 11846.5));
        var _0x46cef3 = Globals.Tickrate().toString();
        const _0x189b49 = Globals.Curtime();
        _0x189b49 - last_update > -0x7ee + -0x8 * -0xdd + 262.2 && (fps = (-0x218e + -0x21b1 + 0x4340) / Globals.Frametime(), last_update = _0x189b49);
        var _0xc84239 = _0x40d548 + " | delay: " + _0x5cc773 + " | fps: " + Math.round(fps) + " | tick: " + _0x46cef3,
            _0x4abb7e = Render.TextSizeCustom(_0xc84239, _0x128720)[-0x1 * -0x1bc5 + -0x249f + 0xce * 0xb] + (0x11b + 0x1850 + -0x1966),
            _0x3f2f28 = Global.GetScreenSize()[0x2 * 0xf5e + -0x1544 + 0x1 * -0x978],
            _0x48419c = -(0xb * -0x107 + 0x3 * -0x7e5 + 0x2304);
        Render.FilledRect(_0x3f2f28 - (-0x15d7 + -0x9d * 0x27 + 0x2e08) - _0x4abb7e, _0x48419c + (0x25fb * 0x1 + -0x7c * 0x3 + -0x2463), _0x4abb7e + (-0x121 * -0xc + -0x12ce + 0x55d), -0x1f3c + 0xac * -0x13 + 0xa * 0x469, [0x1e33 * 0x1 + 0x8d5 + -0x26db, -0x16b1 + 0x654 + 0x108d, 0x2 * 0x9c8 + -0x1135 + -0x1 * 0x224, 0x10e3 + 0x2 * -0xa42 + 0x4a * 0x10]), Render.FilledRect(_0x3f2f28 - (0x819 * -0x3 + -0x2 * 0x6ef + 0x2670) - _0x4abb7e, _0x48419c + (-0x1f * 0x109 + -0x60 * 0x56 + 0x407c), _0x4abb7e + (-0x126b + 0x1ffb + -0xd73), 0x85f + 0x29e * 0x6 + -0x1 * 0x17fb, [0x2d5 * -0xb + -0x98e + 0x28e2, 0x2625 + -0x1b4e + -0xaa7, 0x1 * -0x647 + -0x63 * -0x16 + 0x2 * -0x102, 0xd * -0x13a + 0x1106 + -0x1 * 0x15]), Render.Rect(_0x3f2f28 - (-0x25d1 + -0x3a * 0x9d + -0x1 * -0x4999) - _0x4abb7e, _0x48419c + (-0x11cd + -0x3 * -0xa6d + 0x239 * -0x6), _0x4abb7e + (0xbe8 * -0x1 + 0x64f + 0x5a3), 0x5 * -0x7f + -0x4 * -0x895 + -0x1fd4, [0x2700 + 0x11a7 * -0x2 + -0x2b * 0x16, 0xfcb + -0x2 * 0xeb9 + 0x1 * 0xda7, 0x1dcb * 0x1 + -0xbb1 + -0x121a, 0x268e + -0x11a * 0xf + -0x1509]), Render.StringCustom(_0x3f2f28 - (-0xd * 0x54 + -0xd3 * 0x22 + 0x2077) - _0x4abb7e, _0x48419c + (-0x1f9d + 0xa80 + 0x1548), -0x60 + -0x1b71 + -0x1bd1 * -0x1, _0xc84239, [-0x1 * 0x1f0f + 0x19c + 0x1e72, -0x1850 * -0x1 + 0x1720 + -0x1 * 0x2e71, 0x26d3 + 0x18dc + -0xfac * 0x4, 0x1181 * 0x2 + -0x38c * 0x1 + 0x1e77 * -0x1], _0x128720), underglow && (pulsate ? Render.GradientRect(_0x3f2f28 - (-0x1327 * 0x2 + 0x14ed + -0x5dd * -0x3) - _0x4abb7e, _0x48419c + (-0x1b0 + -0x2 * 0x313 + -0x9 * -0xe3), _0x4abb7e + (-0x403 * 0x1 + -0x22ed + 0x26fa), -0x3d1 * -0x3 + 0x1 * -0xd6c + 0x204, -0x95 * -0x1f + 0x10d * 0xd + -0x4 * 0x7ed, rainbowmenu ? [colors['r'], colors['g'], colors['b'], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x4bb + -0xe * -0x2ba + -0x2170) / (-0xb3e + 0xdd * 0xa + 668.5)) % (Math['PI'] * (0x7ed + -0x1ad3 + 0x14 * 0xf2)))) * (-0xebe + 0xd94 + -0x7 * -0x4f)] : [color[-0x11ef * 0x1 + 0xb12 + 0x6dd], color[0x2 * 0xc5b + 0xce3 * 0x2 + -0x327b], color[0x17a * 0x12 + 0x5 * -0x47f + -0x417], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x184f + 0x2dc * -0xb + 0x37c4) / (0x25b0 + 0x52 * -0x2d + -5957.5)) % (Math['PI'] * (-0x16 * -0xb4 + 0x122 * 0x15 + 0x4 * -0x9d0)))) * (-0x1d63 + -0xc2a + 0x2a8c)], [0x7b9 * 0x1 + -0xe1d + 0x664, 0xd40 + -0x2c8 + -0x14f * 0x8, -0xb3f * 0x1 + -0x45 * 0x17 + -0x2 * -0x8b9, 0x6d * 0x53 + -0xc7f + 0x11 * -0x158]) : Render.GradientRect(_0x3f2f28 - (0x1463 * 0x1 + -0x3 * -0x7c4 + -0x2b79 * 0x1) - _0x4abb7e, _0x48419c + (-0x16e8 * 0x1 + 0x7f3 + -0x2 * -0x78d), _0x4abb7e + (0x772 + 0x1df4 + -0x3 * 0xc74), -0x541 * 0x7 + -0x26e1 + -0x1 * -0x4bb3, 0xc83 + 0x3df * 0x7 + -0x279c, rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0x259b + 0x1 * -0xa1f + 0x30b9] : [color[0x2 * 0x2dd + -0x101f * -0x2 + 0x3cc * -0xa], color[-0x1 * -0x25ff + -0x4d6 * -0x6 + -0x6 * 0xb2b], color[-0xb0c + 0x2129 + 0x1 * -0x161b], 0x1 * 0xa1f + 0x15c + -0x7a * 0x16], [0x1199 + 0x21f6 + -0xc5 * 0x43, -0x7 * -0x3f5 + 0x2 * 0x12db + -0x4169, 0x13 * -0xa1 + -0x71e + -0x65b * -0x3, 0x65 * 0x29 + 0x202e + -0x305b])), Render.GradientRect(_0x3f2f28 - (-0x5 * 0x2b8 + -0x1 * -0x22a + 0xba4) - _0x4abb7e, _0x48419c + (0x1472 + 0x137 * 0x5 + -0x1a61), _0x4abb7e + (-0x1de6 + -0x12ce * -0x2 + -0x7ac), 0x3 * 0x4e1 + -0x121a + 0x37b, -0xe0b + -0x1 * 0x2651 + 0x345d, rainbowmenu ? [colors['r'] * (0xfa6 * -0x1 + -0x2f9 * -0x2 + 2484.75), colors['g'] * (-0x16d6 * -0x1 + 0x7f * 0x7 + -6734.25), colors['b'] * (-0x2 * -0xeda + 0x242b + -16862.25), 0x2 * 0x28b + 0x1e7a + -0x2291 * 0x1] : [color[0xe86 + 0x7d * -0x20 + -0x6 * -0x2f] * (-0x1 * -0xbbc + 0x136f + -7978.25), color[-0x4d * 0x40 + -0xf12 + 0x2253] * (0x1938 * 0x1 + -0xab1 * -0x2 + -11929.25), color[0x14 * -0x17f + 0x1b29 * -0x1 + 0x3917] * (-0x197 + 0x1d3f + -7079.25), 0xc3c + 0x7c7 + -0x1304], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x2 * 0xce3 + 0x47 * -0x11 + -0x150c]] : color), Render.GradientRect(_0x3f2f28 - (-0x31 * -0x42 + -0x1498 + -0xd * -0xa1) - _0x4abb7e, _0x48419c + (-0x79 * -0x3e + -0x2 * -0x4c7 + 0x26b7 * -0x1), _0x4abb7e + (0xe8 * -0x2a + -0xcb2 * -0x1 + 0x196a), -0x1257 * 0x1 + 0x6 * -0x68 + 0x14c9, -0x760 * -0x2 + 0x13 * 0xdb + -0x1f00, rainbowmenu ? [colors['r'] * (-0xa32 + -0x20d8 + 11018.75), colors['g'] * (-0x19ed + 0x959 + 4244.75), colors['b'] * (-0x200b + -0x1 * 0x63d + 9800.75), -0x728 + 0x180 + 0x6a7] : [color[-0x4ef + -0x1 * -0x2006 + -0x1b17] * (-0x16f * -0x6 + 0xa * -0x118 + 598.75), color[0x1f7 + -0x84c + 0x656] * (-0x1 * -0x132b + -0x2691 + 4966.75), color[0x2 * -0x9d0 + 0xa65 + 0x93d] * (0x2200 + -0xc * -0x80 + -10239.25), 0x853 * -0x4 + 0xd6b + 0x14e * 0x10], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x4 * 0x238 + 0x8f9 + 0x3 * -0x5f2]] : color), bettercircle(_0x3f2f28 - (0x679 * 0x3 + 0x6d * 0x32 + -0x1 * 0x286f) - _0x4abb7e, _0x48419c + (0xb44 + -0x1 * 0xb3e + -0x2 * -0x16), -0x1982 + -0x9 * -0x392 + -0x1 * 0x68b, rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x43f * -0x2 + -0xb46 + 0x5 * 0x427] : [color[-0x2159 + 0xb5 * 0x12 + -0x149f * -0x1], color[-0xe80 + 0x1cf5 + -0xa * 0x172], color[0x1dc + 0x509 + -0x6e3], -0x2619 + 0x8b4 + 0x1e64]), bettercircle(_0x3f2f28 - (0x133 * -0x3 + 0x1f0 + 0x1ef) - _0x4abb7e, _0x48419c + (0x2116 + 0x1 * 0x53b + -0x3 * 0xcb5), -0xc5c + 0x123a + -0x5ca, [-0x3 * 0x483 + -0x19cd + 0x77 * 0x55, 0x1 * -0x1d3e + 0x15ec + 0x782, 0x2 * 0x1f3 + 0x3 * -0x89 + -0x214, 0x3ca + 0x1 * 0x7be + -0xa89]), Render.StringCustom(_0x3f2f28 - (-0xffb + 0xb * -0x30a + 12727.5) - _0x4abb7e, _0x48419c + (-0x1c2c + -0xd35 + 0x1 * 0x2983), -0x1a * 0x125 + 0x1eb9 + -0xf7, 'D', rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0xbaa + -0x599 * -0x5 + -0xf54] : [color[0x457 + 0x18f6 * 0x1 + -0x241 * 0xd], color[0x2 * 0x412 + -0xd * -0x18a + 0xb * -0x28f], color[0xa54 + -0x49a * -0x5 + -0x58e * 0x6], -0x4d3 * -0x7 + -0x1605 + -0xac1], _0x3ca377);
    }
    if (rainbowline) Render.GradientRect(0x2f3 * 0x2 + 0xe95 + 0x147b * -0x1, 0x16ec + -0x387 * 0x4 + -0x8d0, Global.GetScreenSize()[-0x187c + 0x2531 + 0x1 * -0xcb5], 0x55 * 0x3b + -0x3 * -0x7ed + 0x2b5b * -0x1, -0x7 * -0x594 + 0x22 * -0x70 + 0x182b * -0x1, [colors['g'], colors['b'], colors['r'], 0x23aa + 0x59 * 0x53 + -0x3f86], [colors['r'], colors['g'], colors['b'], 0x57e + -0x222c + -0x1 * -0x1dad]);
    var _0x25c64b = Entity.GetName(Entity.GetWeapon(Entity.GetLocalPlayer()));
    if (keybindlist) {
        keybindpos = moveElementkey(keybindpos, -0x1 * -0x103f + -0x2 * 0x10db + 0xdd * 0x15, 0x17b + 0xfd1 + -0x2 * 0x897);
        var _0x29f9bc = 0x1f0a + 0xe8f + -0x2d99,
            _0x1b5fcf = 0x19b1 + 0x1 * 0x92f + -0x2295,
            _0x2b08cc = [];
        UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Teleport key") && tponpeek && _0x2b08cc.push("Teleport");
        (UI.IsHotkeyActive("Misc", "GENERAL", "Movement", "Auto peek") && UI.GetValue("Misc", "GENERAL", "Movement", "Auto peek") || UI.IsHotkeyActive("Script items", "Auto peek key") && autopeek) && _0x2b08cc.push("Auto peek");
        UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Minimum damage key") && mindmg && _0x2b08cc.push("Damage override");
        UI.IsHotkeyActive("Rage", "GENERAL", "Resolver override") && _0x2b08cc.push("Resolver override");
        safeawp && _0x25c64b == "awp" && _0x2b08cc.push("Safe awp");
        UI.IsHotkeyActive("Rage", "GENERAL", "Force body aim") && _0x2b08cc.push("Force baim");
        UI.IsHotkeyActive("Rage", "GENERAL", "Force safe point") && _0x2b08cc.push("Safe point");
        UI.IsHotkeyActive("Anti-Aim", "Extra", "Fake duck") && _0x2b08cc.push("Fake duck");
        UI.IsHotkeyActive("Rage", "Exploits", "Doubletap") && UI.GetValue("Rage", "Exploits", "Doubletap") && _0x2b08cc.push("Doubletap");
        UI.IsHotkeyActive("Rage", "Exploits", "Hide shots") && UI.GetValue("Rage", "Exploits", "Hide shots") && _0x2b08cc.push("Hide shots");
        UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter") && _0x2b08cc.push("Inverted");
        UI.IsHotkeyActive("Anti-Aim", "Extra", "Slow walk") && _0x2b08cc.push("Slow walk");
        for (_0x4d833b = -0x638 + -0x5a * -0x16 + -0x1 * 0x184; _0x4d833b < _0x2b08cc.length; _0x4d833b++) {
            Render.TextSize(_0x2b08cc[_0x4d833b])[0x11 * -0xe1 + -0x1c4a + 0x2b3b] > _0x29f9bc && (_0x29f9bc = Render.TextSize(_0x2b08cc[_0x4d833b])[0x2 * -0xf47 + -0xe31 + 0x2cbf]);
        }
        if (_0x29f9bc == -0x85f * -0x2 + -0x144d + -0x1 * -0x38f) _0x29f9bc = -0x1aee + -0x487 + 0x1fa7;
        _0x1b5fcf = _0x1b5fcf + _0x29f9bc;
        (plocal_alive || UI.IsMenuOpen()) && ((_0x2b08cc != -0x32d * 0x5 + -0x1c41 + -0x1611 * -0x2 || UI.IsMenuOpen()) && (Render.Rect(keybindpos[-0x2074 * 0x1 + -0x2456 + 0x24b * 0x1e] - (0xa5 * -0x2b + -0x9dd * -0x1 + 0x11dc), keybindpos[-0x21 * 0xb1 + -0xf * -0x189 + -0x35], _0x1b5fcf, -0x2 * 0x10c1 + 0x1bf + 0x1fca, [0x5e1 * -0x5 + 0x3 * -0x4ff + -0x1b5 * -0x1a, -0x165f + -0x2 * 0x1096 + -0xf1 * -0x3b, 0x2409 + -0x14f * 0xd + -0x1306 * 0x1, -0x55 * 0x22 + 0x631 + -0x41 * -0x18]), Render.FilledRect(keybindpos[0x1 * 0x6ed + -0x2 * -0x9bb + -0x23 * 0xc1], keybindpos[0x1fb7 * -0x1 + 0x19 * -0x17c + 0x44d4], _0x1b5fcf - (0x1 * 0x4af + 0x2355 + -0x2801), 0x21b + -0x127d + 0x1080, [-0x1529 + 0x1 * -0xd72 + 0x27c * 0xe, 0x7d9 * -0x2 + -0xdd + 0x10bf, -0x77f + -0x1 * -0x200 + 0x5b6, -0x25a0 + -0xcb3 * 0x1 + -0x1 * -0x3352]), Render.FilledRect(keybindpos[0xdb7 * 0x1 + 0x20b4 + 0x33 * -0xe9] - (-0x56e + 0x1 * -0x1061 + -0x15d0 * -0x1), keybindpos[-0x5e0 + 0x15b8 + 0xfd7 * -0x1] + (0xc08 + 0x19b9 + -0x40 * 0x97), _0x1b5fcf - (0x312 + -0x1bdf + -0xfe * -0x19), -0x1 * 0x3dd + -0x65e + -0xa57 * -0x1, [0x31d * -0x3 + 0x21cd * -0x1 + -0xd * -0x355, -0x74 + -0x5 * 0xa7 + 0x3e7, -0x19 * 0x10f + -0x1 * -0x618 + -0x3e * -0x55, -0x1 * -0x107b + -0x1 * -0x19b5 + -0x2931]), Render.StringCustom(keybindpos[0xb * 0xfc + 0x1ddd + 0xb * -0x3b3] + _0x29f9bc / (0x20c1 + -0x220 * 0x1 + -0x1e9f) - (0x1f22 + 0x1457 + -0x3376), keybindpos[0x424 + -0x6 * -0x141 + 0xba9 * -0x1] + (-0xb8 + -0x147c + 0x153e), 0xe2b + -0x567 + -0x8c4, " Keybinds (" + _0x2b08cc.length + ')', [-0x77a + 0x1 * -0x26c3 + 0x1 * 0x2f3c, 0x267e + 0x3b * -0x7f + 0x12 * -0x75, -0x2ab * -0x4 + -0x11c8 + 0x81b, -0x177 * 0x13 + 0x10dc + 0xbf8], -0x718 * -0x4 + -0xe05 + -0x106 * 0xe), underglow && (pulsate ? Render.GradientRect(keybindpos[0x2 * -0x6ad + 0x1cb5 * 0x1 + 0x1 * -0xf5b] - (0x1ce * -0x1 + -0x92 * 0x8 + 0x660), keybindpos[-0x1 * -0x1461 + 0x1fb * -0x6 + -0x87e] + (-0x242b + 0x5e2 + 0x1e4c), _0x1b5fcf, 0x3 * -0xba9 + -0x1d4d + -0x1 * -0x4053, -0x221c + -0x1082 + 0x13 * 0x2aa, rainbowmenu ? [colors['r'], colors['g'], colors['b'], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x2064 + -0x9 * -0xd3 + 0x18fa) / (0xe * -0x13d + -0x19e7 + 11069.5)) % (Math['PI'] * (0x151c + -0x1db6 + 0x26 * 0x3a)))) * (0x95f * 0x4 + -0x1aa1 * -0x1 + -0x3f1e * 0x1)] : [color[-0x4 * 0x7cd + 0x1b5d + 0x3d7], color[0x2593 * -0x1 + 0x2345 * -0x1 + 0x449 * 0x11], color[-0x1b47 * -0x1 + 0x1ee * -0x10 + 0x1 * 0x39b], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((0x15c1 + -0x2 * 0xcf1 + -0x2 * -0x211) / (0x5d + 0x669 + -1733.5)) % (Math['PI'] * (0x2 * 0x10f1 + -0x6e9 * -0x1 + -0xc5 * 0x35)))) * (-0xabe + -0xe5f + 0x45a * 0x6)], [-0x1c1e + 0x1ac6 + 0x158, -0x246 * -0x10 + 0x1ef3 + -0x4353, -0x10 * -0xad + -0xe * -0x3f + -0xe42, -0xf1 * -0x27 + 0x78f * -0x1 + -0x1d28]) : Render.GradientRect(keybindpos[-0x1e56 + -0xe * -0x259 + -0x288] - (0x9cb + 0x1c5d * -0x1 + -0x1294 * -0x1), keybindpos[0xa60 * -0x3 + 0x8 * -0x162 + 0x2a31] + (0xb2c + 0x445 * -0x7 + 0x12ba), _0x1b5fcf, 0x1 * 0x1957 + 0x1ac5 * -0x1 + 0x179, 0x33 * -0xa5 + -0x108c + -0x1079 * -0x3, rainbowmenu ? [colors['r'], colors['g'], colors['b'], -0x22a * 0x12 + 0x1 * 0x1dde + 0xa15] : [color[0x25fe + -0x148c + -0x27e * 0x7], color[0x24ed + 0x265f + -0x4b4b], color[-0x11a5 + -0x1aa3 + 0x2c4a], -0x4 * 0x4c4 + -0x268d * 0x1 + 0x1f * 0x1e4], [0x1 * -0x218d + 0x3 * 0xb6d + -0x3 * 0x3e, -0x41 + 0x246a + -0x2429, -0x11a8 + -0x11d5 * 0x2 + 0x3552, -0x7 * -0x35 + 0x1 * 0xb66 + -0xb * 0x12b])), Render.GradientRect(keybindpos[-0x1d56 + 0x563 + 0x1 * 0x17f3] - (-0x19bf + 0x43f * -0x1 + -0x100 * -0x1e), keybindpos[0x3d * -0x91 + -0x1253 * -0x1 + 0x103b], _0x1b5fcf, -0x1 * -0x6b2 + -0x67 * -0x4c + -0x2540, 0x9 * -0x2e3 + 0xf99 + 0xa63, rainbowmenu ? [colors['r'] * (-0x23af + 0x4 * -0x52 + 9463.75), colors['g'] * (0x1fbe + -0x4 * 0x142 + -6837.25), colors['b'] * (0x1286 * -0x1 + -0x2 * -0xfb3 + -3295.25), 0xbe9 * 0x2 + -0x2169 + 0xa96] : [color[0x26 * -0x83 + -0x68 * 0x5a + 0x3802] * (-0x1550 + -0x2ce * 0x1 + 6174.75), color[0xce8 + -0x55c * 0x4 + 0x889] * (0x13 * 0x65 + 0x35b * 0x9 + -9649.25), color[0x2 * -0xda5 + 0x1c2b + -0xdf] * (0x5 * 0x796 + 0x349 + -10550.25), -0xd55 * 0x1 + -0x2ba * -0x8 + 0x1df * -0x4], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[0x89 * 0x3 + 0x1edc + -0x2074 * 0x1]] : color), Render.GradientRect(keybindpos[0x2292 + -0x16a0 + -0xbf2] - (-0x1 * -0x26a7 + -0x1 * -0x322 + -0x29c6), keybindpos[-0xf29 * 0x1 + -0x67 + 0xf91 * 0x1] + (0x133f + -0x553 + -0x1fd * 0x7), _0x1b5fcf + (0xf0b + -0x436 * -0x1 + 0x133f * -0x1), -0x12cb + 0x53 * 0xb + -0x2 * -0x79f, 0x1ac + 0x1 * -0x158e + 0x13e3, rainbowmenu ? [colors['r'] * (0x1639 + -0x1228 + -1040.25), colors['g'] * (-0x29 * -0x5b + -0xf * 0x1d2 + 3259.75), colors['b'] * (-0x1bff + 0xc4f + 4016.75), 0x11da + -0x2617 + 0x153c] : [color[-0x449 * -0x1 + 0x4 * -0x7d9 + 0x9 * 0x303] * (-0x24e3 + -0x4f * 0x79 + 19002.75), color[0x527 * 0x3 + -0x1654 + 0x6e0] * (0x6d * -0x7 + -0xfc9 + 4804.75), color[0x2422 + -0x1 * 0x1e11 + -0x60f] * (-0x115 * -0x3 + 0x9e2 + -3360.25), -0x3 * -0xa83 + -0x628 + -0x1862], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[-0x35 * -0xe + 0x17d * -0x9 + 0xa82]] : color)));
        (plocal_alive || UI.IsMenuOpen()) && (_0x2b08cc != -0xc51 + -0x17bf + 0x482 * 0x8 && (Render.FilledRect(keybindpos[-0x25c7 + -0x4f6 + 0x3 * 0xe3f], keybindpos[-0x13af * 0x1 + -0x74 * -0x2f + 0xce * -0x2] + (0xe34 + -0x2 * 0xdc1 + -0x5d * -0x25), _0x1b5fcf - (0x910 + 0x2 * -0x2ef + -0x32f), (0x9 * 0x25f + 0xde * -0x1 + -0x146a) * _0x2b08cc.length + (0x2a9 * 0x1 + -0x313 * 0x7 + 0x12e3), [0xf26 + -0x18c * 0x13 + 0xe6b, 0x1 * -0x1173 + -0xb * 0x3 + 0x8e2 * 0x2, 0x1281 + 0x42 * 0x74 + -0x3e * 0xc7, 0x39 * -0x35 + -0x506 + 0x11d2]), Render.FilledRect(keybindpos[0x22 * 0x10f + 0x12 + -0x2410] - (-0x1354 + -0xb5 + 0xbe * 0x1b), keybindpos[-0xcc1 + 0x681 + 0x641] + (-0x26a9 + 0x3 * 0x12f + -0xbc * -0x30), _0x1b5fcf - (-0x233b * -0x1 + -0x59c + 0x22 * -0xdf), (0x19ca * 0x1 + -0xe05 + -0x2 * 0x5db) * _0x2b08cc.length + (-0x1df3 + 0x1 * 0x4e1 + 0x1917), [-0xb9 * 0x1d + 0x10 * 0xe5 + 0x6d2, -0xb43 + 0x1 * -0x1b61 + -0x14 * -0x1f1, -0x5e * 0x17 + -0x4 * 0x480 + 0x1aa9, 0x1 * -0x1983 + -0x437 * 0x3 + 0x3 * 0xd0d])));
        for (_0x4d833b = 0x845 * 0x2 + 0x113f * -0x1 + 0xb5; _0x4d833b < _0x2b08cc.length; _0x4d833b++) {
            (plocal_alive || UI.IsMenuOpen() == !![]) && Render.String(keybindpos[-0x62f * 0x1 + -0x1093 * -0x2 + -0x1af7] + (-0x270f * -0x1 + 0xa9c + 0x25d * -0x15), keybindpos[0x223 + 0x8 * 0x6d + 0x58a * -0x1] + (0x1cb5 + 0x2321 + -0x3fad) + (-0xad2 + 0xf29 * -0x2 + 0x2933) * _0x4d833b, 0x6e8 + -0x9e * -0x5 + -0x9fe, _0x2b08cc[_0x4d833b], [0x2143 * 0x1 + 0x4 * 0x86b + -0x41f0, -0x21f0 + 0x748 + 0x1ba7, -0xceb + 0x4 * -0x7db + 0x16ab * 0x2, 0xc5 * 0x1a + -0x314 * -0x2 + -0x192b], 0x1d * -0xbf + -0x1290 + -0x1 * -0x283b);
        }
        UI.SetValue("Misc", "JAVASCRIPT", "Script items", "keybinds list x", keybindpos[0x210 + -0x1273 + 0x1063 * 0x1]), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "keybinds list y", keybindpos[-0x1fd * -0x12 + 0x955 + -0x2d1e]);
    }
    var _0xb7be25 = Entity.GetPlayers(),
        _0xc0d786 = Entity.GetTeammates(),
        _0x29ef17 = Entity.GetLocalPlayer();
    local_dead = ![];
    var _0x5021c6 = [];
    n_localobservers = [], n_local_obs = [];
    if (plocal) {
        for (_0x4d833b = _0xb7be25.length - (-0x7eb + -0x15b9 + 0x1da5); _0x4d833b >= -0x1 * 0x1b1a + 0x4a3 * 0x4 + -0x1b6 * -0x5; _0x4d833b--) {
            if (_0xb7be25[_0x4d833b] == _0x29ef17 || Entity.GetName(_0xb7be25[_0x4d833b]).toString().localeCompare("GOTV") == 0x242b + -0x2f3 + -0x2138) _0xb7be25.splice(_0x4d833b, -0x11ef * 0x1 + 0x236 + 0xfba);
        }
        for (_0x4d833b = _0xc0d786.length - (-0x136b + 0x6b * -0xb + -0xd * -0x1d9); _0x4d833b >= -0xc * -0x1a0 + -0xde3 + -0x59d; _0x4d833b--) {
            if (_0xc0d786[_0x4d833b] == _0x29ef17 || Entity.GetName(_0xc0d786[_0x4d833b]).toString().localeCompare("GOTV") == -0x13dc + -0x1 * 0xeca + 0x5 * 0x6ee) _0xc0d786.splice(_0x4d833b, 0xba3 + 0x89 * 0x12 + -0x1544);
        }
        for (_0x4d833b = 0x291 * 0x3 + -0x7 * -0x85 + -0xb56; _0x4d833b < _0xb7be25.length; _0x4d833b++) {
            if (!_0xb7be25[_0x4d833b] || Entity.IsDormant(_0xb7be25[_0x4d833b]) || !Entity.IsAlive(_0x29ef17)) continue;
            var _0x4e5963 = Entity.GetProp(_0xb7be25[_0x4d833b], "DT_BasePlayer", "m_hObserverTarget");
            if (!_0x4e5963) continue;
            local_dead = ![], _0x4e5963 == _0x29ef17 && n_localobservers.push(Entity.GetName(_0xb7be25[_0x4d833b]));
        }
        localobservers = n_localobservers;
    }
    if (speclist) {
        specpos = moveElementspec(specpos, -0x2 * 0x9fa + -0xd * 0x4c + -0xf1 * -0x1a, 0x1 * -0x22c6 + 0x55 * -0x61 + 0x4319);
        if (local_dead) total_spec = n_local_obs.length + _0x5021c6.length;
        else total_spec = localobservers.length;
        plocal_alive && (localobservers != 0x1133 + -0xd * -0x1f + -0x12c6 && (Render.FilledRect(specpos[-0xfd * 0x27 + -0xb62 + 0x31ed], specpos[-0xe4b * -0x2 + -0x191e + 0x1 * -0x377] + (0xf21 + 0x2285 + 0xd * -0x3cf), 0x463 * 0x7 + -0x1e15 + -0xa * -0x1, (-0x94b + 0x26f5 * -0x1 + -0x1 * -0x304f) * localobservers.length + (0x2 * -0x4f7 + 0x1f9a + -0x15a5), [0x1 * -0xb7 + -0xd4 * 0x2f + 0x2 * 0x13e8, -0x254 + -0xe9 * -0x29 + 0x22cd * -0x1, -0x9ed + 0x1ce1 * 0x1 + 0x171 * -0xd, -0x15ab + -0x10f9 + -0x27a3 * -0x1]), Render.FilledRect(specpos[0x1a64 + 0xa * 0x199 + 0x1ed * -0x16] - (-0x2710 + 0x1a94 + 0xc7d), specpos[-0x3 * -0x451 + -0x2144 * -0x1 + 0xd * -0x38e] + (0x6e5 + -0x1 * 0x189b + -0x1 * -0x11da), 0xeff * -0x1 + -0x165d + 0x2608, (-0x588 + -0xd * -0x1de + -0x12af * 0x1) * localobservers.length + (0x273 + -0x1 * -0x2253 + 0x24c1 * -0x1), [0x1 * 0x10ee + 0x1556 * 0x1 + -0x7 * 0x571, -0x18e5 + -0x33 * -0xa8 + -0x71 * 0x13, -0x1 * -0x1d75 + -0x19ee + 0x4 * -0xd4, 0x1d6b + -0x1 * 0x1849 + -0x1 * 0x423])));
        if (!total_spec == -0x1174 + -0x1c57 + 0x2dcb || UI.IsMenuOpen()) {
            spec_count = -0xb3 * 0x15 + 0x1 * 0x253d + -0x1 * 0x168e, Render.FilledRect(specpos[-0x2536 + -0x212 + -0x18 * -0x1a3], specpos[-0x208c + -0xf0 * 0xf + 0x2e9d], -0x188a + 0xd14 + 0xc20, 0x1d38 + -0x10c1 + -0xc59 * 0x1, [-0xab * 0x13 + -0xd0f * 0x1 + 0x1 * 0x19ed, 0xcd4 + -0x2 * 0x4ac + 0x4 * -0xd3, 0x1738 + -0x1c1a + 0x519, -0x2451 * 0x1 + 0x3 * 0x33d + 0x1b99 * 0x1]), Render.FilledRect(specpos[-0x439 * 0x5 + -0x1 * 0xf9f + -0x4 * -0x92f] - (-0x5c9 + 0x18dd + -0x1 * 0x1313), specpos[0x2b * 0x6d + -0x1ae0 + 0x892] + (-0x1 * -0x1751 + 0x1005 + -0x2755), 0xbf5 * -0x1 + 0xa78 + 0x229 * 0x1, 0xb5 * 0x1c + -0x26aa + 0x12fa, [0x1 * -0xd89 + 0x2c8 * 0x2 + 0x826, 0x9 * -0x69 + -0x9 * -0x29d + 0x346 * -0x6, 0x17db + 0x2236 + -0x5c9 * 0xa, 0x1326 + 0x26f + -0x1496]), Render.Rect(specpos[0x88f * -0x2 + 0x1 * 0x167 + 0xfb7] - (-0x726 + -0x1039 + 0x18f * 0xf), specpos[-0x1ee2 + -0x1a * -0xf + -0x1 * -0x1d5d], 0x1 * -0x19e7 + 0x2 * 0x4b2 + 0x1130, 0x17 * 0xb8 + 0x1 * -0x20fa + -0x1079 * -0x1, [-0x10bc + 0xdf3 + 0x2c9, -0x7ab + 0x27d + -0x66 * -0xd, -0x2 * 0x64c + -0x1 * -0x1f45 + -0x12ad, 0x9f2 * -0x1 + -0x1913 + 0x2404]), Render.StringCustom(specpos[-0x264f + -0xe1 * -0x29 + 0x2 * 0x123] + (-0x1 * -0x476 + -0xeeb + 0xaa0), specpos[0x1f2b + -0x5 * 0xa4 + 0x1 * -0x1bf6] + (-0xb45 * 0x1 + -0x1f75 * 0x1 + 0x284 * 0x11), 0x181 + 0x89 * 0x1f + -0x1 * 0x1218, " Spectators (" + localobservers.length + ')', [0x1 * -0xef9 + -0xde6 + 0x1dde, 0x96a * 0x3 + 0x36d * -0x1 + -0x2 * 0xbe9, -0x29c * -0xb + -0xe * -0x22a + -0x3a01, -0xc89 + 0x2288 + -0x1500], 0x13f5 + 0x139d * 0x1 + -0x1 * 0x278b);
            underglow && (pulsate ? Render.GradientRect(specpos[-0xe13 + -0x5b * 0x8 + 0x47 * 0x3d] - (0x62 * -0x58 + 0xd2b + 0x1487), specpos[-0x1480 + -0x3 * -0x9d5 + -0x8fe * 0x1] + (0xa1 * 0x3d + -0x1 * 0x1334 + -0x1326), -0x23 * 0x2f + -0x1af8 + -0x26f * -0xe, 0x2 * -0x58a + -0x1 * -0x2534 + -0x1a15, 0x4a1 + -0x157a + 0x10d9, rainbowmenu ? [colors['r'], colors['g'], colors['b'], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((0xf8 * -0x1 + 0x7 * 0x2e3 + -0x133c) / (0x1870 + 0xb55 * 0x1 + -9156.5)) % (Math['PI'] * (0x1729 + -0x13e9 + -0x19f * 0x2)))) * (-0x8ef + 0xf40 + -0x552)] : [color[0xe62 + -0x2 * 0x69d + 0x128 * -0x1], color[-0x246f + -0x1 * -0x1897 + 0xbd9], color[0x1b2d + 0x3 * 0x102 + 0x1e31 * -0x1], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((0x58 * 0x6d + -0x5d5 * 0x5 + -0x84e) / (-0xd * -0x220 + -0x1e98 + 760.5)) % (Math['PI'] * (-0x1 * 0x917 + -0xb * -0x2bc + -0x14fb * 0x1)))) * (0x3d * -0x32 + -0x1 * 0xa97 + 0x1780)], [-0x1e9e + 0xf86 + 0x2a * 0x5c, 0xd11 + 0x2211 + -0x2f22, 0x19 * 0x151 + 0x1137 + -0x3220, 0x586 + -0xe * 0x155 + 0xd20]) : Render.GradientRect(specpos[-0x1f2f + 0x101 * 0x18 + 0x717] - (0x23d + -0x341 + -0x106 * -0x1), specpos[-0x22 * -0xda + 0xf1 * -0x7 + 0x1 * -0x165c] + (0x48c + 0xa7b + -0x1 * 0xf04), -0xe * 0x12e + 0x13e8 + -0x1 * 0x2b7, -0xf2c + -0x2 * 0x26e + 0x1413 * 0x1, 0x4 * 0x2 + 0x1d38 + 0x240 * -0xd, rainbowmenu ? [colors['r'], colors['g'], colors['b'], 0x2075 + -0x496 * -0x1 + -0x240c] : [color[0x1853 + -0x1cfe + 0x4ab * 0x1], color[0xa4e + -0x121a + 0x1 * 0x7cd], color[-0x943 * 0x2 + 0x1 * 0x1a5d + -0x7d5], -0x11b * -0x17 + -0x1 * 0x929 + -0x517 * 0x3], [0x684 + 0x1f * 0x137 + -0x2b * 0x107, -0xba2 * 0x1 + -0x6 * 0x3df + 0x22dc, 0x5 * 0x3b0 + -0x1cd * -0xd + 0x1 * -0x29d9, 0x1757 + -0xa1e + -0x1 * 0xd39]));
            Render.GradientRect(specpos[0x236d + 0xe39 + -0x31a6] - (-0x38f + -0x1 * -0x1601 + -0x1270), specpos[0x139f + -0x61 * -0x37 + -0x2875], -0xd91 * 0x1 + 0xd * -0x232 + -0x128 * -0x25, -0x12e0 + -0xcdc * 0x2 + 0x2c9e, -0xf5 * -0x1 + 0x2 * 0x2e5 + -0x1 * 0x6be, rainbowmenu ? [colors['r'] * (0x1096 + -0xb * 0x2ef + 4015.75), colors['g'] * (0x1a38 + 0xc69 + -9888.25), colors['b'] * (0x2 * 0xb7e + 0x1be2 + -13021.25), 0xb67 + 0xda4 + -0x180c] : [color[0xd * 0x155 + -0x12 * 0x4a + 0x1 * -0xc1d] * (0x1d43 + -0x5 * 0x48d + -1665.25), color[0x7 * -0x1eb + 0x10b0 + -0x2 * 0x1a1] * (-0x2505 + -0x11d5 * 0x2 + 18607.75), color[-0x13e1 * -0x1 + 0xec9 + -0x22a8] * (-0x4 * -0x3e5 + -0x569 * 0x5 + 2937.75), 0x4 * -0x1bc + -0x1 * 0x1310 + 0x1aff], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[-0x1464 + -0x1 * 0x1971 + 0x2dd8]] : color), Render.GradientRect(specpos[-0x1a9d + -0xae3 + 0x320 * 0xc] - (-0x3 * 0x8b2 + -0x2 * -0xa76 + 0x52d), specpos[0x3 * 0x7ea + -0x12 * 0x1dc + 0x9bb] + (-0x2 * -0x6cd + 0xc70 + -0x535 * 0x5), 0x16 * 0x78 + 0xa90 + 0x6bb * -0x3, 0x14f * 0xb + -0x29 + -0x1c7 * 0x8, -0x516 + -0xb * 0x2b8 + 0x22ff, rainbowmenu ? [colors['r'] * (-0x1288 + -0x228 + 5296.75), colors['g'] * (0x22a4 + 0x9a + -9021.25), colors['b'] * (-0x25e1 + -0x13d7 + 14776.75), -0x21d0 + -0x2157 + 0x4426] : [color[0x1 * -0x2af + 0x6de + -0x1 * 0x42f] * (-0x3 * -0x496 + 0x1de9 + -11178.25), color[0x1c56 + -0x25 * 0x63 + 0xe06 * -0x1] * (0x17eb + -0x859 + -3985.25), color[0x2 * -0xfac + 0x4 * 0x43c + 0x7b * 0x1e] * (0x743 + 0x11 * 0x6a + -3660.25), -0x8 * -0x2c5 + -0x125 * -0x2 + -0x105 * 0x17], rainbowmenu ? [colors['r'], colors['g'], colors['b'], color[-0x20fb + 0x1a01 * -0x1 + 0x3aff]] : color);
            if (!local_dead)
                for (_0x4d833b = 0x1ac4 + -0x17f * 0x5 + -0x1349; _0x4d833b < localobservers.length; _0x4d833b++) {
                    Render.String(specpos[0x2 * 0x4cc + 0x1d0f + -0x26a7] + (-0x8af + 0x6b9 + 0x200 * 0x1), specpos[-0x1e09 + 0x201 * -0xd + -0x53 * -0xad] + (-0x131 * -0x16 + -0x1 * -0xb65 + -0x2572) + (-0x59 * -0x39 + -0x1 * -0x12e7 + -0x3 * 0xce3) * spec_count, 0x2004 + 0x10ba + -0x30be, localobservers[_0x4d833b], [0x23c * 0x1 + 0x1 * 0x1b65 + -0xe51 * 0x2, 0x3d * 0x8d + 0x6 * -0xd3 + 0x3b * -0x78, -0x332 + -0x208b * 0x1 + 0x24bc * 0x1, -0x1c35 + -0x226d + 0x4e5 * 0xd], 0xf04 + -0x3a * -0x34 + -0x1ac4), spec_count++;
                }
            UI.SetValue("Misc", "JAVASCRIPT", "Script items", "spectator list x", specpos[-0x380 + 0x31 * 0x71 + -0x1221]), UI.SetValue("Misc", "JAVASCRIPT", "Script items", "spectator list y", specpos[0xebf + -0x1 * -0xd91 + 0x1c4f * -0x1]);
        }
    }
    if (weaponicons) {
        plr = Entity.GetPlayers();
        for (_0x4d833b = 0xb85 * 0x3 + 0x1dd1 * 0x1 + -0x4060; _0x4d833b < plr.length; _0x4d833b++) {
            if (Entity.IsEnemy(plr[_0x4d833b]) && Entity.IsAlive(plr[_0x4d833b]) && !Entity.IsDormant(plr[_0x4d833b])) {
                pothing = Entity.GetRenderBox(plr[_0x4d833b]), playerWeapon = Entity.GetName(Entity.GetWeapon(plr[_0x4d833b]));
                if (pothing[-0x20b + 0x2a * 0x38 + -0x725] == -0x2498 + 0x39 * 0x1 + 0x2460) {
                    var _0x5455df = pothing[-0x19 * 0x5 + 0x3 * 0x25a + -0x1 * 0x68e] - pothing[0x575 + 0xd1f + -0x1293];
                    _0x5455df /= -0x33 + 0x81a * 0x1 + -0x7e5, _0x5455df += pothing[0xa57 + 0x85a + 0x5c * -0x34], render_string(_0x5455df + (-0x1 * 0x1744 + -0x2 * 0xd3 + 0x18eb * 0x1) * (0x11ec * 0x1 + -0x1319 + 301.75), pothing[-0x18ca + 0x993 + 0x22d * 0x7] + (0x9ee + 0x201d + -0x2a01 * 0x1), 0x1d0f + -0x1 * 0x3c3 + 0x39d * -0x7, weapon_to_icon(playerWeapon), [espcolor[0x4d * -0x77 + -0x21a6 + 0x4571], espcolor[-0x5 * 0x2e3 + -0x24f1 + 0x7 * 0x757], espcolor[0x47 * 0x5d + 0x1499 + -0x2e62], 0x2 * 0x12ea + 0xcd * -0x8 + 0x1 * -0x1e6d], 0x8cc * 0x2 + 0x213e + -0x10 * 0x32d);
                }
            }
        }
    }
    if (legacykill) {
        var _0x128720 = Render.AddFont('', 0x1940 + -0x147f + -0x1 * 0x4a1, -0x4 * -0x2e0 + -0x20fb + 0x17a1);
        for (_0x4d833b in effects) {
            if (!effects[_0x4d833b][0x1ae3 * -0x1 + -0x4 * -0x161 + 0x155f]) continue;
            if (animatedindicators && !staticcolor) Render.StringCustom(effects[_0x4d833b][0x2 * -0xc71 + 0x1fe0 + -0x6fb * 0x1], effects[_0x4d833b][0x1d * 0x1 + 0x12d9 + 0xc2 * -0x19], 0x21dc + -0x2 * 0xb0b + -0xbc5, effects[_0x4d833b][0xcca + -0x11 * -0x1c1 + -0x347 * 0xd] + '', [effects[_0x4d833b][-0x2da + 0x9 * -0x36 + 0x4c9][0xdcb + 0x1a3e + -0x2809], effects[_0x4d833b][-0x7ce + 0x1ad + 0x62a][-0x1273 * -0x2 + 0x2458 + -0x493d * 0x1], effects[_0x4d833b][0x2 * 0x496 + -0x3 * 0xa40 + 0x159d][0x7c * 0xa + 0x19 * -0x10b + 0x153d * 0x1], effects[_0x4d833b][0x217e + -0x78f + -0x2 * 0xcf7]], _0x128720);
            else {
                if (!animatedindicators && !staticcolor) {
                    if (kills == 0x1009 * 0x2 + -0x86e + 0x3 * -0x7e1) Render.StringCustom(Render.GetScreenSize()[0x12ef * -0x1 + 0x1380 + -0x91] / (-0x646 + -0x1ad5 + 0x211d), 0xf53 + -0x9d5 * 0x2 + 0x551 * 0x1, -0x372 + -0x2 * -0x481 + -0x1 * 0x58f, "FIRST BLOOD", [effects[_0x4d833b][0x1706 + -0x97 * 0x3 + 0x54e * -0x4][-0x791 * -0x1 + 0x1362 + -0x1af3], effects[_0x4d833b][-0xf * -0x299 + 0x4d * 0x31 + -0x35ab][-0x66f + 0x171e + -0x46 * 0x3d], effects[_0x4d833b][0x606 + 0x1 * -0x1edd + 0x20 * 0xc7][0x1 * 0x4e1 + 0x1 * -0xd3f + 0x860], effects[_0x4d833b][-0x7 * -0x2a1 + 0x24ff + -0x3765]], _0x128720);
                    else {
                        if (kills == 0xbb6 + 0x4 * -0x93f + -0x1948 * -0x1) Render.StringCustom(Render.GetScreenSize()[-0x141 * 0x3 + -0x1 * -0x1fb5 + 0x2 * -0xdf9] / (-0x1 * -0xdbd + -0x1301 + 0x546), 0x8d + 0x45d + -0x3f0, -0xb9 * 0x29 + -0x2f1 * -0x3 + 0x7 * 0x2f9, "DOUBLE KILL", [effects[_0x4d833b][-0x1b * -0x5d + 0x1 * -0x1362 + -0xf6 * -0xa][0x110b + 0x1 * -0xdeb + 0x5 * -0xa0], effects[_0x4d833b][-0x1 * -0x82c + 0x413 * -0x5 + 0xc3c][-0x28 * -0xaa + 0x145a + -0x2ee9], effects[_0x4d833b][0x5 * -0x6f + -0x6 * 0x334 + 0x156c][0x8 * 0x7c + 0x2160 + -0xc6a * 0x3], effects[_0x4d833b][-0x1 * 0x195d + -0x2c2 * -0x3 + 0x1118]], _0x128720);
                        else {
                            if (kills == -0x1b6 * 0x12 + 0x7d * -0x45 + -0x560 * -0xc) Render.StringCustom(Render.GetScreenSize()[0xec5 * 0x2 + 0x172 * -0x1b + 0x97c] / (0x1b20 + 0x209d + -0x3 * 0x13e9), -0x1b73 * -0x1 + -0x13 * 0x1d3 + -0x4 * -0x20c, 0x105 + 0x3a * -0x53 + 0x11ca, "MULTI KILL", [effects[_0x4d833b][-0x1 * -0xa3d + 0x20dc * -0x1 + -0x19 * -0xe8][0x2f6 * -0x5 + -0x17ae + 0x267c], effects[_0x4d833b][-0x2f8 * -0x6 + 0x8 * 0x72 + -0x1557][0xe8d + 0x1ea3 + -0x2b * 0x10d], effects[_0x4d833b][-0x1ff3 + -0x1541 + 0x289 * 0x15][0x1dff + 0x1708 + -0x3505], effects[_0x4d833b][0x1 * -0x1ca5 + -0xdaf * -0x1 + 0xef7]], _0x128720);
                            else {
                                if (kills == -0x6 * -0x30d + 0x1 * 0x1619 + 0x2863 * -0x1) Render.StringCustom(Render.GetScreenSize()[0x1 * 0x1e8d + -0x16cd + -0x7c0] / (-0x1a67 + 0x1 * 0x13de + 0x43 * 0x19), 0x1355 + -0x467 + -0xdf4, 0x2129 + -0x141 * 0x15 + -0x6d3, "ULTRA KILL", [effects[_0x4d833b][-0xd6f + 0x2 * -0x7ed + 0x1d52][0x23c9 + 0x1095 * -0x2 + -0x29f], effects[_0x4d833b][0xd03 * -0x3 + 0x7b * 0x1b + -0x33 * -0x83][-0xa61 + -0x3fb * 0x7 + -0x263f * -0x1], effects[_0x4d833b][-0xfa1 * 0x1 + 0x1adf + 0x1 * -0xb35][0x1 * 0xa97 + -0x1c3 * 0x7 + 0x1c0], effects[_0x4d833b][-0x106a + -0x23 * -0x4a + 0x64d]], _0x128720);
                                else {
                                    if (kills == -0x33 * 0x1d + 0x82 * 0xb + 0x36) Render.StringCustom(Render.GetScreenSize()[0x1 * 0x30d + -0x1111 + -0x8a * -0x1a] / (-0x1e03 + 0xe * -0x27a + 0x40b1), -0x1d8e + -0xea * 0x8 + 0x25d8 * 0x1, 0x9 * 0x8f + 0x7 * -0xc1 + 0x41, "PENTA KILL", [effects[_0x4d833b][-0x1d84 + 0x2 * 0x6fb + -0xd * -0x133][-0x30a + -0x1874 + 0x1b7e], effects[_0x4d833b][-0x8b5 + 0x981 + -0xc3][-0x1504 + 0x5 * -0x4be + -0x15b * -0x21], effects[_0x4d833b][-0x5 * 0x4be + 0xb7b * -0x3 + 0x3a30][-0x49 * -0x61 + -0x2da * 0x7 + -0x7b1], effects[_0x4d833b][-0x14b8 + 0x11 * -0x236 + 0xfd * 0x3b]], _0x128720);
                                    else {
                                        if (kills == 0x76f * 0x5 + -0x484 + -0x20a1) Render.StringCustom(Render.GetScreenSize()[0x1 * 0x1058 + 0x34 * 0x2b + -0x1914] / (0x5 * -0xc1 + -0x1 * 0x14eb + 0x18b2), -0x26 * 0x59 + 0x38b * -0x1 + 0x5e9 * 0x3, 0x7f * 0x11 + 0x12f + -0x17 * 0x6b, "GOD LIKE", [effects[_0x4d833b][0x2 * -0xa6f + 0xd52 + 0x795][0x1ec * -0x3 + -0x1245 + 0x1 * 0x1809], effects[_0x4d833b][-0x23b9 + 0x4 * -0x829 + -0x4466 * -0x1][-0xe57 + 0x1324 + 0x4 * -0x133], effects[_0x4d833b][-0x2101 + -0x636 + -0x10 * -0x274][0x13c5 * -0x1 + -0x1e99 * -0x1 + -0xad2], effects[_0x4d833b][-0x22a + -0x3c8 + 0x5f3]], _0x128720);
                                        else {
                                            if (kills == 0x1556 * -0x1 + -0x1b79 + 0x30d6) Render.StringCustom(Render.GetScreenSize()[0x638 * 0x4 + 0x167b * -0x1 + -0x265 * 0x1] / (-0x22ee + -0xfda + 0x6 * 0x877), 0x2549 + 0x20 * -0x2 + -0x240f, 0xf1b + 0xc * -0xc1 + -0x60e, "LUDICROUS", [effects[_0x4d833b][-0x1 * -0x1431 + -0xebd + -0x56b][0x1194 + 0x291 * -0x1 + -0xf03], effects[_0x4d833b][-0x26 * 0xb5 + -0x7 * -0x243 + -0xda * -0xd][0x455 + -0x1ad8 + 0x1684], effects[_0x4d833b][-0x65 * -0x5 + 0x1b3 * -0x9 + 0xd5b][-0x1166 + -0x3c8 * 0x6 + -0x2818 * -0x1], effects[_0x4d833b][-0x1c76 + 0x2 * 0x130e + -0x9a5]], _0x128720);
                                            else kills >= 0x69f + -0x644 + 0x7 * -0xc && kills <= 0x90 + 0x1eef + 0x3 * -0xa79 && Render.StringCustom(Render.GetScreenSize()[0x416 + -0x2445 + 0x202f] / (-0x241 * -0x4 + -0x1 * -0x3c1 + -0xcc3), -0x1973 + 0x1853 + 0x21a, -0x15fe * -0x1 + 0x74c * -0x5 + 0xe7f, "UNSTOPPABLE", [effects[_0x4d833b][-0x2627 + -0x128b + -0x2f * -0x135][-0x5 * -0x27b + -0x1cf7 + 0x1090], effects[_0x4d833b][0x689 * 0x1 + 0x1 * -0x72d + 0xad][0x4 * 0x38f + -0x19 * 0x157 + -0x3 * -0x66c], effects[_0x4d833b][-0x1605 + 0x6 * -0x559 + 0x3624][-0x8d1 * 0x3 + 0x27 * 0x23 + -0x152 * -0x10], effects[_0x4d833b][0xb23 + -0x25 * 0x59 + 0x1bb]], _0x128720);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            if (animatedindicators && staticcolor) Render.StringCustom(effects[_0x4d833b][0x19a8 + 0xace + -0x2473], effects[_0x4d833b][-0x56f * 0x1 + 0x1c5f + -0x16ec], 0x44c * -0x2 + 0x166b + -0xdd2, effects[_0x4d833b][-0xe12 + 0x5fe + 0x4 * 0x205] + '', espcolor, _0x128720);
            else {
                if (!animatedindicators && staticcolor) {
                    if (kills == -0x1d03 + 0x1eca * 0x1 + -0xe3 * 0x2) Render.StringCustom(Render.GetScreenSize()[-0xd0f * 0x1 + 0x1 * 0x178a + -0xa7b] / (0x20cf + -0x1ca * 0x1 + -0x1f03), 0x4c3 + -0x3c4 * -0xa + -0x2971, 0x1c20 + 0x231d + -0x3f3c, "FIRST BLOOD", espcolor, _0x128720);
                    else {
                        if (kills == 0x1 * -0x2070 + -0x4 * -0x575 + 0xa9e * 0x1) Render.StringCustom(Render.GetScreenSize()[-0x18b * 0x6 + -0x81 * 0x1 + 0x9c3] / (-0x118 * 0x22 + -0xc9a + -0x4 * -0xc73), -0x699 + -0x303 * -0x8 + 0x1085 * -0x1, 0x11ea + 0xb6d + -0x1d56, "DOUBLE KILL", espcolor, _0x128720);
                        else {
                            if (kills == 0x402 + -0xf6c + -0x4b * -0x27) Render.StringCustom(Render.GetScreenSize()[0x471 * -0x5 + 0x24cb * 0x1 + -0xe96] / (-0x2233 + -0xf3d + 0x3172), 0x16d5 + 0xf85 * 0x1 + -0x12b0 * 0x2, -0x24e7 + -0x1936 + 0x3e1e, "MULTI KILL", espcolor, _0x128720);
                            else {
                                if (kills == -0xbe * 0x2f + -0xbb5 * 0x3 + 0x4605) Render.StringCustom(Render.GetScreenSize()[-0x1 * 0x1da9 + 0x199 * 0x10 + 0x419 * 0x1] / (-0x52 * 0x51 + 0x1 * -0x3b + -0x1 * -0x1a2f), -0x35 * -0xb + -0x5 * -0x44e + -0x16d3, -0x95 * -0x9 + -0x21ec + 0x1cb0, "ULTRA KILL", espcolor, _0x128720);
                                else {
                                    if (kills == -0x8 * -0x191 + -0x7 * -0xed + -0x176 * 0xd) Render.StringCustom(Render.GetScreenSize()[0x1 * -0x1954 + -0x1765 + 0x30b9] / (-0x12b9 + -0x47 * 0x28 + 0x1dd3), -0x1615 + 0xb * 0x185 + 0x3a * 0x1c, -0x1 * -0x1640 + 0x33 * 0xe + -0xdd * 0x1d, "PENTA KILL", espcolor, _0x128720);
                                    else {
                                        if (kills == 0x16b1 * -0x1 + -0x9ec + 0x22d * 0xf) Render.StringCustom(Render.GetScreenSize()[-0xd * 0x115 + -0x4b3 * -0x7 + -0x12d4] / (-0x1 * 0x379 + -0x2625 + 0x29a0), 0xf1b + 0x498 + 0x12b9 * -0x1, -0x7 * -0x1e5 + -0xf2d + -0x1eb * -0x1, "GOD LIKE", espcolor, _0x128720);
                                        else {
                                            if (kills == 0xe46 + -0x1861 + 0xa22) Render.StringCustom(Render.GetScreenSize()[-0x1991 + 0x11 * 0x1f1 + -0x770] / (0x7de + -0x790 * -0x2 + -0x16fc), 0x20d2 + 0x20 * -0x136 + 0x6e8, 0x59 * 0x3e + -0x1 * -0x1fb2 + 0x2b * -0x13d, "LUDICROUS", espcolor, _0x128720);
                                            else kills >= -0x1b6c + -0x3 * 0x26 + 0x1be5 && kills <= -0xd29 + -0xa06 * 0x1 + -0x7c1 * -0x3 && Render.StringCustom(Render.GetScreenSize()[-0x26c2 + 0xcf1 + 0x19d1] / (-0x115 * -0x1e + 0x1f32 * 0x1 + 0x1 * -0x3fa6), 0x148 * 0x13 + -0xbcf + 0xb8f * -0x1, -0xc5b * 0x3 + 0x1ae6 + -0x1f * -0x54, "UNSTOPPABLE", espcolor, _0x128720);
                                        }
                                    }
                                }
                            }
                        }
                    }
                }
            }
            effects[_0x4d833b][-0xb * 0x1f2 + 0x3 * 0xad5 + -0x42 * 0x2b] += Math.sin(effects[_0x4d833b][0xb8f * 0x1 + 0x1668 + -0x21f2] / (0x2059 + -0x1 * -0x1d66 + -0x3d0b) * Math['PI']) * Globals.Frametime() * effects[_0x4d833b][-0x7f * -0x1d + 0xc31 + 0x7 * -0x3cb], effects[_0x4d833b][-0x159d * 0x1 + 0x2f * -0x15 + 0x65f * 0x4] += Math.cos(effects[_0x4d833b][-0x4 * 0x6ca + 0x1 * 0x1816 + -0x1 * -0x317] / (0x1d * -0x8b + 0x1b9d + -0x2 * 0x595) * Math['PI']) * Globals.Frametime() * effects[_0x4d833b][0x241f + 0x2b * -0x5 + -0x13 * 0x1db], effects[_0x4d833b][0x182b + 0x4 * -0x57a + 0x23b * -0x1] ? (effects[_0x4d833b][0xb41 * -0x2 + 0x24a3 + -0xe1a * 0x1] -= Globals.Frametime() * (-0x1f19 + -0xfa5 + -0xe * -0x365), effects[_0x4d833b][0x3bb + -0x2 * -0x641 + -0x5 * 0x33e] < -0xeba + -0x52f * -0x1 + 0x371 * 0x3 && (effects[_0x4d833b][0x64 * 0xf + -0x1 * -0x1412 + -0x2 * 0xcf3] = ![])) : effects[_0x4d833b][-0x109e + -0x19 * 0x179 + 0x3576] += Globals.Frametime() * (-0x1eb8 + -0x1c1 * 0x1 + 0x21a5), effects[_0x4d833b][-0x1330 * 0x2 + -0x16d6 + 0x3d38] ? (effects[_0x4d833b][0x3 * -0x72 + -0x1 * -0x161b + 0x1bb * -0xc] += Globals.Frametime() * (-0x1394 + 0x1 * -0x113f + 0x28bb), effects[_0x4d833b][-0xe5f + 0x1 * -0x1972 + 0x27d2] > 0x205d + -0x45a * -0x8 + -0x2b * 0x18a && effects[_0x4d833b][-0x3 * -0x6b0 + -0x4d * 0x25 + -0x8e9 * 0x1] == 0x2094 + 0x1fd5 + 0x1 * -0x4069 && (effects[_0x4d833b][0x172f + 0x143f + -0x2b6d] = 0x1 * -0x24dd + 0xc8b + 0x1951, effects[_0x4d833b][-0xc64 + 0x174 * -0x8 + -0x22 * -0xb5] = Globals.Realtime(), effects[_0x4d833b][0x2583 + 0x13b1 + 0x2 * -0x1c99] = ![])) : Globals.Realtime() - effects[_0x4d833b][-0x1ac7 + -0x5 * 0x1b + 0x3 * 0x91c] > 0x40f * 0x5 + 0x16 * -0x5f + 0x1d * -0x6b && (effects[_0x4d833b][-0x1643 + 0x2 * 0xdc7 + -0x2 * 0x2a5] -= Globals.Frametime() * (-0x172 * -0x1b + -0x30 * 0x6d + -0x10a2), effects[_0x4d833b][-0xadd + 0x1bb4 + 0x10d6 * -0x1] < 0x1a4e + -0x2366 + 0x918 && (effects.splice(_0x4d833b, -0x1f93 + -0x1249 * 0x1 + 0x31dd), _0x4d833b--));
        }
    }
    if (nameesp) {
        plr = Entity.GetPlayers();
        for (_0x4d833b = -0x15e7 + -0xb * 0x143 + 0x23c8; _0x4d833b < plr.length; _0x4d833b++) {
            if (Entity.IsEnemy(plr[_0x4d833b]) && Entity.IsAlive(plr[_0x4d833b]) && !Entity.IsDormant(plr[_0x4d833b])) {
                pothing = Entity.GetRenderBox(plr[_0x4d833b]), playerName = Entity.GetName(plr[_0x4d833b]);
                var _0x128720 = Render.AddFont("Verdana", -0x2293 + 0x2 * -0xe59 + -0x3f4d * -0x1, -0x1 * 0x1fe1 + 0x1c1 * -0xf + 0x3c24);
                const _0x1fabd1 = Render.TextSize(playerName)[-0x1 * -0x1c3d + -0x1a1 * 0xd + 0x710 * -0x1];
                if (pothing[-0x2b9 + -0x1f25 + 0x1fe * 0x11] == 0x18a1 + -0x1 * -0x1c77 + -0x3517) {
                    var _0x5455df = pothing[-0x4dc + -0x37f * 0xb + 0x2b54] - pothing[0x18d5 + -0x1 * -0x146b + 0x27 * -0x129];
                    _0x5455df /= 0xd0b + 0x17c6 + -0x1b * 0x15d, _0x5455df += pothing[0x655 + -0x4 * 0x699 + 0x1410], Render.FilledRect(_0x5455df - (0x9ca + -0x68a + 0x115 * -0x3) - _0x1fabd1 * (-0xe75 + 0xad * -0x23 + 9756.5), pothing[-0x1b00 + -0x16c3 + 0x31c5] - (-0x32 * -0x27 + 0x1 * 0x4a2 + -0x1 * 0xc2e), _0x1fabd1 + (-0x1bf5 + -0x590 + 0x2189), -0x23 * -0x2 + 0x2608 + 0x7 * -0x577, [-0x11d * 0x9 + 0x453 + 0x1e6 * 0x3, -0x1 * -0x151b + -0x1 * -0x56f + -0x1a8a, 0xa1 * -0x35 + 0x1e98 + 0x2bd * 0x1, -0x2695 + 0x1d06 + -0x7 * -0x169]), Render.FilledRect(_0x5455df - (0x71 * -0x49 + 0x14ee + 0xc * 0xf1) - _0x1fabd1 * (0x236 + -0x1958 + 5922.5), pothing[0x1e5f + 0x33 * 0x8 + -0x1ff5] - (0x1221 + 0x7b6 + -0x5 * 0x527), _0x1fabd1 + (-0x2 * 0x4b2 + 0x1fdf + -0x1677), -0x2 * 0x949 + 0x25d9 * 0x1 + -0x1345, [espcolor[-0x9 * -0x44 + -0x7f * 0x1 + -0x1e5], espcolor[-0x7 * -0x153 + -0x1 * 0x1205 + 0x8c1], espcolor[-0x23b5 + -0xd2d + -0x54 * -0x95], 0xe2 + 0x1 * -0x1b47 + 0x1b64]), Render.StringCustom(_0x5455df + (-0x1 * 0x15b5 + -0x844 + 0x1dfa) * (-0x106 + 0xad * 0x2e + -0x1e0e), pothing[0x6b * 0x53 + -0x1021 * 0x1 + -0xbe * 0x19] - (-0xa1a + -0x1 * 0x85f + 4747.5), 0x108f * -0x1 + 0x21a9 + -0x1119, playerName, [0x6a6 + -0x1 * -0x224d + 0x9fd * -0x4, -0x1 * 0x21f9 + 0x1d42 + -0x2db * -0x2, -0xfc7 + -0x1879 + -0x293f * -0x1, -0x1410 + 0x1 * 0x105f + 0x4b0], _0x128720);
                }
            }
        }
    }
    if (awpautobuy) run && Globals.Curtime() + Local.Latency() / (0x1ebe + 0x1 * -0x1eb5 + 0x3df) >= estimate && purchase(-0x1010 + -0x1 * 0x14ca + 0x2 * 0x126d);
    if (r8hc) {
        hc = UI.GetValue("Hitchance");
        var _0x5edb28 = onGround(plocal);
        _0x5edb28 ? UI.SetValue("Rage", "HEAVY PISTOL", "Accuracy", "Hitchance", hc) : UI.SetValue("Rage", "HEAVY PISTOL", "Accuracy", "Hitchance", heavy_cache);
    }
    if (transparentnade) {
        var _0x1e9637 = {};
        _0x1e9637.flashbang = [0x128b + -0x39a * 0x3 + 0x3 * -0x286], _0x1e9637.molotov = [0x4b * -0x61 + 0x17b7 * -0x1 + 0x3450, -0xc06 + -0x71 * 0x25 + 0x1c8b], _0x1e9637.smoke = [0x2283 + -0x7 * 0x4eb + 0x17 * 0x1], _0x1e9637.nade = [-0xab5 * -0x2 + 0x7c2 + -0x8 * 0x3a0], nades = _0x1e9637, weapon = Entity.GetProp(Entity.GetWeapon(Entity.GetLocalPlayer()), "CEconEntity", "m_iItemDefinitionIndex"), [0x1db3 * 0x1 + -0x15bb + -0x7ca * 0x1, 0x1 * -0x2507 + -0xecd + -0x1a02 * -0x2, 0x1e0a + 0xe60 + -0xf * 0x2f3, 0x1 * -0x111d + -0xaaf + 0x1bf7, -0x2533 + -0x2009 + 0x4568].indexOf(weapon) < -0x45d * -0x5 + 0xb * -0x6d + -0x1122 ? (UI.SetValue("Visual", "SELF", "Chams", "Visible transparency", transparency_cache), !UI.GetValue("Visual", "SELF", "Chams", "Visible override") && (UI.SetValue("Visual", "SELF", "Chams", "Visible override", !![]), UI.SetValue("Visual", "SELF", "Chams", "Visible type", -0x1 * 0x157a + -0x3be * -0x1 + 0x11c8))) : (UI.SetValue("Visual", "SELF", "Chams", "Visible transparency", blendslider), !UI.GetValue("Visual", "SELF", "Chams", "Visible override") && UI.SetValue("Visual", "SELF", "Chams", "Visible transparency", 0xa06 + 0x1 * 0x2312 + 0x1a * -0x1bc));
    }
    for (var _0x4d833b = 0x6eb + -0x1 * 0x3eb + -0x100 * 0x3; _0x4d833b < hitlogs.length; _0x4d833b++) {
        hitlogs[_0x4d833b][0x337 + 0x5d + 0x2 * -0x1c8]++, damagelog = "Hit " + victimName + " in the " + hitboxName + " for " + damageDone + " damage (" + healthRemaining + " health remaining)";
        if (Globals.Curtime() - hitlogs[_0x4d833b][-0x24b5 + -0x1 * -0x1311 + -0x1 * -0x11ab] < -0x1744 + -0x1710 + 0x2e57) continue;
        hitlogs[_0x4d833b][0x282 * -0xf + -0x1a24 + -0x1 * -0x3fc7] -= Globals.Frametime() * (0x1d6e + 0x24bc + -0x2 * 0x1fe9), hitlogs[_0x4d833b][-0x1df7 + 0xe62 + 0x2 * 0x7cd] < -0xaa3 + 0x15a2 * 0x1 + 0x1 * -0xaff && hitlogs.shift(_0x4d833b, 0x56 * -0x6a + -0xe * 0x1d2 + 0x3d19);
    }
    if (hitlog) {
        _0x4185f0 = 0xa4c + 0x172b + 0xc7 * -0x2b, hitlogy = -0x2e + -0xc9 * 0x27 + 0x5 * 0x62b;
        for (var _0x4d833b = -0x3b * 0xd + -0xaff + -0x3 * -0x4aa; _0x4d833b < hitlogs.length; _0x4d833b++) {
            currentLog = hitlogs[_0x4d833b], victimName = currentLog[0x803 + -0x53 * -0x3 + -0x8fc], hitboxName = currentLog[-0x2 * -0x159 + -0x24c1 + 0x2210], damageDone = currentLog[-0xdd * 0x27 + 0x20c7 + 0xe6], healthRemaining = currentLog[-0x2ae * 0x9 + -0x152 + 0x1973], poopshartfont = Render.AddFont("consolas", -0x110f * 0x1 + 0xa0 * -0x35 + 0x3239, 0x25fe + -0x1af6 + -0xaae), curpos = hitlogy + (0x2 * 0xa7c + -0x1 * 0x13d3 + -0xf3) * _0x4d833b;
            healthRemaining == -0x2515 + 0x2 * 0xe8f + -0x1 * -0x7f7 ? damagelog = " Did " + damageDone + " damage to " + victimName + "'s " + hitboxName + " (KILLED)" : damagelog = " Did " + damageDone + " damage to " + victimName + "'s " + hitboxName + ' (' + healthRemaining + " hp remaining)";
            var _0x598385 = Render.TextSizeCustom(damagelog, poopshartfont)[-0x1de6 + 0xdc6 + 0x1020] + (0xd * -0x17 + 0x1fb1 + -0x1e7e);
            Render.FilledRect(_0x4185f0 + hitlogs[_0x4d833b][0x1a * -0x109 + -0x39 * -0x45 + -0x2 * -0x5c9] - (0x1359 * -0x1 + -0x2 * 0x8e1 + -0x49 * -0x85), curpos + (0x1853 * 0x1 + -0x1fe1 + -0x143 * -0x6), _0x598385 + (0x1 * -0x1b68 + 0x1e9c + -0x32a), -0xcd * -0x4 + 0x56d * 0x5 + 0x11 * -0x1c7, [0x132e + -0x1 * 0x1382 + 0x81, 0x12bb + 0x18fd + -0x2b88, -0x45 * -0xb + 0x4a1 * -0x1 + -0x1e1 * -0x1, hitlogs[_0x4d833b][-0x9ce + 0x29 * -0xd9 + 0x2c94]]), Render.FilledRect(_0x4185f0 + hitlogs[_0x4d833b][-0x212e + -0x1 * -0xb7b + 0x15b8] - (-0x20c3 + 0x3b * 0x7b + -0x53d * -0x1), curpos + (0x65 * -0x5b + 0x2 * 0x8ed + -0x9 * -0x202), _0x598385 + (0x87c + 0xce1 + -0x1551), -0x11fb + 0x1 * 0x1594 + -0x37d, [-0x20d9 + -0x1a3e * -0x1 + 0x6c8, -0x22d1 + -0x48 * -0x51 + -0x7 * -0x1bf, 0x1b59 + -0x24a3 + 0x981, 0x311 * 0xb + 0xa30 + 0x4 * -0xabb]), underglow && (pulsate ? Render.GradientRect(_0x4185f0 + hitlogs[_0x4d833b][-0x82e + -0x1424 + -0x5 * -0x5ab] - (-0x1b * -0x12a + -0x1b * -0x159 + -0x42ff), curpos + (0x2 * -0x90e + 0x484 + 0xa6 * 0x15), _0x598385 + (-0x3 * -0x913 + 0x2531 * 0x1 + -0x4061), 0x1 * -0x623 + 0x4 * 0x5d9 + 0x8e * -0x1f, -0x1011 * 0x2 + -0x464 + 0x2486, rainbowmenu ? [colors['r'], colors['g'], colors['b'], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x142 * 0x19 + -0x409 * -0x1 + 0x1b6a) / (0x3 * -0x411 + 0x19 * -0x83 + 6398.5)) % (Math['PI'] * (-0x264 + -0x5 * -0x25f + -0x9 * 0x10d)))) * (0x7 * -0x1f + -0x2bc + 0x1 * 0x494)] : [color[0xf8 * 0xa + -0x2 * -0x803 + -0x19b6], color[-0x10a8 + 0xa35 + 0x674], color[0x265a + 0xd * 0x9f + 0x33 * -0xe9], Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((0x10df + -0x1e9f + 0xdc1) / (-0x139f + -0x10e7 + 9350.5)) % (Math['PI'] * (-0x1b55 + 0x1d0d * -0x1 + -0x12cc * -0x3)))) * (0x1 * 0x177b + 0x5 * 0x236 + -0x218a)], [0x7 * -0x14a + -0x7 * 0x3bf + 0x233f, 0x23e2 * 0x1 + -0x18a8 + 0x2 * -0x59d, -0x1925 + -0x19c1 * -0x1 + -0x9c, 0x116a + 0x847 + 0x1 * -0x19b1]) : Render.GradientRect(_0x4185f0 + hitlogs[_0x4d833b][0x668 + -0x19 * -0x169 + 0xcd * -0x34] - (0x1 * -0x2294 + 0xd19 + 0x164d), curpos + (0xfd6 * -0x1 + -0x18f8 + 0x28d4), _0x598385 + (-0x1 * -0x4a5 + 0x1ec * -0x1 + -0x158 * 0x2), -0x391 * 0x1 + -0x20f7 * -0x1 + 0xcb * -0x25, -0x158b + -0x24f * -0x5 + 0xa00, rainbowmenu ? [colors['r'], colors['g'], colors['b'], hitlogs[_0x4d833b][-0x1 * 0x33b + 0x153b * 0x1 + -0x11fb]] : [color[-0x1668 + -0x1131 * -0x1 + -0x1bd * -0x3], color[0x22bd + 0x67 * -0x35 + -0xd69], color[-0xb * -0x8f + -0x731 + 0x10e], -0x1 * 0x241 + -0x121 * -0x1 + 0x21f], [-0x3 * -0x8eb + 0x1ac0 + -0x1 * 0x3581, 0x10ef + -0x18ca + 0x7db * 0x1, -0x179f + 0x164 * 0x2 + 0x14d7, 0x2b * -0x5b + -0x1 * -0x3a3 + 0xba6])), Render.GradientRect(_0x4185f0 + hitlogs[_0x4d833b][0x1f7 * 0xd + 0x707 * -0x4 + 0x296] - (0x15b3 + -0x377 + -0x116a), curpos + (-0x1 * 0xb17 + -0x26 * -0x56 + -0x1a9), _0x598385 + (-0x2197 + -0xe05 + 0x2fa6), 0x202 * -0xa + -0x12ae + 0x9 * 0x44f, -0x1 * 0xe17 + 0x1533 * -0x1 + 0x234b, rainbowmenu ? [colors['r'] * (0x1308 + -0xb6e + -1945.25), colors['g'] * (0xd * -0x185 + 0x12 * 0x1 + 5039.75), colors['b'] * (0xab + -0x10a5 + 4090.75), hitlogs[_0x4d833b][-0x2f2 + 0x80a + 0x3 * -0x1b1]] : [color[0x23aa + -0x1135 * -0x1 + 0xa93 * -0x5] * (0xa06 + 0x43b * 0x1 + -3648.25), color[0x7b9 * 0x1 + -0x101 * 0x4 + -0x3b4] * (-0x25 * -0xb9 + 0x3 * -0x897 + -247.25), color[0x1150 * 0x2 + -0x980 + 0x283 * -0xa] * (0x4b0 + -0x3be + -241.25), hitlogs[_0x4d833b][0xd0d + -0x21d3 * 0x1 + -0x14cb * -0x1]], rainbowmenu ? [colors['r'], colors['g'], colors['b'], hitlogs[_0x4d833b][-0xab9 + -0x104a + 0x1b08]] : [color[-0x6fc + -0x13af + -0x1aab * -0x1], color[-0xf59 + 0x809 * 0x1 + -0x1 * -0x751], color[0x976 + -0x3 * 0x29 + -0x8f9 * 0x1], hitlogs[_0x4d833b][-0x247c + 0x1a9e + 0x1 * 0x9e3]]), Render.GradientRect(_0x4185f0 + hitlogs[_0x4d833b][0xe91 + 0x665 * 0x2 + -0x1b56] - (-0x1 * -0xb19 + 0x1cd4 + -0x271a), curpos + (-0x1d18 + -0x59 * 0x1d + 0x2732), _0x598385 + (0xe5e + -0x1197 + 0x345), -0x73f * 0x5 + 0xd0c + 0x1732, 0x7d8 + 0x1 * -0x2329 + -0x21a * -0xd, rainbowmenu ? [colors['r'] * (-0x1d * 0x119 + -0x5 * -0x32d + 4084.75), colors['g'] * (0x4fe * -0x6 + -0x2 * 0x63e + 10864.75), colors['b'] * (-0x1c37 + -0x1 * 0x1a7 + 7646.75), hitlogs[_0x4d833b][-0x15d * 0x1 + -0xcb * 0x2 + 0x2f8]] : [color[-0x853 * 0x2 + -0xd * -0x270 + -0xb * 0x15e] * (-0x1 * -0xd91 + -0xaa3 + -749.25), color[-0x1866 + 0x21e1 + 0x1 * -0x97a] * (0x25cd + 0x154e + -15130.25), color[-0x18 * 0x6f + 0x21ff + -0x1795] * (0x1143 + -0x6ed * 0x3 + 900.75), hitlogs[_0x4d833b][-0x201d + 0x1e * -0x63 + 0x2bbc]], rainbowmenu ? [colors['r'], colors['g'], colors['b'], hitlogs[_0x4d833b][-0x38b * 0x5 + 0xe9 * -0x2 + 0x138e]] : [color[-0x2cc + -0x7 * 0x315 + 0x185f], color[0x2 * -0x3c5 + 0x4cc * 0x2 + -0x20d], color[-0x175e * -0x1 + 0x5 * 0xef + -0x1c07], hitlogs[_0x4d833b][-0x12 * 0x13 + -0x2029 + 0x6b4 * 0x5]]), bettercircle(_0x4185f0 + hitlogs[_0x4d833b][-0x1f59 * 0x1 + -0x643 + -0xa9 * -0x39] - (-0x1794 + 0x21ef + -0x980), curpos + (0x2622 + -0x21fb + -0x413), -0x2308 + 0x963 + 0x19ba, rainbowmenu ? [colors['r'], colors['g'], colors['b'], hitlogs[_0x4d833b][0x1c3f + -0x5ff + -0x163b]] : [color[0x21be + 0x7f3 + -0x29b1], color[-0x761 * -0x1 + -0x124b + -0xaeb * -0x1], color[-0x2190 + -0x1490 + 0x3622], hitlogs[_0x4d833b][-0x1687 + -0x24dc + 0x3b68]]), bettercircle(_0x4185f0 + hitlogs[_0x4d833b][-0x1a5c + -0x10f + 0x6dc * 0x4] - (0x1 * 0x14ed + -0x26 + -0x13ec), curpos + (0x18d4 + 0x26ec + -0x3fac), -0x5 * 0x449 + 0x2157 + 0x5eb * -0x2, [-0x8 * 0x13d + -0x1702 + 0x2117, -0x224b + -0x1503 + 0x377e * 0x1, -0xa5f * -0x1 + -0x1dfa + 0x13d2, hitlogs[_0x4d833b][-0x6 * 0x5ef + 0x5e * 0x29 + -0x5 * -0x41d]]), Render.StringCustom(_0x4185f0 + hitlogs[_0x4d833b][0x2478 + 0x5b2 + -0x2a25] - (0x2c + -0x6d * 0xb + 0x567), curpos + (-0x142f + 0x4 * -0x6c4 + 0x2f43), 0x17e2 + -0x1e11 + 0x62f, 'D', rainbowmenu ? [colors['r'], colors['g'], colors['b'], hitlogs[_0x4d833b][-0xb * 0x105 + 0xbe1 + -0xa5]] : [color[-0x1816 * -0x1 + 0x1a6e + 0x2 * -0x1942], color[-0xb * 0x2b + 0x1 * 0xd8b + -0xbb1], color[0xfe4 * 0x1 + -0x13f6 + 0x57 * 0xc], hitlogs[_0x4d833b][-0x404 * -0x9 + -0x26bc + -0xdf * -0x3]], _0x3ca377), Render.StringCustom(_0x4185f0 + hitlogs[_0x4d833b][-0x1d * -0x139 + -0x43 * 0x11 + 0x1efd * -0x1] - (0x2 * -0xd53 + -0xb27 + -0x583 * -0x7), curpos + (-0x579 + -0x1d * 0xe0 + 0x1ee6), -0x9 * -0x2fc + -0x1 * -0x250d + -0x3fe9, damagelog, [0x15ae + -0x2291 + 0x6f1 * 0x2, 0x1a7e + 0x1 * 0x104e + -0x29cd, -0x1eb * -0x9 + -0x1523 + 0x4df * 0x1, hitlogs[_0x4d833b][0x5ff + 0x6 * 0x1c + -0x1 * 0x6a2]], poopshartfont);
        }
    }
    if (hitmarkers) {
        if (Entity.IsAlive(plocal)) {
            var _0x233195 = Global.GetScreenSize(),
                _0xe1f5ae = _0x233195[-0x491 + -0x3 * -0x9e1 + -0x1912] / (-0x1e7 + -0x1 * 0x1129 + 0x1312),
                _0x10822a = _0x233195[-0x427 * -0x7 + 0x4dc * 0x7 + -0xb * 0x5bc] / (-0x1273 + -0x8 * -0x3db + -0xc63);
            if (disableTime > Global.Curtime()) {
                hitmarkercolor = [espcolor[0x1 * -0x2291 + -0x1 * 0xecb + -0x6 * -0x83a], espcolor[0x109e + -0x6cd * 0x1 + 0x2 * -0x4e8], espcolor[0x35 * -0x11 + 0x9b8 * 0x4 + -0x1 * 0x2359], 0x37 * -0x84 + -0x1b83 * 0x1 + 0x38de];
                if (UI.GetValue("manualmodes") == -0x13d * -0xa + -0x7f3 + -0x46d) var _0x3f2f28 = -0x977 + 0x4e7 + -0x18c * -0x3,
                    _0x48419c = _0x3f2f28 + (-0x2702 + -0x49c + 0x72 * 0x62);
                else var _0x5455df = 0x2b * 0x86 + -0x2df * -0x8 + 0x16 * -0x211,
                    _0x48419c = _0x3f2f28 + (0x200c + -0x10c3 + 0x1 * -0xf43);
                var _0x2d9832 = (disableTime - Global.Curtime()) / hitmarkerTime;
                hitmarkercolor[0x1c * 0xd4 + -0x59 * 0x35 + -0x4c0] *= _0x2d9832, Render.Line(_0xe1f5ae - _0x48419c, _0x10822a - _0x48419c, _0xe1f5ae - _0x3f2f28, _0x10822a - _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae - _0x48419c, _0x10822a - _0x48419c, _0xe1f5ae - _0x3f2f28, _0x10822a - _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae - _0x48419c, _0x10822a + _0x48419c, _0xe1f5ae - _0x3f2f28, _0x10822a + _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae - _0x48419c, _0x10822a + _0x48419c, _0xe1f5ae - _0x3f2f28, _0x10822a + _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae + _0x48419c, _0x10822a + _0x48419c, _0xe1f5ae + _0x3f2f28, _0x10822a + _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae + _0x48419c, _0x10822a + _0x48419c, _0xe1f5ae + _0x3f2f28, _0x10822a + _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae + _0x48419c, _0x10822a - _0x48419c, _0xe1f5ae + _0x3f2f28, _0x10822a - _0x3f2f28, hitmarkercolor), Render.Line(_0xe1f5ae + _0x48419c, _0x10822a - _0x48419c, _0xe1f5ae + _0x3f2f28, _0x10822a - _0x3f2f28, hitmarkercolor);
            }
        }
    }
    autopeek && ((playing || moving && plocal_alive) && draw_circle(startpos[-0x1 * 0xf53 + 0x14b9 + -0x566], startpos[-0xa97 + 0x2c3 * -0x7 + 0x1 * 0x1ded], startpos[-0x8 * 0x161 + 0x9 * 0x149 + -0x87], 0x29 * -0xb5 + -0x161 + 0x1e6e, -0x6c5 * 0x4 + -0x86 * 0x3b + 14838.3, UI.GetColor("Misc", "JAVASCRIPT", "Script items", "Auto peek color")));
    UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Minimum damage key") ? (!LMAOWTF && (general = UI.GetValue("Rage", "GENERAL", "Minimum damage"), pistol = UI.GetValue("Rage", "PISTOL", "Minimum damage"), heavy = UI.GetValue("Rage", "HEAVY PISTOL", "Minimum damage"), scout = UI.GetValue("Rage", "SCOUT", "Minimum damage"), awp = UI.GetValue("Rage", "AWP", "Minimum damage"), auto = UI.GetValue("Rage", "AUTOSNIPER", "Minimum damage"), LMAOWTF = !![]), mindmg && (UI.SetValue("Rage", "GENERAL", "Minimum damage", mindmgslider), UI.SetValue("Rage", "PISTOL", "Minimum damage", mindmgslider), UI.SetValue("Rage", "HEAVY PISTOL", "Minimum damage", mindmgslider), UI.SetValue("Rage", "SCOUT", "Minimum damage", mindmgslider), UI.SetValue("Rage", "AWP", "Minimum damage", mindmgslider), UI.SetValue("Rage", "AUTOSNIPER", "Minimum damage", mindmgslider))) : LMAOWTF && (mindmg && (UI.SetValue("Rage", "GENERAL", "Minimum damage", general), UI.SetValue("Rage", "PISTOL", "Minimum damage", pistol), UI.SetValue("Rage", "HEAVY PISTOL", "Minimum damage", heavy), UI.SetValue("Rage", "SCOUT", "Minimum damage", scout), UI.SetValue("Rage", "AWP", "Minimum damage", awp), UI.SetValue("Rage", "AUTOSNIPER", "Minimum damage", auto)), LMAOWTF = ![]);
    Input.IsKeyPressed(0x1 * -0xa11 + 0x82 * -0x24 + 0x2 * 0xe59) && (typing = !![]);
    (Input.IsKeyPressed(0x4 * -0x7a0 + 0x83 * -0x1e + 0x2df5) || Input.IsKeyPressed(0x1083 + 0x154c + -0x166 * 0x1b)) && (typing = ![]);
    if (rainbowmenu) _0x122599 = colors['r'], _0x35c382 = colors['g'], _0x5c1f45 = colors['b'];
    else {
        if (UI.GetValue("manualmodes") == -0x6 * -0x42a + -0x3a * -0x14 + 0x1 * -0x1d82 && fakeamount) {
            var _0x4a9cf3 = Local.GetRealYaw(),
                _0x75b9e5 = Local.GetFakeYaw(),
                _0x502cbb = _0x4a9cf3 - _0x75b9e5;
            if (_0x502cbb > -0x1bc7 + -0x6b5 + 0x2330) _0x502cbb -= 0x1f40 + 0xed1 * -0x1 + -0x1 * 0xf07;
            if (_0x502cbb < -(-0x3 * -0x3f1 + 0x17c9 + -0x22e8)) _0x502cbb += -0x2687 + -0x9 * 0x79 + 0x2c30 * 0x1;
            _0x502cbb = Math.abs(_0x502cbb) / (-0x18aa + -0x2 * -0x997 + -0x1 * -0x5f4);
            var _0x122599 = 0x3 * -0x9a9 + -0x43 * -0x7b + -0x237 - _0x502cbb * (0x1 * -0x1b0f + -0x2155 + -0xa * -0x614) * (0xf19 + -0x15fb + 1764.55),
                _0x35c382 = _0x502cbb * (-0x373 * -0x9 + 0x1 * 0x420 + 0x133 * -0x1d) * (0x1bfc + -0x126 * -0xe + -11277.45),
                _0x5c1f45 = -0x1db5 + 0x759 + 0x165c;
        } else selectedcp = espcolor, _0x122599 = selectedcp[-0x13ae + -0x23c + 0x15ea], _0x35c382 = selectedcp[0x187d + -0x618 + -0x1264], _0x5c1f45 = selectedcp[-0xf3f + 0x24a * 0x10 + -0x155f];
    }
    const _0x5ddfee = Math.sin(Math.abs(-Math['PI'] + Globals.Curtime() * ((-0x1b8e + 0x566 * -0x1 + -0xb * -0x2ff) / (-0x2 * 0x55d + 0x1d5d * 0x1 + -4770.5)) % (Math['PI'] * (-0x3 * 0x8e + -0x20f3 + 0x1 * 0x229f)))) * (0x220c * 0x1 + -0x20bb + -0x52);
    if (plocal_alive) {
        if (UI.GetValue("manualmodes") == -0x9ad * 0x1 + -0xe1f + -0x17cd * -0x1) {
            Render.Line(screensize[0x37b * 0x9 + -0x1781 + 0xd * -0x9a] / (0x249b + 0x14f1 + -0x398a) - (0x1a93 * -0x1 + -0x655 * 0x2 + 0x7e1 * 0x5), screensize[0x5a4 + -0x247 + -0x35c] / (0x1a55 + -0xc8d + 0x2b * -0x52), screensize[0x1e45 + -0x6f5 * 0x2 + -0x105b] / (0x5d1 * -0x2 + 0x941 * -0x2 + -0x1e26 * -0x1) - (-0x1270 + 0x108f + -0x209 * -0x1), screensize[0x13 * 0x1db + 0x1fd5 + -0x4315] / (-0x25e8 + -0xae3 + 0x30cd) + (0x3 * -0x565 + -0x21f2 + -0x2a5 * -0x13), [-0x10ca + 0x4 * 0x3ee + -0x162 * -0x1, -0x1 * -0x2309 + -0x71 * -0x33 + -0x393c, 0x2 * 0x105b + 0x8 * -0xa3 + 0x1b4e * -0x1, 0x1 * 0xf8b + -0x47 * -0x65 + -0x2af8], 0x557 + -0x13c9 + 0x833 * 0x2), Render.Line(screensize[-0x1131 + 0x162b + -0x1 * 0x4fa] / (-0x145 + 0x1177 + -0x1030) + (0x245e + 0x19d1 + -0xed * 0x43), screensize[-0x1 * 0x2385 + -0x2392 + 0x4718] / (-0x184c + 0x9d * -0x19 + -0x27a3 * -0x1), screensize[-0x204e + -0x424 + 0x2472] / (0x267 + 0x49 * -0x1 + -0x6 * 0x5a) + (0x6 * -0x443 + -0x1410 + 0x2dca * 0x1), screensize[-0x225b * -0x1 + 0x239b + -0x1 * 0x45f5] / (-0x1394 + -0xe * 0x49 + 0x1794) + (0x105b + -0x1413 + 0x3d6), [0xbe7 + 0x1 * -0xa98 + -0x1 * 0xff, 0x21c9 * -0x1 + 0x2196 + 0x83, -0x1258 * 0x1 + 0x1 * -0x109a + 0x2342, -0xc1 * 0x2 + -0x3 * 0x626 + 0x148a], -0x11 * 0xbb + -0x549 * 0x1 + 0x13a8), Render.Line(screensize[0x5 * -0x75d + 0x1138 + -0x1 * -0x1399] / (0x9c9 + -0x1744 + -0xd7d * -0x1) - (-0x3c5 + -0x1 * -0x3f1 + -0x1 * 0x4), screensize[-0x1faf * 0x1 + 0xbb * 0x2f + 0x2a5 * -0x1] / (0x3 * 0x4a7 + 0x1 * 0x8c5 + -0x16b8) + (0x1 * -0x251a + 0x13ad * -0x1 + 0x38e5), screensize[-0x11cc + -0x88c * -0x2 + -0x2 * -0x5a] / (-0x375 * 0xb + 0x1 * -0x1cde + -0x42e7 * -0x1) - (0x129 * -0xa + -0x139e + 0x1f4c), screensize[-0xea4 + -0x167d + -0x62 * -0x61] / (0x1 * -0x18f1 + 0x10cc + 0x827) + (0xdd3 * 0x2 + -0x13fe + -0x776), [-0x9c2 + -0x3f * -0x26 + 0x1 * 0xb8, 0x15f0 + 0x1c0b * -0x1 + 0x66b, -0x4 * 0x87d + 0x22 * 0xe8 + 0x374, -0x1712 * -0x1 + -0x37f + -0x1 * 0x12fd], 0x1 * -0x779 + 0x9fe + -0x91), Render.Line(screensize[0x91d + -0x3 * -0x567 + 0x7 * -0x39e] / (0x5e5 + 0x19e5 + -0x1fc8) + (0x11 * -0xfd + 0x1 * -0x16fd + 0x27f2), screensize[-0xb7b + -0x1e4 * -0x7 + -0x1c0] / (0x1 * 0xf1d + 0x16e + 0x33 * -0x53) + (-0x1c * 0x146 + 0x1 * 0x1fc9 + 0x3fd), screensize[0x65c + 0xbb8 + 0x1a * -0xb2] / (0x1 * -0xf86 + 0x1cc8 + -0xd40) + (0x17dc + -0x1d + -0x17ab), screensize[0x3d1 * -0x3 + 0x4c7 + 0x1 * 0x6ad] / (0xa8 * 0x16 + -0x3 * 0x84b + 0xa73) + (-0x1 * -0xfed + -0x228 * 0x3 + -0x943), [-0x10 * -0x131 + 0x1c2b + -0x2eeb * 0x1, 0x2f * 0x11 + -0xa14 + 0x745 * 0x1, -0xf7 * 0x28 + -0x2706 + 0x19fa * 0x3, -0x4 * -0x4b1 + -0x1957 * -0x1 + -0x2b85], 0x89 * -0x19 + -0x18ec + 0x2841), Render.Line(screensize[-0x6de + 0x1 * 0x22de + -0x1c00] / (0x59f + -0x22a4 + 0x1d07 * 0x1) - (0x15bf + 0x1999 + 0x4 * -0xbd1), screensize[-0xdc5 + 0x20 * 0xa7 + -0x6 * 0x12f] / (0xa5f + -0x186 + 0x8d7 * -0x1) + (-0x1 * -0x1039 + -0x1dd6 + 0xdcf), screensize[0x14ac + -0x531 * 0x1 + -0xf7b] / (-0xbb0 + -0xd6d + 0x191f) + (-0x1e12 + 0x14d1 + 0x955), screensize[-0x1 * -0x1279 + 0x1243 + 0x1 * -0x24bb] / (0x246e + 0x83c + -0x1 * 0x2ca8) + (0x1b * 0x134 + 0x7 * 0x39e + -0x399c), [0x2556 + -0x63c + -0x1eca, 0xf96 + 0x1160 * 0x1 + -0x20a6, -0x24e7 + 0x3 * 0x39e + 0x1a5d * 0x1, -0x124 * 0x12 + 0x4bc * 0x8 + -0x10c2], 0xe2 * 0x1e + -0xc * -0x120 + -0x1304 * 0x2);
            if (UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter")) Render.Line(screensize[-0x1697 + 0x708 + 0xf8f] / (-0x419 + 0x6f1 * 0x1 + -0x16b * 0x2) - (-0xd * 0x185 + -0x1f35 + 0x331e), screensize[-0x147f + -0x223 * 0x1 + 0x16a3] / (-0x10 * 0x18f + 0x33 * -0xbd + 0x3e99) + (0x15e * 0x1 + 0x264 * -0x5 + 0xab4 * 0x1), screensize[0x1 * -0x15bf + 0xe37 + 0x1e2 * 0x4] / (0x16ed + 0x55d + -0x1c48) - (-0xfe * 0x13 + -0x18ee + -0x4 * -0xaf7), screensize[0x1612 + 0x5b9 + 0x1 * -0x1bca] / (0x37d * 0xa + 0x11 * 0x106 + 0x1a23 * -0x2) + (-0x7fa * -0x4 + -0x1cc6 * -0x1 + -0x3c7c), [_0x122599, _0x35c382, _0x5c1f45, _0x5ddfee], 0x2 * 0x1c1 + 0x16fe + -0x188c);
            else !UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter") && Render.Line(screensize[0x16d2 + -0x1c74 + 0x2d1 * 0x2] / (-0x875 + -0x107c + -0x1 * -0x18f3) + (0x5 * -0x1f + 0x1e30 + -0x1d6d), screensize[-0x1990 + 0x145d + 0x25 * 0x24] / (-0x1 * 0x1242 + -0x86 * 0x10 + 0x1aa4) + (0xaf + 0x2532 + -0x25c3), screensize[-0x23aa + 0x234 + 0x2176] / (0x255 * -0x3 + -0xa75 + 0x1176) + (0x2571 + -0x15b8 + -0x9 * 0x1bd), screensize[-0x190e + -0x26d5 + 0x3fe4] / (0x2 * -0x7ca + -0x12b * 0x15 + 0x281d) + (-0x9f7 + -0xdac + 0x17d5), [_0x122599, _0x35c382, _0x5c1f45, _0x5ddfee], -0x2c * -0x2b + -0x1334 * 0x2 + 0x20f8);
            if (drawLeft) Render.Line(screensize[0xbf * 0x25 + -0x4d * 0x39 + 0xce * -0xd] / (0x2128 + -0x658 * 0x3 + -0xe1e) - (0xa41 + 0x1db3 * -0x1 + 0x139a), screensize[0x1 * -0xabc + 0x2a1 * -0x9 + 0x11 * 0x206] / (-0x18aa + 0x4 * -0x80d + 0x5b * 0xa0), screensize[-0x1 * -0x15b + -0x1 * 0x1b9a + 0x1a3f] / (-0x151 * 0x15 + -0x53 * -0x43 + -0x45 * -0x16) - (-0x1754 + 0x5 * 0x3f7 + -0x1 * -0x3a9), screensize[-0x1a17 + 0x1dcf + -0x3b7] / (-0x3 * -0x4e3 + 0x1c8d * 0x1 + -0x4f * 0x8c) + (0x19 * 0x10b + 0x22 * 0xc5 + -0x341f), [_0x122599, _0x35c382, _0x5c1f45, 0x1 * 0x1563 + -0x599 * -0x4 + 0x4a * -0x94], 0x1d68 + -0x1f4b * -0x1 + -0x3abf);
            else {
                if (drawRight) Render.Line(screensize[-0x10cc + 0x1a64 + 0x1 * -0x998] / (0x373 * 0x8 + 0x117 + -0x1cad) + (-0x92f * 0x4 + -0xa6 * -0x17 + 0x15fa), screensize[-0xd * 0x278 + -0xa50 + 0x2a69] / (-0x1 * 0x1345 + -0x192f + 0x2c76), screensize[-0x20cd + -0x3 * 0x655 + 0x1e * 0x1ba] / (-0x578 + 0x64a + -0xd0) + (0x1716 + -0xc43 + -0xaab * 0x1), screensize[0xb31 + 0x1 * 0x24b6 + -0x2fe6] / (0xc46 + 0x212c + -0x2d70) + (-0x26a * 0x4 + -0x1243 + 0x1c09), [_0x122599, _0x35c382, _0x5c1f45, -0x99d + 0x1198 + -0x95 * 0xc], 0x2b * -0x6b + -0x76 + 0x1463);
                else drawBack && Render.Line(screensize[-0x1284 + -0x4f7 + 0x177b * 0x1] / (-0x1 * 0x2533 + 0x1 * -0x4c2 + 0x29f7) - (0x1074 + -0x16ea + 0x68a), screensize[-0xf54 + -0xc26 + 0x1b7b] / (0x1f49 + 0x1cbd + 0xf01 * -0x4) + (-0x7b7 + 0x213d + -0x2 * 0xcaa), screensize[0x6d4 + -0x3bd + 0x317 * -0x1] / (-0x955 + -0xa35 * 0x3 + 0x27f6) + (0x1b51 + -0xe * -0x51 + -0x1fab), screensize[-0x4ef * 0x1 + -0x358 + 0x2 * 0x424] / (0x321 + -0x24b8 + 0x2199) + (-0x24e5 + -0x196d + -0xfa1 * -0x4), [_0x122599, _0x35c382, _0x5c1f45, 0x1303 + -0x7 * -0xc1 + -0x174b * 0x1], 0x7 * 0x106 + 0x2359 * 0x1 + 0xd85 * -0x3);
            }
        } else {
            if (UI.GetValue("manualmodes") == -0x7fa + 0x511 * -0x1 + 0xd0d * 0x1) {
                Convar.SetString("crosshair", '0'), UI.SetValue("Visual", "WORLD", "Penetration dot", !![]);
                var _0x12d4bc = screensize[-0x7 * 0xb4 + -0x5e9 + -0x1 * -0xad5] / (-0x1 * -0x1a4d + 0x3 * 0x38 + -0x1af3),
                    _0x1b4a26 = screensize[0x9f3 + 0x87c + -0x126e] / (-0x1251 + 0x1 * -0x260f + 0x3862),
                    _0x30fa9d = Local.GetViewAngles(),
                    _0x582999 = Local.GetRealYaw(),
                    _0x201bfc = _0x30fa9d[0x1581 + 0x2010 + -0x3590] - (-0x16cc + 0x1716 + -0x1 * -0x6a),
                    _0x4a9cf3 = adjust_angle(_0x582999 - _0x201bfc);
                removedinner(_0x12d4bc, _0x1b4a26, -0xc74 + -0x263 * -0x3 + 0x55a, -0xa2b + -0x47f * 0x7 + 10664.5, [0x22 * 0x101 + 0xb1 * 0x1 + -0x226f, -0x64e + 0x738 + -0x86, -0x24cc + -0x28 * -0xc7 + 0x618, -0x2118 + -0xba9 * -0x3 + -0x16b * 0x1]), semicircle(_0x12d4bc, _0x1b4a26, -0x1372 + -0x717 + 0x1aa2, _0x4a9cf3 - (0x149f + -0x587 + 0x6 * -0x266) * (-0x1de2 + -0x10d4 + 11958.2), 0x21 * 0x3b + -0x1 * -0x5f2 + -0xd3d, -0x1cd6 + -0x1b88 + 0x3863, 0x24d * -0xc + 0x188 + -0x18e * -0x11, [_0x122599, _0x35c382, _0x5c1f45, -0x64d * -0x3 + -0x634 + 0x2 * -0x5da]), semicircle(_0x12d4bc, _0x1b4a26, -0x1 * -0x10d + 0xd44 + -0xe42, UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter") ? -(-0x23bd + -0x1423 + 0x1 * 0x383a) : -0x19 * 0x185 + 0x377 * 0x2 + 0x1f69, -0x33b * 0x5 + 0x1 * -0x213f + -0x35 * -0xf2, 0xe2 * -0xb + -0x9f7 + 0x13b2 * 0x1, -0x247c + -0x5 * -0x521 + -0x5 * -0x23b, [_0x122599, _0x35c382, _0x5c1f45, 0x3a + -0x1 * -0x141a + 0x7 * -0x2c3]);
            }
        }
    }
    if (UI.GetValue("AA mode") == -0x1329 + 0x746 + 0xbe5) {
        _0x29ef17 = Entity.GetLocalPlayer();
        if (!Entity.IsAlive(_0x29ef17)) return;
        if (bullet_impact_user != bullet_start_user) return;
        if (bullet_impact_user == -(0x22e7 + 0x2286 + -0x456c * 0x1) || bullet_start_user == -(0x2e * 0x37 + -0xa * -0x1a1 + -0x1a2b) || bullet_start_loc == [] || bullet_impact_loc == []) return;
        local_pos = Entity.GetHitboxPosition(_0x29ef17, 0xf22 + 0x16ab + -0x81 * 0x4b), x0 = local_pos[0x2597 + 0x1dc7 * -0x1 + -0x3e8 * 0x2], y0 = local_pos[0x698 + 0x1 * 0x1625 + -0x1cbc], z0 = local_pos[0x13a3 + 0x5e5 * 0x2 + -0x1f6b], x1 = bullet_start_loc[0x11db + -0x12bd + 0xe2], y1 = bullet_start_loc[-0x15b0 * -0x1 + -0x753 + 0x2 * -0x72e], z1 = bullet_start_loc[0x22 * -0x3b + -0x11d3 + 0x19ab], x2 = bullet_impact_loc[0xbcc + 0x2 * 0xac1 + 0xcb * -0x2a], y2 = bullet_impact_loc[0x136c + -0x1 * -0x121b + 0x1 * -0x2586], z2 = bullet_impact_loc[0x35 * -0x55 + 0x1be * -0x13 + 0x32b5], t = -((x1 - x0) * (x2 - x1) / Math.pow(Math.abs(x2 - x1), 0x6b * -0x7 + -0x1cc3 * 0x1 + 0x1fb2)), d = Math.sqrt(Math.pow(x1 - x0 + (x2 - x1) * t, -0xe33 + 0xa2 * 0x12 + 0x2d1) + Math.pow(y1 - y0 + (y2 - y1) * t, 0x2021 + -0x6 * -0x20e + 0x2c73 * -0x1) + Math.pow(z1 - z0 + (z2 - z1) * t, 0x53 * 0x78 + -0xcf7 * 0x2 + -0xcf8)), d < 0x24ba + -0x22a + -0x21c8 && UI.ToggleHotkey("Anti-Aim", "Fake angles", "Inverter"), bullet_impact_user = -(0x2157 + 0x51b + -0x2671), bullet_impact_loc = [], bullet_start_user = -(-0x1 * 0x24d9 + -0x106f * -0x1 + -0x1 * -0x146b), bullet_start_loc = [];
    }
}
var localobservers = [],
    n_local_obs = [],
    local_dead, heavy_cache = UI.GetValue("Rage", "HEAVY PISTOL", "Accuracy", "Hitchance");

function onGround(_0x2e55cc) {
    players = Entity.GetPlayers();
    for (i = -0x9 * 0xf9 + 0x21f2 + -0x1931; i < players.length; i++); {
        var _0x3b7495 = Entity.GetProp(_0x2e55cc, "CBasePlayer", "m_hGroundEntity");
    }
    return _0x3b7495;
}
var transparency_cache = UI.GetValue("Visual", "SELF", "Chams", "Visible transparency"),
    stopspam = !![];

function shiftshit(_0x4224bf) {
    if (improveddt) {
        var _0x42b751 = Entity.GetName(Entity.GetWeapon(Entity.GetLocalPlayer()));
        _0x42b751 == "awp" || _0x42b751 == "ssg 08" ? UI.IsHotkeyActive("Misc", "JAVASCRIPT", "Script items", "Teleport key") && tponpeek ? UI.SetValue("Rage", "GENERAL", "Exploits", "Doubletap", !![]) : (UI.SetValue("Rage", "GENERAL", "Exploits", "Doubletap", ![]), stopspam = !![]) : stopspam && (UI.SetValue("Rage", "GENERAL", "Exploits", "Doubletap", !![]), stopspam = ![]);
        var _0x510d22 = Entity.GetWeapon(plocal);
        if (plocal == null || _0x510d22 == null) return ![];
        var _0x177ec5 = Entity.GetProp(plocal, "CCSPlayer", "m_nTickBase"),
            _0x10573c = Globals.TickInterval() * (_0x177ec5 - _0x4224bf);
        if (_0x10573c < Entity.GetProp(plocal, "CCSPlayer", "m_flNextAttack")) return ![];
        if (_0x10573c < Entity.GetProp(_0x510d22, "CBaseCombatWeapon", "m_flNextPrimaryAttack")) return ![];
        return !![];
    }
}

function startshit() {
    improveddt && (Exploit.OverrideTolerance(0x1 * 0x221 + -0x180c + 0x15eb * 0x1), Exploit.OverrideShift(-0x166f + -0x1 * 0x124f + 0x28cc));
}

function pHurt() {
    hitlog && (attackerEntity = Entity.GetEntityFromUserID(Event.GetInt("attacker")), attackerEntity == plocal && (victimName = Entity.GetName(Entity.GetEntityFromUserID(Event.GetInt("userid"))), hitboxName = hitgroupToHitbox(Event.GetInt("hitgroup")), damageDone = Event.GetInt("dmg_health"), healthRemaining = Event.GetInt("health"), hitlogs.push([victimName, hitboxName, damageDone, healthRemaining, 0x25a8 + -0x215c + -0x4 * 0x113, -0x3 * 0x75f + 0x1 * 0x4fb + 0x1221, (Math.random() * (0x28f * -0x1 + 0x2028 + -7576.8 - (0xaa * -0x1 + 0x1145 * -0x2 + 9013.2)) + (-0x119d * 0x1 + 0xc86 + 1304.2)).toFixed(0xd9a + 0x1a70 + -0x2806), Globals.Curtime()]), healthRemaining == 0x8 * -0x440 + 0x1 * -0x2089 + 0x4289 ? damagelog = "[Desolate] Did " + damageDone + " damage to " + victimName + "'s " + hitboxName + " (KILLED)" : damagelog = "[Desolate] Did " + damageDone + " damage to " + victimName + "'s " + hitboxName + ' (' + healthRemaining + " hp remaining)", Global.PrintColor(UI.GetColor("Script items", "Main color"), damagelog + '\n')));
    var _0x1d2424 = Event.GetString("attacker"),
        _0x5a1361 = Event.GetString("health"),
        _0x202570 = Entity.GetEntityFromUserID(_0x1d2424),
        _0xdd5fac = -0x1c68 + -0x1 * -0x25e1 + -2423.5;
    _0x202570 == plocal && (disableTime = Global.Curtime() + _0xdd5fac, didKill = _0x5a1361 <= -0x22ec + -0x868 + 0x2b54, hitmarkerTime = _0xdd5fac);
}
hitlogs = [], welcomelog = [];

function hitgroupToHitbox(_0x45ae12) {
    hitbox = "generic";
    switch (_0x45ae12) {
        case -0x169 * 0x8 + 0x7c2 * 0x1 + 0x7 * 0x81:
            hitbox = "head";
            break;
        case -0xc38 * -0x3 + -0x17 * 0x130 + -0x956:
            hitbox = "pelvis";
            break;
        case 0x22a3 + 0x11e4 + 0x4 * -0xd21:
            hitbox = "body";
            break;
        case -0x1bb * -0x4 + 0x1166 + -0x184e:
            hitbox = "chest";
            break;
        case 0x65b * -0x2 + -0x1100 * -0x1 + -0x445:
            hitbox = "chest";
            break;
        case 0x2 * -0x5d3 + 0x1bdf * 0x1 + -0x1033:
            hitbox = "upper chest";
            break;
        case 0xb3 * 0xc + -0x61 * 0x3c + -0xe5f * -0x1:
            hitbox = "left thigh";
            break;
        case -0x18ec + 0x1a42 + -0xa7 * 0x2:
            hitbox = "right thigh";
            break;
        case 0x20e8 + -0x1 * 0x125 + 0x83 * -0x3e:
            hitbox = "left calf";
            break;
        case -0x1d0d + 0x22ab + 0xee * -0x6:
            hitbox = "right calf";
            break;
        case 0x4b8 * -0x8 + -0x2a1 * -0x9 + 0xe22:
            hitbox = "left foot";
            break;
        case -0x17f3 + -0x11b2 * 0x1 + 0xd * 0x335:
            hitbox = "right foot";
            break;
        case -0xef7 + -0x2269 + 0x316d:
            hitbox = "left hand";
            break;
        case 0x36a + -0x2389 + -0x202d * -0x1:
            hitbox = "right hand";
            break;
        case -0x1226 + 0xcf1 * -0x3 + 0x3908:
            hitbox = "left arm";
            break;
        case 0xb41 * -0x3 + 0x15aa + 0xc29:
            hitbox = "left forearm";
            break;
        case 0x7 * 0x343 + -0x127e + 0x1 * -0x446:
            hitbox = "right arm";
            break;
        case 0x1 * -0x4df + -0x1ec * 0x3 + 0xab5 * 0x1:
            hitbox = "right forearm";
    }
    return hitbox;
}
var cnt = 0x459 + -0x1644 + 0xb * 0x1a1,
    next_update = -0x1 * -0x1993 + -0x3 * 0x321 + -0x1030,
    flip = ![];

function plegitaa() {
    !legitaa && (UI.SetValue("Anti-Aim", "Rage Anti-Aim", "Enabled", ![]), UI.SetValue("Anti-Aim", "Legit Anti-Aim", "Enabled", ![]));
    var _0x106bd2 = !![];
    _0x106bd2 = ![];
    if (cnt % (0x1 * 0xbe9 + 0x9 * -0xab + 0x4 * -0x179)) _0x106bd2 = !![];
    cnt++, flip = !flip;
    var _0x49b018 = Entity.GetLocalPlayer(),
        _0x4122c4 = Local.GetViewAngles(),
        _0x1a4f1e = ![],
        _0x50cf39 = Entity.GetProp(_0x49b018, "CCSPlayer", "m_vecVelocity[0]"),
        _0x54f6ad = Math.sqrt(_0x50cf39[0x1 * 0x853 + 0x849 + -0x109c] * _0x50cf39[-0xa7 * -0x24 + -0xa * -0x5f + -0x1b32] + _0x50cf39[-0x228 * -0x2 + -0x15c9 + 0x117a] * _0x50cf39[0x2009 + 0x566 * 0x6 + -0x406c]),
        _0x1ab239 = UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter"),
        _0x3e7db6 = UserCMD.GetButtons(),
        _0x1ef05a = Entity.GetProp(_0x49b018, "CCSPlayer", "m_nTickBase") * Globals.TickInterval(),
        _0x494879 = Entity.GetProp(Entity.GetWeapon(_0x49b018), "DT_BaseCombatWeapon", "m_flNextPrimaryAttack") <= _0x1ef05a && Entity.GetProp(Entity.GetWeapon(_0x49b018), "DT_BaseCombatWeapon", "m_iClip1") > -0x3 * 0x87b + 0xa81 + -0x2 * -0x778,
        _0x56e10e = -0x19e1 + -0x12ba + 0x259 * 0x13,
        _0x2373a1 = 0x23d1 + -0x12 * 0x153 + -0xbfb;
    if (_0x3e7db6 & 0x16e2 + -0x71b * -0x2 + -0x8c6 * 0x4) _0x2373a1 -= -0x714 + 0x1e0d + -0x1537;
    if (_0x3e7db6 & -0x2554 + -0x805 + 0x3159) _0x2373a1 += 0x3e3 + -0x86d + 0x64c;
    if (_0x3e7db6 & 0x1824 + 0x253a + 0x2 * -0x1eab) _0x56e10e += -0xa10 + 0x17 * 0x16f + -0x1527;
    if (_0x3e7db6 & -0x25cd + -0x237f + 0x495c) _0x56e10e -= 0xf * -0x14d + 0x1a34 + -0x4ef;
    if (next_update <= Globals.Curtime()) {
        _0x54f6ad < 0x1dd3 + -0xe08 + -0xfc1 && (_0x1a4f1e = !![]);
        next_update = Globals.Curtime() + (-0x2 * 0x36d + -0x81e + 3832.22);
        if (_0x2373a1 == -0x1ab * -0x10 + 0x1c8 + -0x1 * 0x1c78) {
            var _0x5e41d2 = 0x3 * -0xc71 + 0x1 * -0x1349 + 14493.1;
            if (_0x3e7db6 & -0x7df + 0x204b + -0x1868) _0x5e41d2 *= 0xc6f + -0x10b * -0x25 + -0x3303;
            _0x2373a1 = flip ? _0x5e41d2 : -_0x5e41d2;
        }
    }
    _0x3e7db6 & 0x25fb + -0xb68 + 0x166 * -0x13 && _0x494879 && (_0x106bd2 = !![], _0x1a4f1e = ![]);
    (_0x3e7db6 & -0x20d7 * -0x1 + -0x1f6b + -0x2 * -0x34a || _0x3e7db6 & -0x2f * 0x27 + -0x67 * -0x2f + -0xbbf) && Entity.GetName(Entity.GetWeapon(_0x49b018)).includes("knife") && (_0x106bd2 = !![], _0x1a4f1e = ![]);
    _0x3e7db6 & 0x159c * -0x1 + -0x25ad + 0x3b69 && !legitaa && (_0x106bd2 = !![], _0x1a4f1e = ![]);
    (Entity.GetName(Entity.GetWeapon(_0x49b018)).includes("grenade") || Entity.GetName(Entity.GetWeapon(_0x49b018)).includes("molotov") || Entity.GetName(Entity.GetWeapon(_0x49b018)).includes("flashbang")) && (_0x106bd2 = !![], _0x1a4f1e = ![]);
    Entity.GetName(Entity.GetWeapon(_0x49b018)).includes('c4') && _0x3e7db6 & -0x1 * -0xbb6 + 0x2374 + -0x2f29 && (_0x106bd2 = !![], _0x1a4f1e = ![]);
    var _0x59d3bf = Entity.GetProp(_0x49b018, "CCSPlayer", "m_hGroundEntity") == "m_hGroundEntity",
        _0xfca92a = UserCMD.GetButtons() & -0xe * -0x2f + -0xf * -0x209 + 0x1 * -0x2117 && UI.GetValue("Misc", "GENERAL", "Movement", "Auto bunnyhop");
    if (_0x59d3bf || _0xfca92a) _0x1a4f1e = ![];
    else UserCMD.SetMovement([_0x56e10e, _0x2373a1, -0x26a7 * 0x1 + 0x1 * 0xd55 + -0xca9 * -0x2]);
    if (_0x1a4f1e) {
        var _0x4c1c01 = Local.GetFakeYaw(),
            _0x3ff594 = Local.GetRealYaw(),
            _0x91d27a = _0x4c1c01 - _0x3ff594;
        while (_0x91d27a < -(0xa * -0x96 + 0x3 * 0xa85 + -0x18ff)) _0x91d27a += 0x1b7 + 0x10e7 + -0x89b * 0x2;
        while (_0x91d27a > 0x977 * -0x2 + 0x2322 + 0x10 * -0xf8) _0x91d27a -= 0x80f + -0x142c + 0xd85;
        _0x91d27a = Math.abs(_0x91d27a);
        if (_0x91d27a > 0x10ab + -0x1213 + 0x1a2) _0x4122c4[-0x3 * 0x54c + 0x61 * -0x1f + 0x1ba4] -= -0x3 * -0x40d + -0x7c3 + 0x2 * -0x1d8;
        else _0x4122c4[-0xfe1 + -0x4d1 + 0x14b3] += _0x1ab239 ? 0x530 + -0xc15 + 0x75d : -(0x19 * -0x6d + -0x34a + 0xe67);
        UserCMD.SetViewAngles(_0x4122c4, !![]), _0x106bd2 = ![];
    } else !_0x106bd2 && (_0x4122c4[-0x5 * 0x279 + 0x1 * 0x12cd + -0x66f] += _0x1ab239 ? -(-0x6b3 + -0x1c07 * 0x1 + 0x2332) : -0x3 * 0x414 + -0x3d * -0x59 + -0x881 * 0x1, UserCMD.SetViewAngles(_0x4122c4, !![]));
    _0x106bd2 ? UserCMD.Send() : UserCMD.Choke();
}
var disableTime, hitmarkerTime, didKill, general = UI.GetValue("Rage", "GENERAL", "Minimum damage"),
    pistol = UI.GetValue("Rage", "PISTOL", "Minimum damage"),
    heavy = UI.GetValue("Rage", "HEAVY PISTOL", "Minimum damage"),
    scout = UI.GetValue("Rage", "SCOUT", "Minimum damage"),
    awp = UI.GetValue("Rage", "AWP", "Minimum damage"),
    auto = UI.GetValue("Rage", "AUTOSNIPER", "Minimum damage"),
    LMAOWTF = ![],
    velocity = 0xb87 + -0x1 * -0x247d + -0x3004,
    screensize = Global.GetScreenSize(),
    isInverted, drawLeft = -0x476 * 0x1 + -0x75 * -0x3 + 0x1 * 0x317,
    drawRight = 0x2 * 0xed1 + -0xa45 + 0x135d * -0x1,
    drawBack = 0x16e1 + -0x177b + 0x1 * 0x9b,
    typing = ![],
    force_baim = 0x1 * 0x1f + -0x207 * 0x6 + 0xc0b;

function vec_add(_0x49055f, _0x2134d6) {
    return [_0x49055f[0x1 * -0x2bf + -0x2276 + 0x2535] + _0x2134d6[0xee5 + 0x2614 + -0xbf * 0x47], _0x49055f[-0x47 * 0x3a + -0x4b * -0x6d + 0x4 * -0x3f6] + _0x2134d6[-0xe1e * 0x1 + -0x102c + 0x1e4b], _0x49055f[-0x217e + -0xe * -0x12 + 0x1 * 0x2084] + _0x2134d6[-0x17ec + -0x43e * 0x4 + 0x28e6]];
}

function RadToDeg(_0x3d38a0) {
    return _0x3d38a0 * (-0x1309 + 0xcd1 + 0x6ec) / Math['PI'];
}

function calcang(_0x5f2838, _0xf96425) {
    var _0x2775c3 = [];
    _0x2775c3[0x45 * 0x6f + -0x1c6a * 0x1 + -0x7 * 0x37] = _0x5f2838[0x45 * 0x20 + 0x15cc + -0x6 * 0x512] - _0xf96425[0x7 * 0x2ef + 0x129 + 0x1 * -0x15b2], _0x2775c3[0x22c9 + 0x3c7 * -0x9 + -0xc9 * 0x1] = _0x5f2838[-0x1 * -0x141f + 0x4f6 + -0x1914] - _0xf96425[0x483 + -0x15c0 + 0x113e], _0x2775c3[-0x2502 + -0x1 * 0x1235 + 0x3739] = _0x5f2838[0x1315 + 0x3 * -0xb8d + 0xf94] - _0xf96425[-0xc5c + -0x6d9 * -0x1 + 0x585];
    var _0x54d41f = [];
    _0x54d41f[-0x3 * 0x659 + -0x5 * -0x2de + -0xf1 * -0x5] = RadToDeg(Math.atan(_0x2775c3[-0x16da + 0x107 * 0x1a + -0x3da] / Math.hypot(_0x2775c3[0x18 * -0xe3 + 0x1e65 + -0x1 * 0x91d], _0x2775c3[-0x1 * -0xccd + 0x1 * -0x89a + -0x432]))), _0x54d41f[0x4a9 * -0x1 + -0x106d + -0x1 * -0x1517] = RadToDeg(Math.atan(_0x2775c3[0x1 * 0x2626 + 0x1389 + -0x39ae] / _0x2775c3[-0x5f5 + -0x26b * -0x9 + -0xfce])), _0x54d41f[-0x5 * -0x39b + 0xa49 + 0x2 * -0xe27] = 0x2 * -0x102f + 0x1792 + 0x2 * 0x466;
    if (_0x2775c3[-0x3 * -0x1c4 + 0x1 * 0x104b + 0x1 * -0x1597] >= 0x1 * 0x1a05 + -0x5d7 + -0x142e) _0x54d41f[0x1125 + -0x1289 + 0x77 * 0x3] += -0x85 * -0x2 + 0x1 * -0x9eb + 0x995;
    while (_0x54d41f[0x1 * -0x1765 + -0x1 * -0x18fb + -0x195] > -0x1060 + 0xf09 + 0x1 * 0x20b) _0x54d41f[0x1e * 0xa7 + -0x1da8 + 0xa17] -= -0x292 + 0x1 * 0x30a + 0x2 * 0x78;
    while (_0x54d41f[-0x10ed + 0x22a6 + 0xe * -0x144] < -(0x1a11 + 0x1c36 + -0x3593)) _0x54d41f[0x878 * -0x3 + -0xeeb + 0x2854] += -0x1a33 + 0x7 * 0x3b0 + 0x1cb;
    return _0x54d41f;
}
var bullet_impact_user = -(-0x12b * -0xf + 0x1a31 + -0x2bb5),
    bullet_impact_loc = [],
    bullet_start_user = -(0xf80 * 0x1 + -0x203 + 0x2 * -0x6be),
    bullet_start_loc = [],
    peeking = -(-0x12cd + 0xa9a * -0x3 + 0x329c);

function in_air() {
    return fv = Entity.GetProp(Entity.GetLocalPlayer(), "CBasePlayer", "m_flFallVelocity"), fv < -(-0x14be + 0x1f * 0x79 + 0x618) || fv > -0x1a83 + 0x17ff * -0x1 + -0xc1 * -0x43;
}

function on_shot() {
    if (!Entity.IsEnemy(Entity.GetEntityFromUserID(Event.GetInt("userid")))) return;
    bullet_start_user = Entity.GetEntityFromUserID(Event.GetInt("userid")), bullet_start_loc = Entity.GetHitboxPosition(Entity.GetEntityFromUserID(Event.GetInt("userid")), 0x1bac + -0x7 * -0x475 + -0x3add);
}

function on_impact() {
    if (!Entity.IsEnemy(Entity.GetEntityFromUserID(Event.GetInt("userid")))) return;
    bullet_impact_user = Entity.GetEntityFromUserID(Event.GetInt("userid")), bullet_impact_loc = [Event.GetFloat('x'), Event.GetFloat('y'), Event.GetFloat('z')];
}
Cheat.RegisterCallback("bullet_impact", "on_impact"), Cheat.RegisterCallback("weapon_fire", "on_shot"), Cheat.RegisterCallback("CreateMove", 'cm'), Cheat.RegisterCallback("CreateMove", 'a'), Cheat.RegisterCallback("Unload", "ifunload"), Cheat.RegisterCallback("round_start", "roundstart"), Cheat.RegisterCallback("player_death", "player_death"), Cheat.RegisterCallback("FrameStageNotify", "reload"), Cheat.RegisterCallback("Draw", "paint"), Cheat.RegisterCallback("FRAME_NET_UPDATE_START", "startshit"), Cheat.RegisterCallback("player_hurt", "pHurt");
var enemies = Entity.GetEnemies(),
    effects = [],
    kills = -0x1f2b + 0x353 + 0x1bd8,
    texts = ["FIRST BLOOD!", "DOUBLE KILL", "MULTI KILL", "ULTRA KILL", "PENTA KILL", "GOD LIKE", "LUDICROUS", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE", "UNSTOPPABLE"];
const server = World.GetServerString();
niggas = "\x78\x38\x36\x23\x30\x30\x38\x36"
var cring = !![],
    yes = !![],
    exploitwarning = !![],
    matchmakingwarning = !![],
    fps = 0x1b16 + 0x1de6 * -0x1 + -0x12 * -0x28,
    last_update = 0x3e3 * 0xa + 0x1 * 0x11f5 + 0x12f1 * -0x3,
    color = UI.GetColor("Misc", "JAVASCRIPT", "Script items", "Main color"),
    a0_0x2b0ee5 = {};
a0_0x2b0ee5.real = 0x0, a0_0x2b0ee5.fake = 0x0, a0_0x2b0ee5.lby = 0x0, a0_0x2b0ee5.side = 0x0, a0_0x2b0ee5.limit = 0x0;
var wish = a0_0x2b0ee5,
    a0_0x14b935 = {};
a0_0x14b935.real = 0x0, a0_0x14b935.fake = 0x0, a0_0x14b935.duck_amount = 0x0, a0_0x14b935.shifting = ![];
var local = a0_0x14b935,
    a0_0x3ec0f2 = {};
a0_0x3ec0f2.flip = ![], a0_0x3ec0f2.tickcount = 0x0;
var a0_0x3aa3ae = {};
a0_0x3aa3ae.crouching = ![];
var a0_0x4f2439 = {};
a0_0x4f2439.alternate = a0_0x3ec0f2, a0_0x4f2439['fd'] = a0_0x3aa3ae, a0_0x4f2439.tick_count = 0x0, a0_0x4f2439.cur_time = 0x0, a0_0x4f2439.debug = !![];
var globals = a0_0x4f2439,
    autodisable = ![],
    lasttag = '';

function render_string(_0x4d67ad, _0x4b2d62, _0x4f6511, _0x5698e2, _0x135061, _0x30bfc7) {
    Render.String(_0x4d67ad - (0x9 * -0xd + 0x2655 + -0x5 * 0x793), _0x4b2d62 - (0x1 * 0x1056 + -0x1 * -0x3 + -0x1058), _0x4f6511, _0x5698e2, [-0x17f4 + -0x1f * 0xb3 + 0x11 * 0x2b0, 0x3e * -0x17 + 0xbde + -0x63d, 0x230f + -0x1d0c + -0x5f4, _0x135061[-0x629 + -0x3e0 + 0xa0c] * (-0x37 * -0x8e + 0xbc3 * 0x3 + -16842.75)], _0x30bfc7), Render.String(_0x4d67ad + (-0xb4c * -0x1 + 0x1 * 0x161f + -0x216a), _0x4b2d62 - (0xf02 + -0x2 * -0x425 + -0x174b), _0x4f6511, _0x5698e2, [-0x16de + 0x1e0e + -0x721, 0x1844 * -0x1 + -0x17 * -0x79 + 0xd74, 0x1e93 * -0x1 + -0xb * 0x11b + -0x2acb * -0x1, _0x135061[-0xe * 0x1c3 + 0xd2c + 0xb81] * (0xf9 + 0x119d * -0x1 + 4260.25)], _0x30bfc7), Render.String(_0x4d67ad - (0x912 + -0x3b * 0x63 + 0xdc0), _0x4b2d62 + (0x1f3b + 0x882 + -0x27bc), _0x4f6511, _0x5698e2, [-0x20e1 + -0x2465 + 0x1 * 0x4555, 0x256 + 0x24 * -0xb1 + 0x169d * 0x1, -0x16 * 0x112 + -0x2 * -0x6ca + 0xa07, _0x135061[0x15c * -0x5 + -0x151 + 0x82 * 0x10] * (0x1425 + 0x88f * 0x2 + -9538.75)], _0x30bfc7), Render.String(_0x4d67ad + (0x1e27 + -0x4c * 0x81 + -0x95 * -0xe), _0x4b2d62 + (0x15a1 * -0x1 + -0x1acf * -0x1 + -0x52d), _0x4f6511, _0x5698e2, [0x7b5 * 0x5 + -0x2 * 0x428 + -0x1e2a, 0x1d5 * -0x13 + -0x14 * 0xb1 + -0x2 * -0x1859, 0xfc8 + -0x946 * -0x1 + -0x18ff, _0x135061[0x1207 + -0x10f8 + 0x43 * -0x4] * (0x250 + 0xca7 + -3830.75)], _0x30bfc7), Render.String(_0x4d67ad, _0x4b2d62, _0x4f6511, _0x5698e2, _0x135061, _0x30bfc7);
}

function weapon_to_icon(_0x59170c) {
    var _0x29042f = '';
    switch (_0x59170c) {
        case "desert eagle":
            _0x29042f = 'a';
            break;
        case "dual berettas":
            _0x29042f = 'b';
            break;
        case "five seven":
            _0x29042f = 'c';
            break;
        case "glock 18":
            _0x29042f = 'd';
            break;
        case "ak 47":
            _0x29042f = 'e';
            break;
        case "aug":
            _0x29042f = 'f';
            break;
        case "awp":
            _0x29042f = 'g';
            break;
        case "famas":
            _0x29042f = 'h';
            break;
        case "m249":
            _0x29042f = 'i';
            break;
        case "g3sg1":
            _0x29042f = 'j';
            break;
        case "galil ar":
            _0x29042f = 'k';
            break;
        case "m4a4":
            _0x29042f = 'l';
            break;
        case "m4a1 s":
            _0x29042f = 'm';
            break;
        case "mac 10":
            _0x29042f = 'n';
            break;
        case "p2000":
            _0x29042f = 'o';
            break;
        case "mp5 sd":
            _0x29042f = 'p';
            break;
        case "ump 45":
            _0x29042f = 'q';
            break;
        case "xm1014":
            _0x29042f = 'r';
            break;
        case "pp bizon":
            _0x29042f = 's';
            break;
        case "mag 7":
            _0x29042f = 't';
            break;
        case "negev":
            _0x29042f = 'u';
            break;
        case "sawed off":
            _0x29042f = 'v';
            break;
        case "tec 9":
            _0x29042f = 'w';
            break;
        case "zeus x27":
            _0x29042f = 'x';
            break;
        case "p250":
            _0x29042f = 'y';
            break;
        case "mp7":
            _0x29042f = 'z';
            break;
        case "mp9":
            _0x29042f = 'A';
            break;
        case "nova":
            _0x29042f = 'B';
            break;
        case "p90":
            _0x29042f = 'C';
            break;
        case "scar 20":
            _0x29042f = 'D';
            break;
        case "sg 553":
            _0x29042f = 'E';
            break;
        case "ssg 08":
            _0x29042f = 'F';
            break;
        case "knife":
            _0x29042f = 'G';
            break;
        case "flashbang":
            _0x29042f = 'H';
            break;
        case "high explosive grenade":
            _0x29042f = 'I';
            break;
        case "smoke grenade":
            _0x29042f = 'J';
            break;
        case "molotov":
            _0x29042f = 'K';
            break;
        case "decoy grenade":
            _0x29042f = 'L';
            break;
        case "incendiary grenade":
            _0x29042f = 'M';
            break;
        case "c4 explosive":
            _0x29042f = 'N';
            break;
        case "usp s":
            _0x29042f = 'P';
            break;
        case "cz75 auto":
            _0x29042f = 'Q';
            break;
        case "r8 revolver":
            _0x29042f = 'R';
            break;
        case "bayonet":
            _0x29042f = 'V';
            break;
        case "flip knife":
            _0x29042f = 'W';
            break;
        case "gut knife":
            _0x29042f = 'X';
            break;
        case "karambit":
            _0x29042f = 'Y';
            break;
        case "m9 bayonet":
            _0x29042f = 'Z';
            break;
        case "falchion knife":
            _0x29042f = '1';
            break;
        case "bowie knife":
            _0x29042f = '2';
            break;
        case "butterfly knife":
            _0x29042f = '3';
            break;
        case "shadow daggers":
            _0x29042f = '4';
            break;
        case "ursus knife":
            _0x29042f = '5';
            break;
        case "navaja knife":
            _0x29042f = '6';
            break;
        case "stiletto knife":
            _0x29042f = '7';
            break;
        case "karambit":
            _0x29042f = '8';
            break;
        case "huntsman knife":
            _0x29042f = '0';
            break;
        default:
            _0x29042f = '';
            break;
    }
    return _0x29042f;
}

function removedinner(_0x490a99, _0x2d927b, _0x36198a, _0xc2e991, _0x57444c) {
    var _0xa5d3e = _0x36198a - _0xc2e991;
    for (; _0x36198a > _0xa5d3e; --_0x36198a) {
        Render.Circle(_0x490a99, _0x2d927b, _0x36198a, _0x57444c);
    }
}

function semicircle(_0x510221, _0x2c7b88, _0x54e8d6, _0x3d808a, _0x48ebab, _0x77cd8, _0x4f64a4, _0x2c1d58) {
    var _0x44e719 = (-0x2460 + 0x1d0c + 0x1 * 0x756) * Math['PI'] / _0x4f64a4,
        _0x4fbd2e = Math['PI'] / (-0x41 * -0x61 + -0x9b6 + -0x3 * 0x4bd),
        _0x45ddee = _0x54e8d6 - _0x77cd8,
        _0x1f67e3 = (_0x3d808a + _0x48ebab) * _0x4fbd2e,
        _0x3d808a = _0x3d808a * Math['PI'] / (-0x2127 + -0x2659 + 0x4834);
    for (; _0x54e8d6 > _0x45ddee; --_0x54e8d6) {
        for (var _0x211af9 = _0x3d808a; _0x211af9 < _0x1f67e3; _0x211af9 += _0x44e719) {
            var _0xe3a08c = Math.round(_0x510221 + _0x54e8d6 * Math.cos(_0x211af9)),
                _0x568069 = Math.round(_0x2c7b88 + _0x54e8d6 * Math.sin(_0x211af9)),
                _0x27e1c4 = Math.round(_0x510221 + _0x54e8d6 * Math.cos(_0x211af9 + _0x44e719)),
                _0x248253 = Math.round(_0x2c7b88 + _0x54e8d6 * Math.sin(_0x211af9 + _0x44e719));
            Render.Line(_0xe3a08c, _0x568069, _0x27e1c4, _0x248253, _0x2c1d58);
        }
    }
}

function adjust_angle(_0x1a8faf) {
    if (_0x1a8faf < -0x2315 + 0xea0 + 0x1475) _0x1a8faf = -0x3cc + -0x243d * -0x1 + -0x35 * 0x9b + _0x1a8faf * -(-0x23ae + 0x157d + 0x4f * 0x2e);
    else _0x1a8faf > 0x109e + -0x13 * 0x4f + -0xac1 && (_0x1a8faf = 0x173b + -0xb66 + -0xb7b - _0x1a8faf);
    return _0x1a8faf;
}
var run = ![],
    estimate = 0x2f * 0xbb + 0x2420 + -0x4675,
    firstBuy = 0x2378 + 0xa * 0x379 + -0x4632;

function roundEnded() {
    run = !![], estimate = Globals.Curtime() + Convar.GetInt("mp_round_restart_delay"), firstBuy = 0x2 * 0xb45 + 0xd18 + -0x11d1 * 0x2;
}

function purchase(_0xe07bcc) {
    Cheat.ExecuteCommand("buy awp"), run = ![];
}

function purchased() {
    if (!awpautobuy) return;
    if (firstBuy == 0x1c * 0x130 + 0x267b + -0x47bb) firstBuy = Globals.Curtime() - estimate;
    if (!Entity.GetEntityFromUserID(Event.GetInt("userid")) || firstBuy == -(-0x2574 + -0xa48 * 0x1 + 0x2fbd)) return;
    var _0x1fafe7 = Globals.Curtime() - estimate;
    Cheat.PrintChat(" [" + "deso" + "late" + "] " + " You purchased the AWP " + '' + _0x1fafe7.toFixed(-0x1332 + 0x52d + -0x1b * -0x85) + " seconds into the round!"), firstBuy = -(-0x1 * -0x1321 + -0x248b * 0x1 + 0x116b);
}
Cheat.RegisterCallback("round_end", "roundEnded"), Cheat.RegisterCallback("item_purchase", "purchased");
var materials = [];

function createMat(_0x46fd20) {
    UI.AddColorPicker(_0x46fd20 + " chams"), Material.Create(_0x46fd20 + " chams"), materials.push([_0x46fd20, _0x46fd20 + " chams"]);
}
var done = ![],
    start_tick = Globals.Tickcount();

function DRAWMEDADDY() {
    if (!start_tick) {
        start_tick = Globals.Tickcount();
        return;
    }
    var _0x4b5f9c = Entity.GetLocalPlayer();
    if (_0x4b5f9c && Globals.Tickcount() - start_tick > -0xaed + -0x1 * 0x1e6b + 0x295d) done = !![];
}
Cheat.RegisterCallback("Draw", "DRAWMEDADDY");
var extra = textboxstring,
    tex = base;

function customchamupdate() {
    if (!customcham) return;
    for (i in materials) {
        if (UI.GetValue("customchampreset") == -0x2 * 0x12cb + 0x1261 + 0x1 * 0x1336) extra = "models/effects/cube_white", tex = "vgui/white";
        else {
            if (UI.GetValue("customchampreset") == 0x16 * -0xf + 0x245c + -0x2310) extra = "editor/cube_vertigo", tex = "vgui/white";
            else UI.GetValue("customchampreset") == -0x1f05 + -0x20ea + -0x1 * -0x3ff2 ? (extra = "models/effects/crystal_cube_vertigo_hdr", tex = "vgui/white") : (extra = "models/effects/" + textboxstring, tex = base);
        }
        var _0xc7cc1 = materials[i],
            _0x3f38e4 = Material.Get(_0xc7cc1[-0x4 * -0x52 + 0x4 * -0x3be + 0xdb0] + " chams");
        if (_0x3f38e4 > 0x235 + 0x958 + -0xb8d) {
            UI.IsMenuOpen() && (Material.SetKeyValue(_0x3f38e4, "$baseTexture", tex), Material.SetKeyValue(_0x3f38e4, "$envmap", extra), Material.SetKeyValue(_0x3f38e4, "$envmapfresnel", '1'));
            var _0x317755 = UI.GetColor("Script items", _0xc7cc1[0xb45 + 0x140d + 0x1 * -0x1f52] + " chams");
            if (_0x317755[0x2fc + -0x1 * -0x2012 + -0x230e] === 0x6e3 + -0x29 * -0x65 + -0x18 * 0xf6 && _0x317755[0xde5 * 0x1 + 0x23d * 0x3 + -0x19 * 0xd3] === -0x749 + 0x1023 + -0x8da && _0x317755[0x1 * -0x1486 + 0x50a * -0x6 + 0x32c4] === -0x2117 + -0x1 * 0xc41 + 0x2d58 && _0x317755[-0x1 * -0x1876 + -0x19c + 0x1 * -0x16d7] === 0x2 * -0xef0 + 0x1a4e + 0x392) UI.SetColor("Misc", "JAVASCRIPT", "Script items", "Desolate chams", [-0x9a4 * 0x1 + 0x6b9 + 0x8 * 0x62, 0x1 * 0x89f + -0xfb * -0x8 + 0x5b * -0x2e, -0x2 * 0x51b + -0x1c2d * -0x1 + -0x115c, -0x2320 + -0x8 * -0x331 + -0xa97 * -0x1]);
            Material.SetKeyValue(_0x3f38e4, "$envmapfresnelminmaxexp", "[0 " + (0x3df * 0x4 + 0x2 * -0x5b + -0xc7 * 0x13) + ' ' + (-0x2635 + -0x1dbd + 0x7 * 0x9b5) * (0x56b * 0x1 + -0x220d + 0x1ca4) + ']'), UI.IsMenuOpen() && (Material.SetKeyValue(_0x3f38e4, "$envmaptint", '[' + _0x317755[0x1deb + -0xf * 0x19a + -0x1 * 0x5e5] / (-0x1d2 * 0x12 + -0x8a * -0x31 + -0x9 * -0xd1) + ' ' + _0x317755[0x4 * 0x99a + -0x362 + 0x701 * -0x5] / (-0x230f + -0x1145 * -0x2 + 0x184) + ' ' + _0x317755[0x253c + -0x206 + -0x8cd * 0x4] / (-0x2278 + -0x1614 + 0x398b) + ']'), Material.SetKeyValue(_0x3f38e4, "$alpha", _0x317755[0x1c86 + -0xb * -0x239 + 0x1a7b * -0x2] / (-0x3b * -0x31 + 0x3d6 + -0xe22) + ''), Material.SetKeyValue(_0x3f38e4, "$model", '1')), Material.Refresh(_0x3f38e4);
        }
    }
}
createMat("Desolate"), Cheat.RegisterCallback("Material", "customchamupdate");
const lol = ["Yawn shitter down", "You're actually so fucking pathetic", "idc", "Talk to me when you're positive retard", "You pay for that shitty fucking aa?", "sellix.io/product/5f2b07111662e", "zZz", "Your tits are bigger than my mother's", "You're a walking billboard for condom advertisements", "G e t t o a s t e d l i b t a r d", "bruh!", "ty4clip", "You've got to be dying on purpose now", "You lack so many braincells that I can count them individually", "$$ brainless $$", "#fake lives matter", "You hit my fake more than Chris Brown hits Rihanna", "If KD was equal to IQ you'd be fucking retarded", '1', "come 5v5 dog", "braindead", "I don't need a resolver to tell you're retarded"];

function format(_0xfe702e, _0x3e85aa) {
    const _0x3a1b80 = _0xfe702e.split('%'),
        _0x1f78ae = _0x3a1b80[0x646 + -0x4a0 + -0x1a6];
    if (_0x3a1b80.length - (-0x103 * -0x1d + -0x1 * -0x9a5 + -0x1 * 0x26fb) != _0x3e85aa.length) throw new Error("huh how did you manage to break desolate??!?!?!?");
    for (var _0x2a79c3 = 0xd6b + -0x15f1 + 0x887; _0x2a79c3 < _0x3a1b80.length; _0x2a79c3++) _0x1f78ae += _0x3e85aa[_0x2a79c3 - (-0x1 * 0x19bb + 0x278 * 0x1 + 0x1744)] + _0x3a1b80[_0x2a79c3];
    return _0x1f78ae;
}

function on_player_death() {
    killsay && (attacker = Event.GetInt("attacker"), attacker_index = Entity.GetEntityFromUserID(attacker), victim = Event.GetInt("userid"), victim_index = Entity.GetEntityFromUserID(victim), victim_name = Entity.GetName(victim_index), attacker_index == Entity.GetLocalPlayer() && (toSay = lol[Math.floor(Math.random() * lol.length)], toSay.indexOf('%') == -(0x3b7 + 0x44 * -0x8b + 0x2136) ? Global.ExecuteCommand("say " + toSay + '\n') : (toSay_formated = format(toSay, [victim_name]), Global.ExecuteCommand("say " + toSay_formated + '\n'))));
}
Cheat.RegisterCallback("player_death", "on_player_death");
var vector = {};
vector.new = function (_0x3f7a70) {
    var _0x26b194 = {};
    return _0x26b194['x'] = _0x3f7a70[0x13 * 0x16d + -0x6 * -0x59b + 0x5 * -0xc25], _0x26b194['y'] = _0x3f7a70[-0x256f * 0x1 + -0x1 * 0x5ad + 0x2b1d], _0x26b194['z'] = _0x3f7a70[-0x1 * 0x245d + -0x16d4 + -0x5 * -0xbd7], _0x26b194;
}, vector.bruh = function (_0x5f2c61, _0x1cb973, _0x4939f0) {
    switch (_0x4939f0) {
        case '+':
            var _0x45e1c4 = {};
            _0x45e1c4['x'] = _0x5f2c61['x'] + _0x1cb973['x'], _0x45e1c4['y'] = _0x5f2c61['y'] + _0x1cb973['y'], _0x45e1c4['z'] = _0x5f2c61['z'] + _0x1cb973['z'];
            return _0x45e1c4;
        case '-':
            var _0x2664ad = {};
            _0x2664ad['x'] = _0x5f2c61['x'] - _0x1cb973['x'], _0x2664ad['y'] = _0x5f2c61['y'] - _0x1cb973['y'], _0x2664ad['z'] = _0x5f2c61['z'] - _0x1cb973['z'];
            return _0x2664ad;
        case '*':
            var _0x31110a = {};
            _0x31110a['x'] = _0x5f2c61['x'] * _0x1cb973['x'], _0x31110a['y'] = _0x5f2c61['y'] * _0x1cb973['y'], _0x31110a['z'] = _0x5f2c61['z'] * _0x1cb973['z'];
            return _0x31110a;
        case '/':
            var _0x420431 = {};
            _0x420431['x'] = _0x5f2c61['x'] / _0x1cb973['x'], _0x420431['y'] = _0x5f2c61['y'] / _0x1cb973['y'], _0x420431['z'] = _0x5f2c61['z'] / _0x1cb973['z'];
            return _0x420431;
        default:
            throw new Error("[Vector] Invalid operation type.");
    }
}, vector.length2d = function (_0x41897e) {
    return Math.sqrt(_0x41897e['x'] * _0x41897e['x'] + _0x41897e['y'] * _0x41897e['y']);
}, vector.angles = function (_0x2772cf) {
    var _0x5bd7df = {};
    return _0x5bd7df['x'] = -Math.atan2(_0x2772cf['z'], this.length2d(_0x2772cf)) * (-0x1603 + -0x467 * -0x1 + 0x1250) / Math['PI'], _0x5bd7df['y'] = Math.atan2(_0x2772cf['y'], _0x2772cf['x']) * (-0x741 * -0x3 + 0x2ad * 0x7 + -0x27ca) / Math['PI'], _0x5bd7df['z'] = 0x0, _0x5bd7df;
}, vector.fov_to = function (_0x1f2931, _0x619c78, _0x576d66) {
    const _0x1eeead = this.angles(this.bruh(_0x619c78, _0x1f2931, '-')),
        _0x3ad790 = this.new([Math.abs(_0x576d66['x'] - _0x1eeead['x']), Math.abs(_0x576d66['y'] % (-0x11f5 + -0x1521 + 0x287e * 0x1) - _0x1eeead['y'] % (-0x1 * 0x596 + -0x66c + 0xd6a)) % (-0x1f69 + -0x105e + 0x1 * 0x312f), 0x13d4 + -0x16b2 + -0x16f * -0x2]);
    if (_0x3ad790['y'] > -0xac3 + 0x1335 + 0x7be * -0x1) _0x3ad790['y'] = 0x38c * -0x1 + -0x1936 + -0x1 * -0x1e2a - _0x3ad790['y'];
    return this.length2d(_0x3ad790);
}, vector.to_array = function (_0x3abe5f) {
    return [_0x3abe5f['x'], _0x3abe5f['y'], _0x3abe5f['z']];
};

function updateaa(_0x23dc73) {
    if (UI.IsHotkeyActive("Anti-Aim", "Fake angles", "Inverter") == _0x23dc73) UI.ToggleHotkey("Anti-Aim", "Fake angles", "Inverter");
    _0x23dc73 = (_0x23dc73 + (-0xb33 + 0x7a + 0xaba)) % (0x20a9 * 0x1 + 0x101a + 0x7 * -0x6f7);
}

function targetfov() {
    const _0x3e5001 = Entity.GetEnemies(),
        _0x43a725 = Entity.GetLocalPlayer();
    var _0x128509 = {};
    _0x128509['id'] = null, _0x128509.fov = 0xb4;
    const _0x5e01b1 = _0x128509;
    for (var _0x14fd2e = 0x1 * -0x13f9 + 0x2632 * 0x1 + 0x3a5 * -0x5; _0x14fd2e < _0x3e5001.length; _0x14fd2e++) {
        const _0x4995d8 = _0x3e5001[_0x14fd2e],
            _0x51a518 = vector.new(Entity.GetHitboxPosition(_0x4995d8, 0x5 * 0x5d2 + 0x9ce * 0x2 + -0x30b6)),
            _0x27b57f = vector.new(Entity.GetEyePosition(_0x43a725)),
            _0x102dbf = vector.new(Local.GetViewAngles()),
            _0x84c46f = vector.fov_to(_0x27b57f, _0x51a518, _0x102dbf);
        _0x84c46f < _0x5e01b1.fov && (_0x5e01b1['id'] = _0x4995d8, _0x5e01b1.fov = _0x84c46f);
    }
    return _0x5e01b1['id'];
}

function get_target_visibility() {
    const _0x310092 = targetfov();
    if (!_0x310092 || !Entity.IsValid(_0x310092)) return ![];
    if (Entity.IsDormant(_0x310092)) return ![];
    const _0xd33a63 = Entity.GetLocalPlayer();
    var _0x178b3b = vector.new(Entity.GetEyePosition(_0xd33a63)),
        _0x44ef67 = vector.new(Entity.GetProp(_0xd33a63, "CBasePlayer", "m_vecVelocity[0]")),
        _0x382917 = Entity.GetHitboxPosition(_0x310092, -0x1a1d + 0x3 * -0x2fb + 0x230e);
    _0x44ef67 = vector.bruh(_0x44ef67, vector.new([0x13c1 + 0x35 + -5109.75, 0x3b * -0x67 + -0x1046 + 10243.25, 0x237a + -0x4a9 * 0x1 + -7888.75]), '*'), _0x178b3b = vector.bruh(_0x178b3b, _0x44ef67, '+');
    const _0x12b52e = Trace.Line(_0xd33a63, vector.to_array(_0x178b3b), _0x382917)[0x2161 + 0x1 * 0x25df + 0x1 * -0x4740];
    return _0x12b52e === _0x310092;
}

function freestandthatbeatch() {
    const _0x442075 = Entity.GetLocalPlayer(),
        _0x2add07 = vector.new(Entity.GetRenderOrigin(_0x442075));
    var _0x5a8954 = Local.GetViewAngles()[-0x14 * 0x65 + -0x13ef + 0x1bd4],
        _0x47b343 = {};
    _0x47b343.left = 0x0, _0x47b343.right = 0x0;
    var _0x3551a4 = _0x47b343;
    for (var _0x5769d1 = _0x5a8954 - (-0xa4a * 0x1 + 0x155 * -0xa + 0xbfb * 0x2); _0x5769d1 <= _0x5a8954 + (0xe89 * -0x1 + 0x77c * -0x4 + 0x55 * 0x87); _0x5769d1 += -0x103a * 0x1 + 0x598 + 0xac0) {
        if (_0x5769d1 === _0x5a8954) continue;
        const _0x5a37fc = _0x5769d1 * Math['PI'] / (0x128 * 0x1d + 0x1a10 + -0x3ae4),
            _0x238433 = vector.bruh(_0x2add07, vector.new([(0xd43 + 0x9bb + -0x15fe) * Math.cos(_0x5a37fc), (0x7 * -0x37c + -0x2034 + -0x8 * -0x733) * Math.sin(_0x5a37fc), 0x3 * -0x3c6 + 0x2 * 0x1d3 + 0x3d6 * 0x2]), '+'),
            _0x2a2571 = Trace.Line(_0x442075, vector.to_array(_0x2add07), vector.to_array(_0x238433));
        _0x3551a4[_0x5769d1 < _0x5a8954 ? "left" : "right"] += _0x2a2571[-0x1b6 + 0x755 * -0x4 + 0x1f0b];
    }
    _0x3551a4.left /= -0x23f3 + 0x1bf0 + 0x9e * 0xd, _0x3551a4.right /= -0x630 + -0x1677 * 0x1 + 0x1caa;
    if (_0x3551a4.left > _0x3551a4.right) return UI.GetValue("AA mode") == -0x1799 + 0x85 * -0x2f + -0x99b * -0x5 ? 0x80a + 0x1f99 * 0x1 + 0x49 * -0x8b : 0x1683 + -0x175 * 0x7 + -0xc4f;
    return UI.GetValue("AA mode") == 0x2199 + -0x3 * -0xb55 + 0x49 * -0xed ? -0x1fa8 + 0x3a4 * -0x2 + -0xcfb * -0x3 : -0x58b * -0x7 + 0x57 * -0x28 + -0x1935;
}

function updoot() {
    if (!Entity.IsValid(Entity.GetLocalPlayer()) || !Entity.IsAlive(Entity.GetLocalPlayer())) return;
    updateaa(freestandthatbeatch());
}

function reverse() {
    (UI.GetValue("AA mode") == 0x1 * 0x1aec + -0x29 * -0x3b + -0x34 * 0xb3 || UI.GetValue("AA mode") == 0x1f7e + 0x1 * -0x211e + 0x1a4 || legitaa && Input.IsKeyPressed(-0x2662 + 0x357 + -0x71 * -0x50)) && updoot();
}
var safeloc = [];

function Return2Dest(_0x304f4e) {
    var _0x40a21e = Entity.GetLocalPlayer(),
        _0x39cc00 = Entity.GetRenderOrigin(_0x40a21e),
        _0x13dbe7 = [_0x304f4e[-0x24ee + -0x4 * 0x391 + -0x2 * -0x1999] - _0x39cc00[0x1b12 + 0x2d * 0x21 + -0x231 * 0xf], _0x304f4e[-0x248e + 0x9 * -0x29c + 0x3c0b] - _0x39cc00[0x1cc + 0xbd1 * 0x1 + -0xd9c], _0x304f4e[-0x70b + -0x18 * 0x101 + 0x1f25] - _0x39cc00[0x89 * 0x25 + -0xaee + -0x8dd * 0x1]],
        _0x3dc124 = Local.GetViewAngles()[-0xf * -0x1e2 + 0x1181 * -0x2 + 0x6c5],
        _0x2a5680 = [],
        _0xe8ec68 = 0x48 * 0x7f + -0x1354 + -0x2 * 0x7b5;
    _0x2a5680[-0x2343 * 0x1 + 0xbd1 + -0x2 * -0xbb9] = (Math.sin(_0x3dc124 / (-0x5 * 0xe5 + -0x37 + 0x564) * Math['PI']) * _0x13dbe7[0x1296 * -0x2 + -0x2 * -0x111d + 0x1 * 0x2f3] + Math.cos(_0x3dc124 / (0x6fe * -0x5 + -0x1ec1 + 0x426b * 0x1) * Math['PI']) * _0x13dbe7[0x26f3 + 0x1f * -0x5 + -0x2658]) * _0xe8ec68, _0x2a5680[-0x1 * 0x13d + 0x6c2 + -0x584] = (Math.sin(_0x3dc124 / (0x1f5f + -0xa9f + -0x140c) * Math['PI']) * _0x13dbe7[0x25 * -0x6a + 0x843 * -0x1 + -0x1795 * -0x1] + Math.cos(_0x3dc124 / (0x2201 + 0x1499 + -0x35e6) * Math['PI']) * -_0x13dbe7[0x576 * -0x5 + -0x1965 + 0x34b4]) * _0xe8ec68, _0x2a5680[0x1bc7 * 0x1 + -0x181e + -0x3a7] = -0x163 * -0xf + 0x1 * 0x115a + 0x1 * -0x2627, UserCMD.SetMovement(_0x2a5680);
}
var playing = ![],
    moving = ![],
    startpos = [],
    saved = ![],
    fired = ![];

function savestartpos() {
    !saved && (safeloc = [], startpos = Entity.GetRenderOrigin(Entity.GetLocalPlayer()), safeloc.push(startpos), saved = !![]);
}

function shotfired() {
    fired = !![];
}

function draw_circle(_0x5eed50, _0x569abf, _0x4c4534, _0x226a17, _0x3ba00b, _0x22adfe) {
    thing = !![], old_screen_pos = Render.WorldToScreen([_0x5eed50, _0x569abf, _0x4c4534]);
    for (t = 0xc9d + -0x7 * 0x313 + -0x28 * -0x39; t <= Math['PI'] * (0x1 * 0x5dd + -0x689 * -0x1 + -3171.9); t += _0x3ba00b) {
        thing && (world_pos = [_0x226a17 * Math.cos(-t) + _0x5eed50, _0x226a17 * Math.sin(-t) + _0x569abf, _0x4c4534], old_screen_pos = Render.WorldToScreen(world_pos), thing = ![]);
        world_pos = [_0x226a17 * Math.cos(t) + _0x5eed50, _0x226a17 * Math.sin(t) + _0x569abf, _0x4c4534], screen_pos = Render.WorldToScreen(world_pos), center = Render.WorldToScreen([_0x5eed50 + _0x226a17, _0x569abf, _0x4c4534]), Render.Line(screen_pos[0x20f8 + 0x1fc1 + -0x3 * 0x1593], screen_pos[-0x2c * 0x1c + -0x1610 + 0x1ae1], old_screen_pos[0x500 + 0x1c3 + 0x241 * -0x3], old_screen_pos[-0x7 * 0x44 + 0x2341 + 0x1 * -0x2164], [_0x22adfe[0x1a43 + -0x1 * -0x1f9a + -0x1 * 0x39dd], _0x22adfe[0x647 * 0x1 + -0x11b * 0x1 + -0x52b], _0x22adfe[-0x1836 + -0x801 + -0x71 * -0x49], -0x25d8 + 0x226d * -0x1 + 0x4944]);
        if (_0x22adfe[0x100b + -0x16 * 0x6d + -0x6aa] != -0x1d10 + -0x1779 + 0x1 * 0x3489) Render.Polygon([
            [screen_pos[0x1a95 + -0xe6b + -0x40e * 0x3], screen_pos[0x7 * 0x2f5 + -0x301 * 0x6 + -0x2ac]],
            [old_screen_pos[-0x265 + -0x49 * -0x11 + 0x274 * -0x1], old_screen_pos[-0xe03 * -0x2 + -0x1949 + -0x4 * 0xaf]],
            [center[-0x186e + -0x179 + 0x19e7 * 0x1], center[-0x1dde + -0x2 * -0x3df + 0x1621]]
        ], _0x22adfe);
        old_screen_pos = screen_pos;
    }
}
Cheat.RegisterCallback("ragebot_fire", "shotfired"), Cheat.RegisterCallback("CreateMove", "reverse");
