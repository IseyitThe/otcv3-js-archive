var _0x1996 = ["\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20", "\x41\x64\x64\x53\x6C\x69\x64\x65\x72\x49\x6E\x74", "\x69\x6E\x66\x6F", "\x47\x65\x74\x55\x73\x65\x72\x6E\x61\x6D\x65", "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x6A\x73\x20\x6D\x61\x64\x65\x20\x62\x79\x20\x53\x75\x4E\x65", "\x41\x64\x64\x4C\x61\x62\x65\x6C", "\x77\x65\x6C\x63\x6F\x6D\x65\x2C\x20", "\x2D\x76\x65\x72\x73\x69\x6F\x6E\x20\x30\x2E\x38", "\x2D\x64\x6F\x6E\x74\x20\x73\x65\x6C\x6C\x20\x69\x74", "\x2D\x68\x61\x76\x65\x20\x67\x72\x65\x61\x74\x20\x74\x69\x6D\x65\x20\x77\x69\x74\x68\x20\x69\x74", "\x2D\x79\x6F\x75\x74\x75\x62\x65\x20\x73\x75\x6E\x65\x20\x68\x76\x68", "\x2D\x64\x69\x73\x63\x6F\x72\x64\x20\x4F\x74\x74\x6F\x39\x32\x23\x35\x38\x37\x33", "\x41\x6E\x74\x69\x2D\x41\x69\x6D", "\x67\x6F\x64\x20\x79\x61\x77", "\x4F\x66\x66", "\x4F\x6E", "\x41\x64\x64\x44\x72\x6F\x70\x64\x6F\x77\x6E", "\x67\x6F\x64\x20\x79\x61\x77\x20\x6D\x6F\x64\x65", "\x76\x31", "\x76\x32", "\x76\x33", "\x6C\x6F\x77\x20\x76\x61\x6C\x75\x65", "\x52\x65\x61\x6C\x74\x69\x6D\x65", "\x52\x61\x67\x65\x20\x41\x6E\x74\x69\x2D\x41\x69\x6D", "\x59\x61\x77\x20\x6F\x66\x66\x73\x65\x74", "\x47\x65\x74\x56\x61\x6C\x75\x65", "\x4A\x69\x74\x74\x65\x72\x20\x6F\x66\x66\x73\x65\x74", "\x4D\x69\x73\x63", "\x4A\x41\x56\x41\x53\x43\x52\x49\x50\x54", "\x53\x63\x72\x69\x70\x74\x20\x49\x74\x65\x6D\x73", "\x53\x57\x49\x54\x43\x48\x20\x64\x65\x6C\x61\x79", "\x53\x57\x49\x54\x43\x48\x20\x57\x61\x79", "\x72\x61\x6E\x64\x6F\x6D", "\x66\x6C\x6F\x6F\x72", "\x42\x72\x65\x61\x6B\x65\x72", "\x53\x65\x74\x56\x61\x6C\x75\x65", "\x46\x61\x6B\x65\x20\x61\x6E\x67\x6C\x65\x73", "\x45\x6E\x61\x62\x6C\x65\x64", "\x53\x65\x74\x4F\x76\x65\x72\x72\x69\x64\x65", "\x53\x65\x74\x46\x61\x6B\x65\x4F\x66\x66\x73\x65\x74", "\x53\x65\x74\x52\x65\x61\x6C\x4F\x66\x66\x73\x65\x74", "\x46\x61\x6B\x65\x20\x64\x65\x73\x79\x6E\x63", "\x41\x74\x20\x74\x61\x72\x67\x65\x74\x73", "\x4C\x42\x59\x20\x6D\x6F\x64\x65", "\x41\x76\x6F\x69\x64\x20\x6F\x76\x65\x72\x6C\x61\x70", "\x44\x65\x73\x79\x6E\x63\x20\x6F\x6E\x20\x73\x68\x6F\x74", "\x46\x61\x6B\x65\x2D\x4C\x61\x67", "\x4C\x69\x6D\x69\x74", "\x59\x41\x57\x20\x4F\x66\x66\x73\x65\x74\x20\x23\x31", "\x4A\x49\x54\x54\x45\x52\x20\x4F\x66\x66\x73\x65\x74\x20\x23\x31", "\x44\x72\x61\x77", "\x67\x6F\x64\x79\x61\x77\x6D\x61\x69\x6E", "\x52\x65\x67\x69\x73\x74\x65\x72\x43\x61\x6C\x6C\x62\x61\x63\x6B", "\x6C\x6F\x77\x20\x79\x61\x77", "\x41\x64\x64\x43\x68\x65\x63\x6B\x62\x6F\x78", "\x6C\x6F\x77\x20\x79\x61\x77\x20\x74\x79\x70\x65", "\x6C\x6F\x77\x20\x79\x61\x77\x20\x6D\x6F\x64\x65\x73", "\x53\x6C\x6F\x77\x20\x77\x61\x6C\x6B", "\x53\x74\x61\x6E\x64\x69\x6E\x67", "\x6C\x6F\x77\x20\x68\x70", "\x41\x64\x64\x4D\x75\x6C\x74\x69\x44\x72\x6F\x70\x64\x6F\x77\x6E", "\x62\x6F\x64\x79\x20\x66\x72\x65\x65\x73\x74\x61\x6E\x64\x69\x6E\x67", "\x53\x63\x72\x69\x70\x74\x20\x69\x74\x65\x6D\x73", "\x53\x65\x74\x45\x6E\x61\x62\x6C\x65\x64", "\x43\x42\x61\x73\x65\x50\x6C\x61\x79\x65\x72", "\x6D\x5F\x76\x65\x63\x56\x65\x6C\x6F\x63\x69\x74\x79\x5B\x30\x5D", "\x47\x65\x74\x50\x72\x6F\x70", "\x73\x71\x72\x74", "\x6D\x5F\x69\x48\x65\x61\x6C\x74\x68", "\x47\x65\x74\x4C\x6F\x63\x61\x6C\x50\x6C\x61\x79\x65\x72", "\x61\x70\x70\x6C\x79", "\x45\x78\x74\x72\x61", "\x49\x73\x48\x6F\x74\x6B\x65\x79\x41\x63\x74\x69\x76\x65", "\x6C\x6F\x77\x20\x79\x61\x77\x20\x6F\x6E\x20\x6B\x65\x79", "\x43\x72\x65\x61\x74\x65\x4D\x6F\x76\x65", "\x4C\x6F\x77\x5F\x64\x65\x6C\x74\x61", "\x50\x72\x69\x6E\x74", "\x50\x72\x69\x6E\x74\x43\x68\x61\x74", "\x50\x72\x69\x6E\x74\x43\x6F\x6C\x6F\x72", "\x45\x78\x65\x63\x75\x74\x65\x43\x6F\x6D\x6D\x61\x6E\x64", "\x46\x72\x61\x6D\x65\x53\x74\x61\x67\x65", "\x54\x69\x63\x6B\x63\x6F\x75\x6E\x74", "\x54\x69\x63\x6B\x72\x61\x74\x65", "\x54\x69\x63\x6B\x49\x6E\x74\x65\x72\x76\x61\x6C", "\x43\x75\x72\x74\x69\x6D\x65", "\x46\x72\x61\x6D\x65\x74\x69\x6D\x65", "\x4C\x61\x74\x65\x6E\x63\x79", "\x47\x65\x74\x56\x69\x65\x77\x41\x6E\x67\x6C\x65\x73", "\x53\x65\x74\x56\x69\x65\x77\x41\x6E\x67\x6C\x65\x73", "\x47\x65\x74\x4D\x61\x70\x4E\x61\x6D\x65", "\x49\x73\x4B\x65\x79\x50\x72\x65\x73\x73\x65\x64", "\x47\x65\x74\x53\x63\x72\x65\x65\x6E\x53\x69\x7A\x65", "\x47\x65\x74\x43\x75\x72\x73\x6F\x72\x50\x6F\x73\x69\x74\x69\x6F\x6E", "\x50\x6C\x61\x79\x53\x6F\x75\x6E\x64", "\x50\x6C\x61\x79\x4D\x69\x63\x72\x6F\x70\x68\x6F\x6E\x65", "\x53\x74\x6F\x70\x4D\x69\x63\x72\x6F\x70\x68\x6F\x6E\x65", "\x53\x65\x74\x43\x6C\x61\x6E\x54\x61\x67", "\x50\x6C\x61\x79", "\x70\x61\x69\x6E\x74", "\x63\x72\x65\x61\x74\x65\x5F\x6D\x6F\x76\x65", "\x46\x72\x61\x6D\x65\x53\x74\x61\x67\x65\x4E\x6F\x74\x69\x66\x79", "\x66\x73\x6E", "\x47\x65\x74\x52\x65\x61\x6C\x59\x61\x77", "\x47\x65\x74\x46\x61\x6B\x65\x59\x61\x77", "\x47\x65\x74\x53\x70\x72\x65\x61\x64", "\x47\x65\x74\x49\x6E\x61\x63\x63\x75\x72\x61\x63\x79", "\x47\x65\x74\x53\x65\x72\x76\x65\x72\x53\x74\x72\x69\x6E\x67", "\x53\x74\x72\x69\x6E\x67", "\x54\x65\x78\x74\x53\x69\x7A\x65", "\x4C\x69\x6E\x65", "\x52\x65\x63\x74", "\x46\x69\x6C\x6C\x65\x64\x52\x65\x63\x74", "\x47\x72\x61\x64\x69\x65\x6E\x74\x52\x65\x63\x74", "\x43\x69\x72\x63\x6C\x65", "\x46\x69\x6C\x6C\x65\x64\x43\x69\x72\x63\x6C\x65", "\x50\x6F\x6C\x79\x67\x6F\x6E", "\x57\x6F\x72\x6C\x64\x54\x6F\x53\x63\x72\x65\x65\x6E", "\x41\x64\x64\x46\x6F\x6E\x74", "\x46\x69\x6E\x64\x46\x6F\x6E\x74", "\x53\x74\x72\x69\x6E\x67\x43\x75\x73\x74\x6F\x6D", "\x54\x65\x78\x74\x75\x72\x65\x64\x52\x65\x63\x74", "\x41\x64\x64\x54\x65\x78\x74\x75\x72\x65", "\x54\x65\x78\x74\x53\x69\x7A\x65\x43\x75\x73\x74\x6F\x6D", "\x41\x64\x64\x53\x6C\x69\x64\x65\x72\x46\x6C\x6F\x61\x74", "\x41\x64\x64\x48\x6F\x74\x6B\x65\x79", "\x41\x64\x64\x43\x6F\x6C\x6F\x72\x50\x69\x63\x6B\x65\x72", "\x41\x64\x64\x54\x65\x78\x74\x62\x6F\x78", "\x47\x65\x74\x53\x74\x72\x69\x6E\x67", "\x47\x65\x74\x43\x6F\x6C\x6F\x72", "\x53\x65\x74\x43\x6F\x6C\x6F\x72", "\x54\x6F\x67\x67\x6C\x65\x48\x6F\x74\x6B\x65\x79", "\x49\x73\x4D\x65\x6E\x75\x4F\x70\x65\x6E", "\x47\x65\x74\x49\x6E\x74", "\x53\x65\x74\x49\x6E\x74", "\x47\x65\x74\x46\x6C\x6F\x61\x74", "\x53\x65\x74\x46\x6C\x6F\x61\x74", "\x53\x65\x74\x53\x74\x72\x69\x6E\x67", "\x47\x65\x74\x45\x6E\x74\x69\x74\x69\x65\x73", "\x47\x65\x74\x45\x6E\x74\x69\x74\x69\x65\x73\x42\x79\x43\x6C\x61\x73\x73\x49\x44", "\x47\x65\x74\x50\x6C\x61\x79\x65\x72\x73", "\x47\x65\x74\x45\x6E\x65\x6D\x69\x65\x73", "\x47\x65\x74\x54\x65\x61\x6D\x6D\x61\x74\x65\x73", "\x47\x65\x74\x47\x61\x6D\x65\x52\x75\x6C\x65\x73\x50\x72\x6F\x78\x79", "\x47\x65\x74\x45\x6E\x74\x69\x74\x79\x46\x72\x6F\x6D\x55\x73\x65\x72\x49\x44", "\x49\x73\x54\x65\x61\x6D\x6D\x61\x74\x65", "\x49\x73\x45\x6E\x65\x6D\x79", "\x49\x73\x42\x6F\x74", "\x49\x73\x4C\x6F\x63\x61\x6C\x50\x6C\x61\x79\x65\x72", "\x49\x73\x56\x61\x6C\x69\x64", "\x49\x73\x41\x6C\x69\x76\x65", "\x49\x73\x44\x6F\x72\x6D\x61\x6E\x74", "\x47\x65\x74\x43\x6C\x61\x73\x73\x49\x44", "\x47\x65\x74\x43\x6C\x61\x73\x73\x4E\x61\x6D\x65", "\x47\x65\x74\x4E\x61\x6D\x65", "\x47\x65\x74\x57\x65\x61\x70\x6F\x6E", "\x47\x65\x74\x57\x65\x61\x70\x6F\x6E\x73", "\x47\x65\x74\x52\x65\x6E\x64\x65\x72\x4F\x72\x69\x67\x69\x6E", "\x53\x65\x74\x50\x72\x6F\x70", "\x47\x65\x74\x48\x69\x74\x62\x6F\x78\x50\x6F\x73\x69\x74\x69\x6F\x6E", "\x47\x65\x74\x45\x79\x65\x50\x6F\x73\x69\x74\x69\x6F\x6E", "\x42\x75\x6C\x6C\x65\x74", "\x53\x65\x74\x4D\x6F\x76\x65\x6D\x65\x6E\x74", "\x47\x65\x74\x4D\x6F\x76\x65\x6D\x65\x6E\x74", "\x53\x65\x74\x41\x6E\x67\x6C\x65\x73", "\x46\x6F\x72\x63\x65\x4A\x75\x6D\x70", "\x46\x6F\x72\x63\x65\x43\x72\x6F\x75\x63\x68", "\x47\x65\x74\x4F\x76\x65\x72\x72\x69\x64\x65", "\x53\x65\x74\x4C\x42\x59\x4F\x66\x66\x73\x65\x74", "\x47\x65\x74\x43\x68\x61\x72\x67\x65", "\x52\x65\x63\x68\x61\x72\x67\x65", "\x44\x69\x73\x61\x62\x6C\x65\x52\x65\x63\x68\x61\x72\x67\x65", "\x45\x6E\x61\x62\x6C\x65\x52\x65\x63\x68\x61\x72\x67\x65", "\x4F\x76\x65\x72\x72\x69\x64\x65\x4D\x69\x6E\x69\x6D\x75\x6D\x44\x61\x6D\x61\x67\x65", "\x4F\x76\x65\x72\x72\x69\x64\x65\x48\x69\x74\x63\x68\x61\x6E\x63\x65", "\x4F\x76\x65\x72\x72\x69\x64\x65\x41\x63\x63\x75\x72\x61\x63\x79\x42\x6F\x6F\x73\x74", "\x4F\x76\x65\x72\x72\x69\x64\x65\x4D\x75\x6C\x74\x69\x70\x6F\x69\x6E\x74\x53\x63\x61\x6C\x65", "\x46\x6F\x72\x63\x65\x53\x61\x66\x65\x74\x79", "\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20", "\x6C\x61\x62\x65\x6C", "\x63\x61\x6C\x6C", "\x6C\x65\x6E\x67\x74\x68", "\x70\x75\x73\x68", "\x72\x65\x66\x65\x72\x65\x6E\x63\x65", "\x67\x65\x74", "\x70\x61\x74\x68", "\x5B\x4D\x65\x6E\x75\x5D\x20\x54\x68\x69\x73\x20\x65\x6C\x65\x6D\x65\x6E\x74\x20\x64\x6F\x65\x73\x6E\x27\x74\x20\x65\x78\x69\x73\x74\x21", "\x67\x65\x74\x5F\x68\x6F\x74\x6B\x65\x79", "\x67\x65\x74\x5F\x63\x6F\x6C\x6F\x72", "\x73\x65\x74", "\x73\x65\x74\x5F\x63\x6F\x6C\x6F\x72", "\x74\x6F\x67\x67\x6C\x65", "\x76\x69\x73\x69\x62\x69\x6C\x69\x74\x79", "\x76\x65\x63\x74\x6F\x72", "\x6E\x65\x77", "\x6F\x70\x65\x72\x61\x74\x65", "\x78", "\x79", "\x7A", "\x2B", "\x2D", "\x2A", "\x2F", "\x5B\x56\x65\x63\x74\x6F\x72\x5D\x20\x49\x6E\x76\x61\x6C\x69\x64\x20\x6F\x70\x65\x72\x61\x74\x69\x6F\x6E\x20\x74\x79\x70\x65\x2E", "\x6C\x65\x6E\x67\x74\x68\x32\x64", "\x61\x6E\x67\x6C\x65\x73", "\x61\x74\x61\x6E\x32", "\x50\x49", "\x66\x6F\x76\x5F\x74\x6F", "\x61\x62\x73", "\x74\x6F\x5F\x61\x72\x72\x61\x79", "\x41\x64\x76\x61\x6E\x63\x65\x64\x20\x62\x6F\x64\x79\x20\x66\x72\x65\x65\x73\x74\x61\x6E\x64\x69\x6E\x67", "\x31\x2E\x31\x2E\x30", "\x61\x70\x72\x69\x6C\x23\x30\x30\x30\x31", "\x6C\x62\x79\x5F\x65\x6E\x61\x62\x6C\x65", "\x42\x6F\x64\x79\x20\x66\x72\x65\x65\x73\x74\x61\x6E\x64\x69\x6E\x67", "\x6C\x62\x79\x5F\x62\x6F\x64\x79\x5F\x6D\x6F\x64\x65", "\x48\x69\x64\x65\x20\x72\x65\x61\x6C\x20\x61\x6E\x67\x6C\x65", "\x48\x69\x64\x65\x20\x66\x61\x6B\x65\x20\x61\x6E\x67\x6C\x65", "\x53\x6D\x61\x72\x74\x20\x73\x77\x69\x74\x63\x68", "\x6C\x62\x79\x5F\x73\x6D\x61\x72\x74", "\x42\x6F\x64\x79\x20\x69\x6E\x76\x65\x72\x74\x65\x72\x20\x66\x6C\x69\x70", "\x6C\x62\x79\x5F\x62\x6F\x64\x79", "\x57\x61\x6C\x6B", "\x52\x75\x6E", "\x49\x6E\x20\x61\x69\x72", "\x49\x6E\x76\x65\x72\x74\x65\x72", "\x49\x6E\x76\x65\x72\x74\x65\x72\x20\x66\x6C\x69\x70", "\x4C\x65\x67\x69\x74\x20\x41\x6E\x74\x69\x2D\x41\x69\x6D", "\x44\x69\x72\x65\x63\x74\x69\x6F\x6E\x20\x6B\x65\x79", "\x52\x61\x67\x65", "\x47\x45\x4E\x45\x52\x41\x4C", "\x47\x65\x6E\x65\x72\x61\x6C", "\x66\x6F\x76", "\x69\x64", "\x63\x6F\x73", "\x73\x69\x6E", "\x6C\x65\x66\x74", "\x72\x69\x67\x68\x74", "\x6C\x61\x73\x74\x5F\x6F\x76\x65\x72\x72\x69\x64\x65\x5F\x74\x69\x6D\x65", "\x6F\x76\x65\x72\x72\x69\x64\x65\x5F\x66\x6C\x69\x70", "\x6C\x61\x73\x74\x5F\x74\x61\x72\x67\x65\x74\x5F\x76\x69\x73\x69\x62\x69\x6C\x69\x74\x79", "\x6C\x61\x73\x74\x5F\x68\x69\x74\x5F\x6C\x62\x79", "\x72\x6F\x75\x6E\x64", "\x74\x6F\x53\x74\x72\x69\x6E\x67", "\x61\x74\x74\x61\x63\x6B\x65\x72", "\x75\x73\x65\x72\x69\x64", "\x6F\x6E\x5F\x74\x69\x63\x6B", "\x6F\x6E\x5F\x66\x72\x61\x6D\x65", "\x70\x6C\x61\x79\x65\x72\x5F\x68\x75\x72\x74", "\x6F\x6E\x5F\x70\x6C\x61\x79\x65\x72\x5F\x68\x75\x72\x74", "\x70\x6C\x61\x79\x65\x72\x5F\x63\x6F\x6E\x6E\x65\x63\x74\x5F\x66\x75\x6C\x6C", "\x72\x65\x73\x65\x74", "\x73\x75\x62\x73\x74\x72\x69\x6E\x67", "", "\x4D\x49\x53\x43", "\x52\x61\x6E\x64\x6F\x6D\x69\x7A\x65\x20\x46\x61\x6B\x65\x6C\x61\x67", "\x56\x65\x72\x64\x61\x6E\x61", "\x45\x78\x70\x6C\x6F\x69\x74\x73", "\x44\x6F\x75\x62\x6C\x65\x74\x61\x70", "\x46\x61\x6B\x65\x20\x64\x75\x63\x6B", "\x48\x69\x64\x65\x20\x73\x68\x6F\x74\x73", "\x46\x6F\x72\x63\x65\x20\x73\x61\x66\x65\x20\x70\x6F\x69\x6E\x74", "\x4A\x69\x74\x74\x65\x72", "\x59\x61\x77", "\x44\x54\x5F\x43\x53\x50\x6C\x61\x79\x65\x72", "\x6D\x5F\x66\x6C\x53\x69\x6D\x75\x6C\x61\x74\x69\x6F\x6E\x54\x69\x6D\x65", "\x46\x61\x6B\x65\x20\x6C\x61\x67", "\x73\x73\x67\x20\x30\x38", "\x53\x43\x4F\x55\x54", "\x44\x61\x6D\x61\x67\x65", "\x4D\x69\x6E\x69\x6D\x75\x6D\x20\x64\x61\x6D\x61\x67\x65\x20\x28\x6F\x6E\x20\x6B\x65\x79\x29", "\x41\x63\x63\x75\x72\x61\x63\x79", "\x48\x69\x74\x63\x68\x61\x6E\x63\x65", "\x61\x77\x70", "\x41\x57\x50", "\x67\x33\x73\x67\x31", "\x73\x63\x61\x72\x20\x32\x30", "\x41\x55\x54\x4F\x53\x4E\x49\x50\x45\x52", "\x72\x38\x20\x72\x65\x76\x6F\x6C\x76\x65\x72", "\x64\x65\x73\x65\x72\x74\x20\x65\x61\x67\x6C\x65", "\x48\x45\x41\x56\x59\x20\x50\x49\x53\x54\x4F\x4C", "\x64\x75\x61\x6C\x20\x62\x65\x72\x65\x74\x74\x61\x73", "\x75\x73\x70\x20\x73", "\x67\x6C\x6F\x63\x6B\x20\x31\x38", "\x70\x32\x30\x30\x30", "\x70\x32\x35\x30", "\x74\x65\x63\x39", "\x50\x49\x53\x54\x4F\x4C", "\x5B\x4F\x6E\x5D", "\x53\x61\x66\x65\x20\x70\x6F\x69\x6E\x74", "\x44\x6F\x75\x62\x6C\x65\x20\x74\x61\x70", "\x5B\x4F\x66\x66\x65\x6E\x73\x69\x76\x65\x5D", "\x48\x55\x44\x5F\x52\x45\x44\x52\x41\x57", "\x67\x65\x6E\x65\x72\x69\x63", "\x68\x65\x61\x64", "\x63\x68\x65\x73\x74", "\x73\x74\x6F\x6D\x61\x63\x68", "\x6C\x65\x66\x74\x20\x61\x72\x6D", "\x72\x69\x67\x68\x74\x20\x61\x72\x6D", "\x6C\x65\x66\x74\x20\x6C\x65\x67", "\x72\x69\x67\x68\x74\x20\x6C\x65\x67", "\x62\x6F\x64\x79", "\x47\x65\x6E\x65\x72\x69\x63", "\x68\x69\x74\x67\x72\x6F\x75\x70", "\x64\x6D\x67\x5F\x68\x65\x61\x6C\x74\x68", "\x4F\x63\x74\x61\x6E\x65", "\x48\x69\x74\x20\x6C\x6F\x67\x73\x20\x69\x6E\x20\x63\x68\x61\x74", "\x53\x61\x79\x20\x74\x6F\x20\x61\x6C\x6C", "\x73\x61\x79\x20\x01\x5B\x06", "\x01\x5D\x20\x04", "\x01\x68\x75\x72\x74\x20\x04", "\x20\x01\x66\x6F\x72\x20\x04", "\x20\x01\x69\x6E\x20\x04", "\x01\x5B\x06", "\x68\x69\x74\x6C\x6F\x67", "\x64\x6F\x75\x70\x6C\x65\x74\x61\x70", "\x4D\x69\x6E\x69\x6D\x75\x6D\x20\x61\x6C\x70\x68\x61", "\x52\x47\x42\x20\x6C\x69\x6E\x65", "\x53\x70\x65\x65\x64", "\x57\x61\x74\x65\x72\x6D\x61\x72\x6B", "\x62", "\x72", "\x67", "\x72\x61\x69\x6E\x62\x6F\x77\x43\x6F\x6C\x6F\x72\x73", "\x44\x54\x5F\x42\x61\x73\x65\x50\x6C\x61\x79\x65\x72", "\x6D\x5F\x68\x4F\x62\x73\x65\x72\x76\x65\x72\x54\x61\x72\x67\x65\x74", "\x74\x79\x70\x65", "\x67\x65\x74\x4F\x62\x73\x65\x72\x76\x61\x74\x6F\x72\x73", "\x64\x72\x61\x77\x4F\x62\x73\x65\x72\x76\x61\x74\x6F\x72\x73", "\x72\x6F\x75\x6E\x64\x5F\x73\x74\x61\x72\x74", "\x6F\x6E\x52\x6F\x75\x6E\x64\x53\x74\x61\x72\x74", "\x58\x20\x6F\x66\x66\x73\x65\x74", "\x59\x20\x6F\x66\x66\x73\x65\x74", "\x53\x68\x69\x66\x74", "\x54\x6F\x6C\x65\x72\x61\x6E\x63\x65", "\x44\x54", "\x54\x65\x6C\x65\x70\x6F\x72\x74", "\x43\x43\x53\x50\x6C\x61\x79\x65\x72", "\x6D\x5F\x6E\x54\x69\x63\x6B\x42\x61\x73\x65", "\x6D\x5F\x66\x6C\x4E\x65\x78\x74\x41\x74\x74\x61\x63\x6B", "\x43\x42\x61\x73\x65\x43\x6F\x6D\x62\x61\x74\x57\x65\x61\x70\x6F\x6E", "\x6D\x5F\x66\x6C\x4E\x65\x78\x74\x50\x72\x69\x6D\x61\x72\x79\x41\x74\x74\x61\x63\x6B", "\x45\x6E\x61\x62\x6C\x65", "\x44\x69\x73\x61\x62\x6C\x65", "\x4F\x76\x65\x72\x72\x69\x64\x65\x54\x6F\x6C\x65\x72\x61\x6E\x63\x65", "\x4F\x76\x65\x72\x72\x69\x64\x65\x53\x68\x69\x66\x74", "\x47\x65\x74\x44\x6D\x67\x50\x6C\x61\x79\x65\x72", "\x50\x6C\x61\x79\x65\x72", "\x6D\x5F\x6E\x44\x6D\x67", "\x70\x72\x6F\x63\x63\x65\x73\x74\x69\x63\x6B\x73", "\x6D\x65\x6E\x75", "\x54\x72\x75\x73\x74\x73\x65\x6E\x73\x65\x20\x54\x65\x6C\x65\x70\x6F\x72\x74", "\x49\x73\x43\x68\x65\x63\x6B\x62\x6F\x78\x41\x63\x74\x69\x76\x65", "\x45\x78\x74\x72\x61\x73", "\x54\x65\x6C\x65\x70\x6F\x72\x74\x20\x73\x74\x6F\x70", "\x64\x6D\x67\x5F\x69\x6E\x5F\x73\x68\x6F\x74", "\x73\x70\x65\x65\x64\x5F\x62\x6F\x6F\x73\x74\x65\x72", "\x70\x72\x6F\x63\x63\x65\x73\x74\x69\x63\x6B\x74\x6F\x74\x61\x6B\x65", "\x46\x52\x41\x4D\x45\x5F\x4E\x45\x54\x5F\x55\x50\x44\x41\x54\x45\x5F\x53\x54\x41\x52\x54", "\x5F\x46\x72\x61\x6D\x65\x4E\x65\x74\x55\x70\x64\x61\x74\x65\x53\x74\x61\x72\x74", "\x5F\x54\x42\x43\x5F\x43\x52\x45\x41\x54\x45\x5F\x4D\x4F\x56\x45", "\x55\x6E\x6C\x6F\x61\x64", "\x5F\x54\x42\x43\x5F\x55\x4E\x4C\x4F\x41\x44", "\x43\x68\x6F\x6B\x65\x64\x43\x6F\x6D\x6D\x61\x6E\x64\x73", "\x47\x65\x74\x4D\x65\x6E\x75\x50\x6F\x73\x69\x74\x69\x6F\x6E", "\x55\x70\x64\x61\x74\x65\x4C\x69\x73\x74", "\x52\x65\x6D\x6F\x76\x65\x49\x74\x65\x6D", "\x47\x65\x74\x48\x6F\x74\x6B\x65\x79", "\x53\x65\x74\x48\x6F\x74\x6B\x65\x79\x53\x74\x61\x74\x65", "\x47\x65\x74\x48\x6F\x74\x6B\x65\x79\x53\x74\x61\x74\x65", "\x41\x64\x64\x53\x75\x62\x54\x61\x62", "\x47\x65\x74\x43\x68\x69\x6C\x64\x72\x65\x6E", "\x44\x72\x61\x77\x46\x6C\x61\x67", "\x47\x65\x74\x43\x43\x53\x57\x65\x61\x70\x6F\x6E\x49\x6E\x66\x6F", "\x47\x65\x74\x52\x65\x6E\x64\x65\x72\x42\x6F\x78", "\x47\x65\x74\x65\x79\x65\x50\x6F\x73\x69\x74\x69\x6F\x6E", "\x52\x61\x77\x4C\x69\x6E\x65", "\x53\x6D\x6F\x6B\x65", "\x53\x65\x6E\x64", "\x43\x68\x6F\x6B\x65", "\x53\x65\x74\x42\x75\x74\x74\x6F\x6E\x73", "\x47\x65\x74\x42\x75\x74\x74\x6F\x6E\x73", "\x49\x73\x4C\x65\x67\x69\x74\x43\x6F\x6E\x66\x69\x67\x41\x63\x74\x69\x76\x65", "\x49\x73\x52\x61\x67\x65\x43\x6F\x6E\x66\x69\x67\x41\x63\x74\x69\x76\x65", "\x46\x6F\x72\x63\x65\x43\x75\x72\x73\x6F\x72", "\x47\x65\x74\x54\x61\x72\x67\x65\x74\x73", "\x49\x67\x6E\x6F\x72\x65\x54\x61\x72\x67\x65\x74", "\x46\x6F\x72\x63\x65\x48\x69\x74\x62\x6F\x78\x53\x61\x66\x65\x74\x79", "\x46\x6F\x72\x63\x65\x54\x61\x72\x67\x65\x74\x4D\x69\x6E\x69\x6D\x75\x6D\x44\x61\x6D\x61\x67\x65", "\x46\x6F\x72\x63\x65\x54\x61\x72\x67\x65\x74\x48\x69\x74\x63\x68\x61\x6E\x63\x65", "\x46\x6F\x72\x63\x65\x54\x61\x72\x67\x65\x74\x53\x61\x66\x65\x74\x79", "\x46\x6F\x72\x63\x65\x54\x61\x72\x67\x65\x74", "\x47\x65\x74\x54\x61\x72\x67\x65\x74", "\x52\x65\x66\x72\x65\x73\x68", "\x53\x65\x74\x4B\x65\x79\x56\x61\x6C\x75\x65", "\x47\x65\x74", "\x44\x65\x73\x74\x72\x6F\x79", "\x43\x72\x65\x61\x74\x65", "\x73\x63\x6F\x70\x65\x20\x6C\x69\x6E\x65\x73", "\x43\x75\x73\x74\x6F\x6D\x20\x73\x63\x6F\x70\x65\x20\x6C\x69\x6E\x65\x73", "\x53\x63\x6F\x70\x65\x20\x6C\x69\x6E\x65\x73\x20\x63\x6F\x6C\x6F\x72", "\x53\x63\x6F\x70\x65\x20\x6C\x69\x6E\x65\x73\x20\x68\x65\x69\x67\x68\x74", "\x53\x63\x6F\x70\x65\x20\x6C\x69\x6E\x65\x73\x20\x6F\x66\x66\x73\x65\x74", "\x61\x75\x74\x6F", "\x64\x65\x61\x67\x6C\x65", "\x72\x65\x76\x6F\x6C\x76\x65\x72", "\x73\x63\x6F\x75\x74", "\x6F\x74\x68\x65\x72", "\x6D\x5F\x62\x49\x73\x53\x63\x6F\x70\x65\x64", "\x4D\x69\x73\x63\x2E", "\x4D\x69\x73\x63\x65\x6C\x6C\x61\x6E\x65\x6F\x75\x73", "\x46\x6F\x72\x63\x65\x20\x73\x76\x5F\x63\x68\x65\x61\x74\x73", "\x56\x69\x73\x75\x61\x6C", "\x57\x4F\x52\x4C\x44", "\x45\x6E\x74\x69\x74\x69\x65\x73", "\x52\x65\x6D\x6F\x76\x61\x6C\x73", "\x72\x5F\x64\x72\x61\x77\x76\x67\x75\x69", "\x75\x6E\x6C\x6F\x61\x64", "\x64\x72\x61\x77", "\x47\x72\x61\x64\x69\x65\x6E\x74\x20\x53\x70\x65\x65\x64", "\x67\x65\x74\x48\x6F\x75\x72\x73", "\x3A", "\x67\x65\x74\x4D\x69\x6E\x75\x74\x65\x73", "\x67\x65\x74\x53\x65\x63\x6F\x6E\x64\x73", "\x79\x61\x77", "\x67\x6F\x64", "\x7C", "\x66\x70\x73\x20\x7C", "\x20", "\x64\x72\x61\x77\x5F\x67\x73\x5F\x77\x61\x74\x65\x72\x6D\x61\x72\x6B", "\x61\x73\x70\x65\x63\x74\x20\x72\x61\x74\x69\x6F\x20", "\x41\x73\x70\x65\x63\x74\x20\x52\x61\x74\x69\x6F", "\x31\x2E\x33\x33\x20\x69\x73\x20\x34\x3A\x33\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x31\x2E\x37\x37\x20\x69\x73\x20\x31\x36\x3A\x39", "\x34\x3A\x33\x20\x6D\x6F\x64\x65", "\x31\x36\x3A\x39\x20\x6D\x6F\x64\x65", "\x48\x69\x64\x64\x65\x6E\x20\x63\x76\x61\x72\x73", "\x72\x5F\x61\x73\x70\x65\x63\x74\x72\x61\x74\x69\x6F\x20", "\x61\x73\x70\x65\x63\x74", "\x63\x6F\x6D\x69\x6E\x67\x20\x73\x6F\x6F\x6E\x21", "\x53\x65\x6C\x65\x63\x74\x65\x64\x20\x61\x72\x72\x6F\x77\x20\x63\x6F\x6C\x6F\x72", "\x4C\x65\x66\x74\x20\x48\x6F\x74\x6B\x65\x79", "\x52\x69\x67\x68\x74\x20\x48\x6F\x74\x6B\x65\x79", "\x42\x61\x63\x6B\x20\x48\x6F\x74\x6B\x65\x79", "\x46\x61\x6B\x65\x20\x41\x6E\x67\x6C\x65\x73", "\x64\x72\x61\x77\x53\x74\x72\x69\x6E\x67", "\x6F\x6E\x43\x72\x65\x61\x74\x65\x4D\x6F\x76\x65"]; var _$_90fa = [_0x1996[0], _0x1996[1], _0x1996[2], _0x1996[3], _0x1996[4], _0x1996[5], _0x1996[6], _0x1996[7], _0x1996[8], _0x1996[9], _0x1996[10], _0x1996[11], _0x1996[12], _0x1996[13], _0x1996[14], _0x1996[15], _0x1996[16], _0x1996[17], _0x1996[18], _0x1996[19], _0x1996[20], _0x1996[21], _0x1996[22], _0x1996[23], _0x1996[24], _0x1996[25], _0x1996[26], _0x1996[27], _0x1996[28], _0x1996[29], _0x1996[30], _0x1996[31], _0x1996[32], _0x1996[33], _0x1996[34], _0x1996[35], _0x1996[36], _0x1996[37], _0x1996[38], _0x1996[39], _0x1996[40], _0x1996[41], _0x1996[42], _0x1996[43], _0x1996[44], _0x1996[45], _0x1996[46], _0x1996[47], _0x1996[48], _0x1996[49], _0x1996[50], _0x1996[51], _0x1996[52], _0x1996[53], _0x1996[54], _0x1996[55], _0x1996[56], _0x1996[57], _0x1996[58], _0x1996[59], _0x1996[60], _0x1996[61], _0x1996[62], _0x1996[63], _0x1996[64], _0x1996[65], _0x1996[66], _0x1996[67], _0x1996[68], _0x1996[69], _0x1996[70], _0x1996[71], _0x1996[72], _0x1996[73], _0x1996[74], _0x1996[75], _0x1996[76], _0x1996[77], _0x1996[78], _0x1996[79], _0x1996[80], _0x1996[81], _0x1996[82], _0x1996[83], _0x1996[84], _0x1996[85], _0x1996[86], _0x1996[87], _0x1996[88], _0x1996[89], _0x1996[90], _0x1996[91], _0x1996[92], _0x1996[93], _0x1996[94], _0x1996[95], _0x1996[96], _0x1996[97], _0x1996[98], _0x1996[99], _0x1996[100], _0x1996[101], _0x1996[102], _0x1996[103], _0x1996[104], _0x1996[105], _0x1996[106], _0x1996[107], _0x1996[108], _0x1996[109], _0x1996[110], _0x1996[111], _0x1996[112], _0x1996[113], _0x1996[114], _0x1996[115], _0x1996[116], _0x1996[117], _0x1996[118], _0x1996[119], _0x1996[120], _0x1996[121], _0x1996[122], _0x1996[123], _0x1996[124], _0x1996[125], _0x1996[126], _0x1996[127], _0x1996[128], _0x1996[129], _0x1996[130], _0x1996[131], _0x1996[132], _0x1996[133], _0x1996[134], _0x1996[135], _0x1996[136], _0x1996[137], _0x1996[138], _0x1996[139], _0x1996[140], _0x1996[141], _0x1996[142], _0x1996[143], _0x1996[144], _0x1996[145], _0x1996[146], _0x1996[147], _0x1996[148], _0x1996[149], _0x1996[150], _0x1996[151], _0x1996[152], _0x1996[153], _0x1996[154], _0x1996[155], _0x1996[156], _0x1996[157], _0x1996[158], _0x1996[159], _0x1996[160], _0x1996[161], _0x1996[162], _0x1996[163], _0x1996[164], _0x1996[165], _0x1996[166], _0x1996[167], _0x1996[168], _0x1996[169], _0x1996[170], _0x1996[171], _0x1996[172], _0x1996[173], _0x1996[174], _0x1996[175], _0x1996[176], _0x1996[177], _0x1996[178], _0x1996[179], _0x1996[180], _0x1996[181], _0x1996[182], _0x1996[183], _0x1996[184], _0x1996[185], _0x1996[186], _0x1996[187], _0x1996[188], _0x1996[189], _0x1996[190], _0x1996[191], _0x1996[192], _0x1996[193], _0x1996[194], _0x1996[195], _0x1996[196], _0x1996[197], _0x1996[198], _0x1996[199], _0x1996[200], _0x1996[201], _0x1996[202], _0x1996[203], _0x1996[204], _0x1996[205], _0x1996[206], _0x1996[207], _0x1996[208], _0x1996[209], _0x1996[210], _0x1996[211], _0x1996[212], _0x1996[213], _0x1996[214], _0x1996[215], _0x1996[216], _0x1996[217], _0x1996[218], _0x1996[219], _0x1996[220], _0x1996[221], _0x1996[222], _0x1996[223], _0x1996[224], _0x1996[225], _0x1996[226], _0x1996[227], _0x1996[228], _0x1996[229], _0x1996[230], _0x1996[231], _0x1996[232], _0x1996[233], _0x1996[234], _0x1996[235], _0x1996[236], _0x1996[237], _0x1996[238], _0x1996[239], _0x1996[240], _0x1996[241], _0x1996[242], _0x1996[243], _0x1996[244], _0x1996[245], _0x1996[246], _0x1996[247], _0x1996[248], _0x1996[249], _0x1996[250], _0x1996[251], _0x1996[252], _0x1996[253], _0x1996[254], _0x1996[255], _0x1996[256], _0x1996[257], _0x1996[258], _0x1996[259], _0x1996[260], _0x1996[261], _0x1996[262], _0x1996[263], _0x1996[264], _0x1996[265], _0x1996[266], _0x1996[267], _0x1996[268], _0x1996[269], _0x1996[270], _0x1996[271], _0x1996[272], _0x1996[273], _0x1996[274], _0x1996[275], _0x1996[276], _0x1996[277], _0x1996[278], _0x1996[279], _0x1996[280], _0x1996[281], _0x1996[282], _0x1996[283], _0x1996[284], _0x1996[285], _0x1996[286], _0x1996[287], _0x1996[288], _0x1996[289], _0x1996[290], _0x1996[291], _0x1996[292], _0x1996[293], _0x1996[294], _0x1996[295], _0x1996[296], _0x1996[297], _0x1996[298], _0x1996[299], _0x1996[300], _0x1996[301], _0x1996[302], _0x1996[303], _0x1996[304], _0x1996[305], _0x1996[306], _0x1996[307], _0x1996[308], _0x1996[309], _0x1996[310], _0x1996[311], _0x1996[312], _0x1996[313], _0x1996[314], _0x1996[315], _0x1996[316], _0x1996[317], _0x1996[318], _0x1996[319], _0x1996[320], _0x1996[321], _0x1996[322], _0x1996[323], _0x1996[324], _0x1996[325], _0x1996[326], _0x1996[327], _0x1996[328], _0x1996[329], _0x1996[330], _0x1996[331], _0x1996[332], _0x1996[333], _0x1996[334], _0x1996[335], _0x1996[336], _0x1996[337], _0x1996[338], _0x1996[339], _0x1996[340], _0x1996[341], _0x1996[342], _0x1996[343], _0x1996[344], _0x1996[345], _0x1996[346], _0x1996[347], _0x1996[348], _0x1996[349], _0x1996[350], _0x1996[351], _0x1996[352], _0x1996[353], _0x1996[354], _0x1996[355], _0x1996[356], _0x1996[357], _0x1996[358], _0x1996[359], _0x1996[360], _0x1996[361], _0x1996[362], _0x1996[363], _0x1996[364], _0x1996[365], _0x1996[366], _0x1996[367], _0x1996[368], _0x1996[369], _0x1996[370], _0x1996[371], _0x1996[372], _0x1996[373], _0x1996[374], _0x1996[375], _0x1996[376], _0x1996[377], _0x1996[378], _0x1996[379], _0x1996[380], _0x1996[381], _0x1996[382], _0x1996[383], _0x1996[384], _0x1996[385], _0x1996[386], _0x1996[387], _0x1996[388], _0x1996[389], _0x1996[390], _0x1996[391], _0x1996[392], _0x1996[393], _0x1996[394], _0x1996[395], _0x1996[396], _0x1996[397], _0x1996[398], _0x1996[399], _0x1996[400], _0x1996[401], _0x1996[402], _0x1996[403], _0x1996[404], _0x1996[405], _0x1996[406], _0x1996[407], _0x1996[408], _0x1996[409], _0x1996[410], _0x1996[411], _0x1996[412], _0x1996[413], _0x1996[414], _0x1996[415], _0x1996[416], _0x1996[417], _0x1996[418], _0x1996[419], _0x1996[420], _0x1996[421], _0x1996[422], _0x1996[423], _0x1996[424], _0x1996[425], _0x1996[426], _0x1996[427], _0x1996[428], _0x1996[429], _0x1996[430], _0x1996[431], _0x1996[432], _0x1996[433], _0x1996[434], _0x1996[435], _0x1996[436], _0x1996[437], _0x1996[438], _0x1996[439], _0x1996[440], _0x1996[441], _0x1996[442], _0x1996[443], _0x1996[444], _0x1996[445]]; UI[_$_90fa[1]](_$_90fa[0], 0, 0); UI[_$_90fa[1]](_$_90fa[2], 0, 0); username = Cheat[_$_90fa[3]](); UI[_$_90fa[5]](_$_90fa[4]); UI[_$_90fa[5]](_$_90fa[6] + username); UI[_$_90fa[5]](_$_90fa[7]); UI[_$_90fa[5]](_$_90fa[8]); UI[_$_90fa[5]](_$_90fa[9]); UI[_$_90fa[5]](_$_90fa[10]); UI[_$_90fa[5]](_$_90fa[11]); function addtomenu() { UI[_$_90fa[1]](_$_90fa[0], 0, 0); UI[_$_90fa[1]](_$_90fa[12], 0, 0); UI[_$_90fa[16]](_$_90fa[13], [_$_90fa[14], _$_90fa[15]]); UI[_$_90fa[16]](_$_90fa[17], [_$_90fa[14], _$_90fa[18], _$_90fa[19], _$_90fa[20]]); UI[_$_90fa[1]](_$_90fa[0], 0, 0); UI[_$_90fa[1]](_$_90fa[21], 0, 0) } var aa = 1; var aad = 1; var lasttime = Global[_$_90fa[22]](); var realtime = Global[_$_90fa[22]](); var yawoffset = UI[_$_90fa[25]](_$_90fa[12], _$_90fa[23], _$_90fa[24]); var jitteroffset = UI[_$_90fa[25]](_$_90fa[12], _$_90fa[23], _$_90fa[26]); var de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); var status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[31]); var yawnewoffset; function randomIntFrom(_0xa80axd, _0xa80axe) { return Math[_$_90fa[33]](Math[_$_90fa[32]]() * (_0xa80axe - _0xa80axd + 1) + _0xa80axd) } function V1() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(4, -6); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], -2); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 16) } function V2() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -5); yawnewoffset = randomIntFrom(0, 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function V3() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -5); yawnewoffset = randomIntFrom(-5, -10); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function V4() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -5); yawnewoffset = randomIntFrom(8, 5); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function V5() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(2, 2); yawnewoffset = randomIntFrom(-0, 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 13) } function V6() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -5); yawnewoffset = randomIntFrom(8, 5); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function V7() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -5); yawnewoffset = randomIntFrom(5, -5); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function V8() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -5); yawnewoffset = randomIntFrom(10, 5); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[45], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function S1() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); yawnewoffset = randomIntFrom(-5, -0); jitteroffset = randomIntFrom(-0, 5); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](1); AntiAim[_$_90fa[40]](-27); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true) } function S2() { yawnewoffset = randomIntFrom(5, 3); jitteroffset = randomIntFrom(0, 4); UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-27); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset) } function S3() { yawnewoffset = randomIntFrom(5, -0); jitteroffset = randomIntFrom(-0, -3); UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-33); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset) } function S4() { yawnewoffset = randomIntFrom(3, 5); jitteroffset = randomIntFrom(0, 5); UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](-1); AntiAim[_$_90fa[40]](-31); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset) } function A1() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(4, -7); yawnewoffset = randomIntFrom(-15, -10); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 16) } function A2() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, -6); yawnewoffset = randomIntFrom(15, 10); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 14) } function A3() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, 6); yawnewoffset = randomIntFrom(20, 15); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 13) } function A4() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34], 0); jitteroffset = randomIntFrom(5, 6); yawnewoffset = randomIntFrom(-20, -15); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[37], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], jitteroffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 13) } function BR1() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17], 0); yawnewoffset = randomIntFrom(-10, -20); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function BR2() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17], 0); yawnewoffset = randomIntFrom(-15, -25); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 1); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 5) } function BR3() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17], 0); yawnewoffset = randomIntFrom(-10, -10); yawnewoffset = randomIntFrom(12, -5); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 9) } function BRR1() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17], 0); yawnewoffset = randomIntFrom(-10, -34); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[42], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 15) } function BRR2() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17], 0); yawnewoffset = randomIntFrom(-16, -7); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], false); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 5) } function BRR3() { UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17], 0); yawnewoffset = randomIntFrom(2, -4); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], yawnewoffset); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[43], 2); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[41], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[36], _$_90fa[44], true); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], 9) } function godyawmain() { mode = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[17]); breakermenu = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[34]); if (mode == 0) { godyawdisable() }; if (mode == 1) { godyawv2() }; if (mode == 2) { godyawv1() }; if (mode == 3) { godyawv3() }; if (breakermenu == 0) { breakerdisable() }; if (breakermenu == 1) { breakerv1() }; if (breakermenu == 2) { breakerv2() } } function breakerv1() { status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[13]); de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); realtime = Global[_$_90fa[22]](); if (realtime - lasttime >= de) { if (status == 1) { aad = aa + 1; if (aad > 3) { aad = 1 }; aa = aad }; if (aa == 1) { BR1() }; if (aa == 2) { BR2() }; if (aa == 3) { BR3() }; lasttime = realtime }; if (realtime < lasttime) { lasttime = Global[_$_90fa[22]](); realtime = Global[_$_90fa[22]]() } } function godyawdisable() { } function breakerv2() { status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[13]); de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); realtime = Global[_$_90fa[22]](); if (realtime - lasttime >= de) { if (status == 1) { aad = 1 + Math[_$_90fa[33]](Math[_$_90fa[32]]() * 3); aa = aad }; if (status == 2) { aad = aa + 1; if (aad > 3) { aad = 1 }; aa = aad }; if (aa == 1) { BRR1() }; if (aa == 2) { BRR2() }; if (aa == 3) { BRR3() }; lasttime = realtime }; if (realtime < lasttime) { lasttime = Global[_$_90fa[22]](); realtime = Global[_$_90fa[22]]() } } function breakerdisable() { } function godyawv1() { status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[13]); de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); realtime = Global[_$_90fa[22]](); if (realtime - lasttime >= de) { if (status == 1) { aad = aa + 1; if (aad > 2) { aad = 1 }; aa = aad }; if (aa == 1) { S1() }; if (aa == 2) { S2() }; lasttime = realtime }; if (realtime < lasttime) { lasttime = Global[_$_90fa[22]](); realtime = Global[_$_90fa[22]]() } } function godyawv2() { status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[13]); de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); realtime = Global[_$_90fa[22]](); if (realtime - lasttime >= de) { if (status == 1) { aad = aa + 1; if (aad > 3) { aad = 1 }; aa = aad }; if (aa == 1) { V1() }; if (aa == 2) { V2() }; if (aa == 3) { V3() }; lasttime = realtime }; if (realtime < lasttime) { lasttime = Global[_$_90fa[22]](); realtime = Global[_$_90fa[22]]() } } function godyawv3() { status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[13]); de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); realtime = Global[_$_90fa[22]](); if (realtime - lasttime >= de) { if (status == 1) { aad = 1 + Math[_$_90fa[33]](Math[_$_90fa[32]]() * 3); aa = aad }; if (status == 2) { aad = aa + 1; if (aad > 3) { aad = 1 }; aa = aad }; if (aa == 1) { A1() }; if (aa == 2) { A2() }; if (aa == 3) { A3() }; lasttime = realtime }; if (realtime < lasttime) { lasttime = Global[_$_90fa[22]](); realtime = Global[_$_90fa[22]]() } } function main() { status = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[13]); de = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[30]); realtime = Global[_$_90fa[22]](); if (realtime - lasttime >= de) { if (status == 1) { aad = 1 + Math[_$_90fa[33]](Math[_$_90fa[32]]() * 3); aa = aad }; if (status == 2) { aad = aa + 1; if (aad > 3) { aad = 1 }; aa = aad }; if (aa == 1) { S1() }; if (aa == 2) { S2() }; if (aa == 3) { S3() }; lasttime = realtime }; if (realtime < lasttime) { lasttime = Global[_$_90fa[22]](); realtime = Global[_$_90fa[22]]() } } addtomenu(); UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[48], yawoffset); UI[_$_90fa[35]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[49], jitteroffset); Global[_$_90fa[52]](_$_90fa[50], _$_90fa[51]); UI[_$_90fa[54]](_$_90fa[53]); UI[_$_90fa[16]](_$_90fa[55], [_$_90fa[15]]); const lowdelta_modes = UI[_$_90fa[60]](_$_90fa[56], [_$_90fa[57], _$_90fa[58], _$_90fa[59]]); UI[_$_90fa[1]](_$_90fa[0], 0, 0); UI[_$_90fa[1]](_$_90fa[61], 0, 0); function SetEnabled() { if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[53])) { UI[_$_90fa[63]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[55], 1) } else { UI[_$_90fa[63]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[55], 0) }; if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[55]) == 0 && UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[53])) { UI[_$_90fa[63]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[56], 1) } else { if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[55]) == 1 && UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[53])) { UI[_$_90fa[63]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[56], 0) } else { UI[_$_90fa[63]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[56], 0) } } } function get_velocity(_0xa80ax31) { var _0xa80ax32 = Entity[_$_90fa[66]](_0xa80ax31, _$_90fa[64], _$_90fa[65]); return Math[_$_90fa[67]](_0xa80ax32[0] * _0xa80ax32[0] + _0xa80ax32[1] * _0xa80ax32[1]) } function get_health(_0xa80ax31) { health_override = Entity[_$_90fa[66]](_0xa80ax31, _$_90fa[64], _$_90fa[68]); return health_override } function Low_delta() { localplayer_index = Entity[_$_90fa[69]](); const _0xa80ax35 = UI[_$_90fa[25]][_$_90fa[70]](null, lowdelta_modes); var _0xa80ax32 = get_velocity(localplayer_index); var _0xa80ax36 = get_health(localplayer_index); var _0xa80ax37 = false; var _0xa80ax38 = false; if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[53]) && UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[55]) == 0) { if (_0xa80ax35 & (1 << 0) && UI[_$_90fa[72]](_$_90fa[12], _$_90fa[71], _$_90fa[57])) { _0xa80ax37 = true } else { _0xa80ax37 = false }; if (_0xa80ax35 & (1 << 1) && _0xa80ax36 < 50) { LowHP = true } else { LowHP = false }; if (_0xa80ax35 & (1 << 2) && _0xa80ax32 < 3) { _0xa80ax38 = true } else { _0xa80ax38 = false } } else { if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[53]) && UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[55]) == 1) { if (UI[_$_90fa[72]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[73])) { Onkey = true } else { Onkey = false } } }; if (_0xa80ax38 == true || LowHP == true || _0xa80ax37 == true || Onkey == true && UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[53])) { UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], 7); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[26], 3); AntiAim[_$_90fa[38]](1); AntiAim[_$_90fa[39]](2); AntiAim[_$_90fa[40]](-30) } else { UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], 0); AntiAim[_$_90fa[38]](0) } } Global[_$_90fa[52]](_$_90fa[50], _$_90fa[63]); Cheat[_$_90fa[52]](_$_90fa[74], _$_90fa[75]); const global_print = Global[_$_90fa[76]], global_print_chat = Global[_$_90fa[77]], global_print_color = Global[_$_90fa[78]], global_register_callback = Global[_$_90fa[52]], global_execute_command = Global[_$_90fa[79]], global_frame_stage = Global[_$_90fa[80]], global_tickcount = Global[_$_90fa[81]], global_tickrate = Global[_$_90fa[82]], global_tick_interval = Global[_$_90fa[83]], global_curtime = Global[_$_90fa[84]], global_realtime = Global[_$_90fa[22]], global_frametime = Global[_$_90fa[85]], global_latency = Global[_$_90fa[86]], global_get_view_angles = Global[_$_90fa[87]], global_set_view_angles = Global[_$_90fa[88]], global_get_map_name = Global[_$_90fa[89]], global_is_key_pressed = Global[_$_90fa[90]], global_get_screen_size = Global[_$_90fa[91]], global_get_cursor_position = Global[_$_90fa[92]], global_play_sound = Global[_$_90fa[93]], global_play_microphone = Global[_$_90fa[94]], global_stop_microphone = Global[_$_90fa[95]], global_get_username = Global[_$_90fa[3]], global_set_clan_tag = Global[_$_90fa[96]], globals_tickcount = Globals[_$_90fa[81]], globals_tickrate = Globals[_$_90fa[82]], globals_tick_interval = Globals[_$_90fa[83]], globals_curtime = Globals[_$_90fa[84]], globals_realtime = Globals[_$_90fa[22]], globals_frametime = Globals[_$_90fa[85]], sound_play = Sound[_$_90fa[97]], sound_play_microphone = Sound[_$_90fa[94]], sound_stop_microphone = Sound[_$_90fa[95]], cheat_get_username = Cheat[_$_90fa[3]], cheat_register_callback = cheat_register_callback = new Proxy(Cheat[_$_90fa[52]], { apply: function (_0xa80axc7, _0xa80axc7, _0xa80axc8) { switch (_0xa80axc8[0]) { case _$_90fa[98]: Cheat[_$_90fa[52]](_$_90fa[50], _0xa80axc8[1]); break; case _$_90fa[99]: Cheat[_$_90fa[52]](_$_90fa[74], _0xa80axc8[1]); break; case _$_90fa[101]: Cheat[_$_90fa[52]](_$_90fa[100], _0xa80axc8[1]); break; default: Cheat[_$_90fa[52]](_0xa80axc8[0], _0xa80axc8[1]); break } } }), cheat_execute_command = Cheat[_$_90fa[79]], cheat_frame_stage = Cheat[_$_90fa[80]], cheat_print = Cheat[_$_90fa[76]], cheat_print_chat = Cheat[_$_90fa[77]], cheat_print_color = Cheat[_$_90fa[78]], local_latency = Local[_$_90fa[86]], local_get_view_angles = Local[_$_90fa[87]], local_set_view_angles = Local[_$_90fa[88]], local_set_clan_tag = Local[_$_90fa[96]], local_get_real_yaw = Local[_$_90fa[102]], local_get_fake_yaw = Local[_$_90fa[103]], local_get_spread = Local[_$_90fa[104]], local_get_inaccuracy = Local[_$_90fa[105]], world_get_map_name = World[_$_90fa[89]], world_get_server_string = World[_$_90fa[106]], input_get_cursor_position = Input[_$_90fa[92]], input_is_key_pressed = Input[_$_90fa[90]], render_string = Render[_$_90fa[107]], render_text_size = Render[_$_90fa[108]], render_line = Render[_$_90fa[109]], render_rect = Render[_$_90fa[110]], render_filled_rect = Render[_$_90fa[111]], render_gradient_rect = Render[_$_90fa[112]], render_circle = Render[_$_90fa[113]], render_filled_circle = Render[_$_90fa[114]], render_polygon = Render[_$_90fa[115]], render_world_to_screen = Render[_$_90fa[116]], render_add_font = Render[_$_90fa[117]], render_find_font = Render[_$_90fa[118]], render_string_custom = Render[_$_90fa[119]], render_textured_rect = Render[_$_90fa[120]], render_add_texture = Render[_$_90fa[121]], render_text_size_custom = Render[_$_90fa[122]], render_get_screen_size = Render[_$_90fa[91]], ui_get_value = UI[_$_90fa[25]], ui_set_value = UI[_$_90fa[35]], ui_add_checkbox = UI[_$_90fa[54]], ui_add_slider_int = UI[_$_90fa[1]], ui_add_slider_float = UI[_$_90fa[123]], ui_add_hotkey = UI[_$_90fa[124]], ui_add_label = UI[_$_90fa[5]], ui_add_dropdown = UI[_$_90fa[16]], ui_add_multi_dropdown = UI[_$_90fa[60]], ui_add_color_picker = UI[_$_90fa[125]], ui_add_textbox = UI[_$_90fa[126]], ui_set_enabled = UI[_$_90fa[63]], ui_get_string = UI[_$_90fa[127]], ui_get_color = UI[_$_90fa[128]], ui_set_color = UI[_$_90fa[129]], ui_is_hotkey_active = UI[_$_90fa[72]], ui_toggle_hotkey = UI[_$_90fa[130]], ui_is_menu_open = UI[_$_90fa[131]], convar_get_int = Convar[_$_90fa[132]], convar_set_int = Convar[_$_90fa[133]], convar_get_float = Convar[_$_90fa[134]], convar_set_float = Convar[_$_90fa[135]], convar_get_string = Convar[_$_90fa[127]], convar_set_string = Convar[_$_90fa[136]], event_get_int = Event[_$_90fa[132]], event_get_float = Event[_$_90fa[134]], event_get_string = Event[_$_90fa[127]], entity_get_entities = Entity[_$_90fa[137]], entity_get_entities_by_class_i_d = Entity[_$_90fa[138]], entity_get_players = Entity[_$_90fa[139]], entity_get_enemies = Entity[_$_90fa[140]], entity_get_teammates = Entity[_$_90fa[141]], entity_get_local_player = Entity[_$_90fa[69]], entity_get_game_rules_proxy = Entity[_$_90fa[142]], entity_get_entity_from_user_i_d = Entity[_$_90fa[143]], entity_is_teammate = Entity[_$_90fa[144]], entity_is_enemy = Entity[_$_90fa[145]], entity_is_bot = Entity[_$_90fa[146]], entity_is_local_player = Entity[_$_90fa[147]], entity_is_valid = Entity[_$_90fa[148]], entity_is_alive = Entity[_$_90fa[149]], entity_is_dormant = Entity[_$_90fa[150]], entity_get_class_i_d = Entity[_$_90fa[151]], entity_get_class_name = Entity[_$_90fa[152]], entity_get_name = Entity[_$_90fa[153]], entity_get_weapon = Entity[_$_90fa[154]], entity_get_weapons = Entity[_$_90fa[155]], entity_get_render_origin = Entity[_$_90fa[156]], entity_get_prop = Entity[_$_90fa[66]], entity_set_prop = Entity[_$_90fa[157]], entity_get_hitbox_position = Entity[_$_90fa[158]], entity_get_eye_position = Entity[_$_90fa[159]], trace_line = Trace[_$_90fa[109]], trace_bullet = Trace[_$_90fa[160]], usercmd_set_movement = UserCMD[_$_90fa[161]], usercmd_get_movement = UserCMD[_$_90fa[162]], usercmd_set_angles = UserCMD[_$_90fa[163]], usercmd_force_jump = UserCMD[_$_90fa[164]], usercmd_force_crouch = UserCMD[_$_90fa[165]], antiaim_get_override = AntiAim[_$_90fa[166]], antiaim_set_override = AntiAim[_$_90fa[38]], antiaim_set_real_offset = AntiAim[_$_90fa[40]], antiaim_set_fake_offset = AntiAim[_$_90fa[39]], antiaim_set_l_b_y_offset = AntiAim[_$_90fa[167]], exploit_get_charge = Exploit[_$_90fa[168]], exploit_recharge = Exploit[_$_90fa[169]], exploit_disable_recharge = Exploit[_$_90fa[170]], exploit_enable_recharge = Exploit[_$_90fa[171]], ragebot_override_minimum_damage = Ragebot[_$_90fa[172]], ragebot_override_hitchance = Ragebot[_$_90fa[173]], ragebot_override_accuracy_boost = Ragebot[_$_90fa[174]], ragebot_override_multipoint_scale = Ragebot[_$_90fa[175]], ragebot_force_safety = Ragebot[_$_90fa[176]]; var menu = []; const menu_spacer = _$_90fa[177]; menu[_$_90fa[178]] = function (_0xa80axcb) { UI[_$_90fa[5]](_0xa80axcb) }; menu[_$_90fa[179]] = function (_0xa80axcc, _0xa80axcd, _0xa80axcb, _0xa80axce) { const _0xa80axcf = _0xa80axcd + menu_spacer + _0xa80axcb; var _0xa80axd0 = [_0xa80axcf]; const _0xa80axd1 = { path: [_$_90fa[27], _$_90fa[28], _$_90fa[29], _0xa80axcf] }; if (_0xa80axce != null) { for (var _0xa80axd2 = 0; _0xa80axd2 < _0xa80axce[_$_90fa[180]]; _0xa80axd2++) { _0xa80axd0[_$_90fa[181]](_0xa80axce[_0xa80axd2]) } }; _0xa80axcc[_$_90fa[70]](null, _0xa80axd0); return _0xa80axd1 }; menu[_$_90fa[182]] = function (_0xa80axd3) { const _0xa80axd1 = { path: _0xa80axd3 }; return _0xa80axd1 }; menu[_$_90fa[183]] = function (_0xa80axd4) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; return UI[_$_90fa[25]][_$_90fa[70]](null, _0xa80axd4[_$_90fa[184]]) }; menu[_$_90fa[186]] = function (_0xa80axd4) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; return UI[_$_90fa[72]][_$_90fa[70]](null, _0xa80axd4[_$_90fa[184]]) }; menu[_$_90fa[187]] = function (_0xa80axd4) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; return UI[_$_90fa[128]][_$_90fa[70]](null, _0xa80axd4[_$_90fa[184]]) }; menu[_$_90fa[188]] = function (_0xa80axd4, _0xa80axd5) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; const _0xa80axce = _0xa80axd4; _0xa80axce[_$_90fa[184]][_$_90fa[181]](_0xa80axd5); UI[_$_90fa[35]][_$_90fa[70]](null, _0xa80axce[_$_90fa[184]]) }; menu[_$_90fa[189]] = function (_0xa80axd4, _0xa80axd6) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; const _0xa80axce = _0xa80axd4; _0xa80axce[_$_90fa[184]][_$_90fa[181]](_0xa80axd6); UI[_$_90fa[129]][_$_90fa[70]](null, _0xa80axce[_$_90fa[184]]) }; menu[_$_90fa[190]] = function (_0xa80axd4) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; UI[_$_90fa[130]][_$_90fa[70]](null, _0xa80axd4[_$_90fa[184]]) }; menu[_$_90fa[191]] = function (_0xa80axd4, _0xa80axd7) { if (!(_0xa80axd4[_$_90fa[184]])) { throw new Error(_$_90fa[185]) }; const _0xa80axce = _0xa80axd4; _0xa80axce[_$_90fa[184]][_$_90fa[181]](_0xa80axd7); UI[_$_90fa[63]][_$_90fa[70]](null, _0xa80axce[_$_90fa[184]]) }; var vector = { _class: _$_90fa[192] }; vector[_$_90fa[193]] = function (_0xa80axd9) { return { x: _0xa80axd9[0], y: _0xa80axd9[1], z: _0xa80axd9[2] } }; vector[_$_90fa[194]] = function (_0xa80axda, _0xa80axdb, _0xa80axdc) { switch (_0xa80axdc) { case _$_90fa[198]: return { x: _0xa80axda[_$_90fa[195]] + _0xa80axdb[_$_90fa[195]], y: _0xa80axda[_$_90fa[196]] + _0xa80axdb[_$_90fa[196]], z: _0xa80axda[_$_90fa[197]] + _0xa80axdb[_$_90fa[197]] }; case _$_90fa[199]: return { x: _0xa80axda[_$_90fa[195]] - _0xa80axdb[_$_90fa[195]], y: _0xa80axda[_$_90fa[196]] - _0xa80axdb[_$_90fa[196]], z: _0xa80axda[_$_90fa[197]] - _0xa80axdb[_$_90fa[197]] }; case _$_90fa[200]: return { x: _0xa80axda[_$_90fa[195]] * _0xa80axdb[_$_90fa[195]], y: _0xa80axda[_$_90fa[196]] * _0xa80axdb[_$_90fa[196]], z: _0xa80axda[_$_90fa[197]] * _0xa80axdb[_$_90fa[197]] }; case _$_90fa[201]: return { x: _0xa80axda[_$_90fa[195]] / _0xa80axdb[_$_90fa[195]], y: _0xa80axda[_$_90fa[196]] / _0xa80axdb[_$_90fa[196]], z: _0xa80axda[_$_90fa[197]] / _0xa80axdb[_$_90fa[197]] }; default: throw new Error(_$_90fa[202]) } }; vector[_$_90fa[203]] = function (_0xa80axda) { return Math[_$_90fa[67]](_0xa80axda[_$_90fa[195]] * _0xa80axda[_$_90fa[195]] + _0xa80axda[_$_90fa[196]] * _0xa80axda[_$_90fa[196]]) }; vector[_$_90fa[204]] = function (_0xa80axda) { return { x: -Math[_$_90fa[205]](_0xa80axda[_$_90fa[197]], this[_$_90fa[203]](_0xa80axda)) * 180 / Math[_$_90fa[206]], y: Math[_$_90fa[205]](_0xa80axda[_$_90fa[196]], _0xa80axda[_$_90fa[195]]) * 180 / Math[_$_90fa[206]], z: 0 } }; vector[_$_90fa[207]] = function (_0xa80axdd, _0xa80axde, _0xa80axdf) { const _0xa80axe0 = this[_$_90fa[204]](this[_$_90fa[194]](_0xa80axde, _0xa80axdd, _$_90fa[199])); const _0xa80axe1 = this[_$_90fa[193]]([Math[_$_90fa[208]](_0xa80axdf[_$_90fa[195]] - _0xa80axe0[_$_90fa[195]]), Math[_$_90fa[208]](_0xa80axdf[_$_90fa[196]] % 360 - _0xa80axe0[_$_90fa[196]] % 360) % 360, 0]); if (_0xa80axe1[_$_90fa[196]] > 180) { _0xa80axe1[_$_90fa[196]] = 360 - _0xa80axe1[_$_90fa[196]] }; return this[_$_90fa[203]](_0xa80axe1) }; vector[_$_90fa[209]] = function (_0xa80axda) { return [_0xa80axda[_$_90fa[195]], _0xa80axda[_$_90fa[196]], _0xa80axda[_$_90fa[197]]] }; function normalize_yaw(_0xa80axe3) { var _0xa80axe4 = _0xa80axe3; if (_0xa80axe4 < -180) { _0xa80axe4 += 360 }; if (_0xa80axe4 > 180) { _0xa80axe4 -= 360 }; return _0xa80axe4 } var plugin = { _info: { _title: _$_90fa[210], _version: _$_90fa[211], _author: _$_90fa[212] }, last_hit_lby: [], last_target_visibility: false, override_flip: false, last_override_time: globals_curtime() }; const enable = menu[_$_90fa[179]](ui_add_checkbox, _$_90fa[210], _$_90fa[213], []); const body = menu[_$_90fa[179]](ui_add_dropdown, _$_90fa[214], _$_90fa[215], [[_$_90fa[216], _$_90fa[217]]]); const smart = menu[_$_90fa[179]](ui_add_checkbox, _$_90fa[218], _$_90fa[219], []); const flip = menu[_$_90fa[179]](ui_add_multi_dropdown, _$_90fa[220], _$_90fa[221], [[_$_90fa[222], _$_90fa[223], _$_90fa[224]]]); const ref_inverter = menu[_$_90fa[182]]([_$_90fa[12], _$_90fa[36], _$_90fa[225]]); const ref_bodyflip = menu[_$_90fa[182]]([_$_90fa[12], _$_90fa[36], _$_90fa[226]]); const ref_inverter_legit = menu[_$_90fa[182]]([_$_90fa[12], _$_90fa[227], _$_90fa[228]]); const ref_ragebot = menu[_$_90fa[182]]([_$_90fa[229], _$_90fa[230], _$_90fa[231], _$_90fa[37]]); function update_anti_aim_state(_0xa80axef) { if (menu[_$_90fa[183]](ref_ragebot)) { if (menu[_$_90fa[186]](ref_inverter) !== _0xa80axef) { menu[_$_90fa[190]](ref_inverter) }; return }; _0xa80axef = (_0xa80axef + 1) % 2; if (menu[_$_90fa[186]](ref_inverter_legit) !== _0xa80axef) { menu[_$_90fa[190]](ref_inverter_legit) } } function get_closest_target() { const _0xa80axf1 = entity_get_enemies(); const _0xa80axf2 = entity_get_local_player(); const _0xa80axd9 = { id: null, fov: 180 }; for (var _0xa80axd2 = 0; _0xa80axd2 < _0xa80axf1[_$_90fa[180]]; _0xa80axd2++) { const _0xa80axf3 = _0xa80axf1[_0xa80axd2]; const _0xa80axde = vector[_$_90fa[193]](entity_get_hitbox_position(_0xa80axf3, 0)), _0xa80axdd = vector[_$_90fa[193]](entity_get_eye_position(_0xa80axf2)); const _0xa80axe0 = vector[_$_90fa[193]](local_get_view_angles()); const _0xa80axf4 = vector[_$_90fa[207]](_0xa80axdd, _0xa80axde, _0xa80axe0); if (_0xa80axf4 < _0xa80axd9[_$_90fa[232]]) { _0xa80axd9[_$_90fa[233]] = _0xa80axf3; _0xa80axd9[_$_90fa[232]] = _0xa80axf4 } }; return _0xa80axd9[_$_90fa[233]] } function get_target_visibility() { const _0xa80axf6 = get_closest_target(); if (!_0xa80axf6 || !entity_is_valid(_0xa80axf6)) { return false }; if (entity_is_dormant(_0xa80axf6)) { return false }; const _0xa80axf2 = entity_get_local_player(); var _0xa80axdd = vector[_$_90fa[193]](entity_get_eye_position(_0xa80axf2)), _0xa80ax32 = vector[_$_90fa[193]](entity_get_prop(_0xa80axf2, _$_90fa[64], _$_90fa[65])), _0xa80axde = entity_get_hitbox_position(_0xa80axf6, 0); _0xa80ax32 = vector[_$_90fa[194]](_0xa80ax32, vector[_$_90fa[193]]([0.25, 0.25, 0.25]), _$_90fa[200]); _0xa80axdd = vector[_$_90fa[194]](_0xa80axdd, _0xa80ax32, _$_90fa[198]); const _0xa80axf7 = trace_line(_0xa80axf2, vector[_$_90fa[209]](_0xa80axdd), _0xa80axde)[0]; return _0xa80axf7 === _0xa80axf6 } function get_optimal_angle() { const _0xa80axf9 = menu[_$_90fa[183]](body); const _0xa80axf2 = entity_get_local_player(); const _0xa80axdd = vector[_$_90fa[193]](entity_get_render_origin(_0xa80axf2)); var _0xa80axfa = local_get_view_angles()[1]; var _0xa80axd9 = { left: 0, right: 0 }; for (var _0xa80axfb = _0xa80axfa - 90; _0xa80axfb <= _0xa80axfa + 90; _0xa80axfb += 30) { if (_0xa80axfb === _0xa80axfa) { continue }; const _0xa80axfc = _0xa80axfb * Math[_$_90fa[206]] / 180; const _0xa80axfd = vector[_$_90fa[194]](_0xa80axdd, vector[_$_90fa[193]]([256 * Math[_$_90fa[234]](_0xa80axfc), 256 * Math[_$_90fa[235]](_0xa80axfc), 0]), _$_90fa[198]); const _0xa80axfe = trace_line(_0xa80axf2, vector[_$_90fa[209]](_0xa80axdd), vector[_$_90fa[209]](_0xa80axfd)); const _0xa80axff = _0xa80axfb < _0xa80axfa ? _$_90fa[236] : _$_90fa[237]; _0xa80axd9[_0xa80axff] += _0xa80axfe[1] }; _0xa80axd9[_$_90fa[236]] /= 3; _0xa80axd9[_$_90fa[237]] /= 3; if (_0xa80axd9[_$_90fa[236]] > _0xa80axd9[_$_90fa[237]]) { return _0xa80axf9 === 0 ? 0 : 1 }; return _0xa80axf9 === 0 ? 1 : 0 } function update_inverter_flip() { if (!menu[_$_90fa[183]](flip)) { return }; const _0xa80axd7 = get_target_visibility(); const _0xa80ax101 = globals_curtime(); if (plugin[_$_90fa[238]] + 0.3 < _0xa80ax101) { plugin[_$_90fa[239]] = false }; if (_0xa80axd7 !== plugin[_$_90fa[240]]) { plugin[_$_90fa[239]] = true; plugin[_$_90fa[238]] = _0xa80ax101 }; plugin[_$_90fa[240]] = _0xa80axd7; if (plugin[_$_90fa[239]]) { menu[_$_90fa[188]](ref_bodyflip, 0); return }; menu[_$_90fa[188]](ref_bodyflip, menu[_$_90fa[183]](flip)) } function update_anti_aim() { const _0xa80axf2 = entity_get_local_player(); if (!entity_is_valid(_0xa80axf2) || !entity_is_alive(_0xa80axf2)) { return }; const _0xa80ax103 = menu[_$_90fa[183]](smart); update_inverter_flip(); if (_0xa80ax103) { const _0xa80axf6 = get_closest_target(); if (_0xa80axf6 == null) { update_anti_aim_state(get_optimal_angle()); return }; if (plugin[_$_90fa[241]][_0xa80axf6] == null) { update_anti_aim_state(get_optimal_angle()); return }; if (plugin[_$_90fa[241]][_0xa80axf6] === 0) { update_anti_aim_state(1); return }; update_anti_aim_state(0); return }; update_anti_aim_state(get_optimal_angle()) } function do_indicators() { const _0xa80axf2 = entity_get_local_player(); if (!entity_is_valid(_0xa80axf2) || !entity_is_alive(_0xa80axf2)) { return }; const _0xa80ax105 = render_get_screen_size()[1]; const _0xa80axfa = local_get_real_yaw(), _0xa80ax106 = local_get_fake_yaw(); var _0xa80axe1 = Math[_$_90fa[242]](normalize_yaw(_0xa80axfa - _0xa80ax106) / 2), _0xa80ax107 = Math[_$_90fa[208]](_0xa80axe1); if (menu[_$_90fa[183]](ref_ragebot)) { _0xa80axe1 *= -1 }; render_string(958, _0xa80ax105 - 485, 1, _0xa80ax107[_$_90fa[243]](), [232, 232, 232, 200], 3); render_circle(966, _0xa80ax105 - 483, 1, [232, 232, 232, 200]) } function on_tick() { if (!(menu[_$_90fa[183]](enable))) { return }; update_anti_aim() } function on_frame() { if (!(menu[_$_90fa[183]](enable))) { return }; do_indicators() } function on_player_hurt() { const _0xa80axf2 = entity_get_local_player(); const _0xa80ax10b = entity_get_entity_from_user_i_d(event_get_int(_$_90fa[244])); const _0xa80ax10c = entity_get_entity_from_user_i_d(event_get_int(_$_90fa[245])); if (_0xa80axf2 !== _0xa80ax10b && _0xa80axf2 === _0xa80ax10c) { plugin[_$_90fa[241]][_0xa80ax10b] = menu[_$_90fa[186]](ref_inverter) } } function reset() { plugin[_$_90fa[241]] = [] } cheat_register_callback(_$_90fa[99], _$_90fa[246]); cheat_register_callback(_$_90fa[98], _$_90fa[247]); cheat_register_callback(_$_90fa[248], _$_90fa[249]); cheat_register_callback(_$_90fa[250], _$_90fa[251]); function rotate_left(_0xa80ax10f, _0xa80ax110) { for (i = 0; i < _0xa80ax110; i++) { var _0xa80ax111 = _0xa80ax10f[_$_90fa[252]](0, 1); _0xa80ax10f = _0xa80ax10f[_$_90fa[252]](1); _0xa80ax10f += _0xa80ax111 }; return _0xa80ax10f } var old = _$_90fa[253]; var iLocalPlayer, iWeapon, iWeapon_name, loadFont = 0, fakelag, hitchance, mindamage, colors, lag_value = 0, switch_value = 0, framerate, fps, current_map, text_width; function HSVtoRGB(_0xa80ax122, _0xa80ax123, _0xa80ax124) { var _0xa80axfb, _0xa80ax125, _0xa80ax126, _0xa80axd2, _0xa80ax127, _0xa80ax128, _0xa80ax129, _0xa80ax12a; _0xa80axd2 = Math[_$_90fa[33]](_0xa80ax122 * 6); _0xa80ax127 = _0xa80ax122 * 6 - _0xa80axd2; _0xa80ax128 = _0xa80ax124 * (1 - _0xa80ax123); _0xa80ax129 = _0xa80ax124 * (1 - _0xa80ax127 * _0xa80ax123); _0xa80ax12a = _0xa80ax124 * (1 - (1 - _0xa80ax127) * _0xa80ax123); switch (_0xa80axd2 % 6) { case 0: _0xa80axfb = _0xa80ax124, _0xa80ax125 = _0xa80ax12a, _0xa80ax126 = _0xa80ax128; break; case 1: _0xa80axfb = _0xa80ax129, _0xa80ax125 = _0xa80ax124, _0xa80ax126 = _0xa80ax128; break; case 2: _0xa80axfb = _0xa80ax128, _0xa80ax125 = _0xa80ax124, _0xa80ax126 = _0xa80ax12a; break; case 3: _0xa80axfb = _0xa80ax128, _0xa80ax125 = _0xa80ax129, _0xa80ax126 = _0xa80ax124; break; case 4: _0xa80axfb = _0xa80ax12a, _0xa80ax125 = _0xa80ax128, _0xa80ax126 = _0xa80ax124; break; case 5: _0xa80axfb = _0xa80ax124, _0xa80ax125 = _0xa80ax128, _0xa80ax126 = _0xa80ax129; break }; return { r: Math[_$_90fa[242]](_0xa80axfb * 255), g: Math[_$_90fa[242]](_0xa80ax125 * 255), b: Math[_$_90fa[242]](_0xa80ax126 * 255) } } function getCustomValue(_0xa80axcd) { var _0xa80axd5 = UI[_$_90fa[25]](_$_90fa[254], _$_90fa[28], _$_90fa[62], _0xa80axcd); return _0xa80axd5; var position = { x1: -45, y1: 540 } } function HUD_REDRAW() { iLocalPlayer = Entity[_$_90fa[69]](); if (!Entity[_$_90fa[148]](iLocalPlayer)) { return }; iWeapon = Entity[_$_90fa[154]](iLocalPlayer); iWeapon_name = Entity[_$_90fa[153]](iWeapon); framerate = 1 / Global[_$_90fa[85]](); fps = Math[_$_90fa[33]](framerate); current_map = World[_$_90fa[89]](); if (fps > 300) { fps = 300 }; if (getCustomValue(_$_90fa[255])) { if (switch_value == 0) { if (lag_value >= 0) { lag_value += 1 * 0.25 }; if (lag_value == 16) { switch_value = 1 } }; if (switch_value == 1) { lag_value--; if (lag_value == 0) { switch_value = 0 } }; UI[_$_90fa[35]](_$_90fa[12], _$_90fa[46], _$_90fa[47], lag_value) }; if (loadFont == 0) { font = Render[_$_90fa[117]](_$_90fa[256], 8, 100); fontSmall = Render[_$_90fa[117]](_$_90fa[256], 6, 100); fontNormal = Render[_$_90fa[117]](_$_90fa[256], 7, 100); loadFont = 1 }; var position = { x1: -45, y1: 540 }; x = -45, y = 540; var _0xa80ax12e = 47; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[258], _$_90fa[37])) { _0xa80ax12e += 14 }; if (UI[_$_90fa[72]](_$_90fa[12], _$_90fa[71], _$_90fa[259], _$_90fa[37])) { _0xa80ax12e += 14 }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[260], _$_90fa[37])) { _0xa80ax12e += 14 }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[231], _$_90fa[261], _$_90fa[37])) { _0xa80ax12e += 14 }; var _0xa80ax12f = 197; Render[_$_90fa[111]](x + 45, y, _0xa80ax12f, _0xa80ax12e + 16, [40, 40, 40, 255]); Render[_$_90fa[111]](x + 50, y + 7, _0xa80ax12f - 11, _0xa80ax12e + 3, [19, 19, 19, 255]); Render[_$_90fa[110]](x + 50, y + 5, _0xa80ax12f - 10, _0xa80ax12e + 6, [50, 50, 50, 255]); _0xa80ax12f = 93; Render[_$_90fa[112]](x + 50, y + 5, _0xa80ax12f, 1, 1, [92, 89, 91, 255], [255, 255, 255, 255]); Render[_$_90fa[112]](x + 50 + _0xa80ax12f, y + 5, _0xa80ax12f, 1, 1, [252, 233, 246, 255], [171, 82, 142, 255]); Render[_$_90fa[119]](x + 71, y + 10, 1, _$_90fa[262], [255, 255, 255, 255], font); Render[_$_90fa[111]](x + 130, y + 29, 100, 5, [50, 50, 50, 255]); jitterOffset = UI[_$_90fa[25]](_$_90fa[12], _$_90fa[23], _$_90fa[26]); if (jitterOffset > 0) { Render[_$_90fa[112]](x + 130, y + 29, jitterOffset * 0.55, 5, 0, [255, 255, 255, 255], [191, 143, 179, 255]); Render[_$_90fa[119]](x + 130 + jitterOffset * 0.55, y + 29, 1, _$_90fa[253] + jitterOffset, [255, 255, 255, 255], fontSmall) } else { if (jitterOffset < 1) { Render[_$_90fa[112]](x + 130, y + 29, -jitterOffset * 0.55, 5, 0, [255, 255, 255, 255], [0, 0, 0, 50]); Render[_$_90fa[119]](x + 130 + -jitterOffset * 0.55, y + 29, 1, _$_90fa[253] + jitterOffset, [255, 255, 255, 255], fontSmall) } }; Render[_$_90fa[119]](x + 69, y + 24, 1, _$_90fa[263], [255, 255, 255, 255], font); Render[_$_90fa[111]](x + 130, y + 15, 100, 5, [50, 50, 50, 255]); yawOffset = UI[_$_90fa[25]](_$_90fa[12], _$_90fa[23], _$_90fa[24]); if (yawOffset > 0) { Render[_$_90fa[112]](x + 130, y + 15, yawOffset * 0.55, 5, 0, [255, 255, 255, 255], [191, 143, 179, 255]); Render[_$_90fa[119]](x + 130 + yawOffset * 0.55, y + 15, 1, _$_90fa[253] + yawOffset, [255, 255, 255, 255], fontSmall) } else { if (yawOffset < 1) { Render[_$_90fa[112]](x + 130, y + 15, -yawOffset * 0.55, 5, 0, [255, 255, 255, 255], [0, 0, 0, 50]); Render[_$_90fa[119]](x + 130 + -yawOffset * 0.55, y + 15, 1, _$_90fa[253] + yawOffset, [255, 255, 255, 255], fontSmall) } }; var _0xa80ax130 = function (_0xa80ax111) { return Math[_$_90fa[33]](0.5 + _0xa80ax111 / Globals[_$_90fa[83]]()) }; fakelag = _0xa80ax130(Globals[_$_90fa[84]]() - Entity[_$_90fa[66]](Entity[_$_90fa[69]](), _$_90fa[264], _$_90fa[265])) + 1; if (fakelag < 0) { fakelag = 0 }; if (fakelag > 16) { fakelag = 16 }; Render[_$_90fa[119]](x + 81, y + 38, 1, _$_90fa[266], [255, 255, 255, 255], font); Render[_$_90fa[111]](x + 130, y + 44, 100, 5, [50, 50, 50, 255]); Render[_$_90fa[112]](x + 130, y + 45, fakelag * 6.25, 5, 0, [255, 255, 255, 255], [191, 143, 179, 255]); Render[_$_90fa[119]](x + 130 + fakelag * 6.25, y + 45, 1, _$_90fa[253] + fakelag, [255, 255, 255, 255], fontSmall); if (iWeapon_name == _$_90fa[267]) { mindamage = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[268], _$_90fa[269], _$_90fa[270]); hitchance = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[268], _$_90fa[271], _$_90fa[272]) } else { if (iWeapon_name == _$_90fa[273]) { mindamage = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[274], _$_90fa[269], _$_90fa[270]); hitchance = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[274], _$_90fa[271], _$_90fa[272]) } else { if (iWeapon_name == _$_90fa[275] || iWeapon_name == _$_90fa[276]) { mindamage = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[277], _$_90fa[269], _$_90fa[270]); hitchance = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[277], _$_90fa[271], _$_90fa[272]) } else { if (iWeapon_name == _$_90fa[278] || iWeapon_name == _$_90fa[279]) { mindamage = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[280], _$_90fa[269], _$_90fa[270]); hitchance = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[280], _$_90fa[271], _$_90fa[272]) } else { if (iWeapon_name == _$_90fa[281] || iWeapon_name == _$_90fa[282] || iWeapon_name == _$_90fa[283] || iWeapon_name == _$_90fa[284] || iWeapon_name == _$_90fa[285] || iWeapon_name == _$_90fa[286]) { mindamage = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[287], _$_90fa[269], _$_90fa[270]); hitchance = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[287], _$_90fa[271], _$_90fa[272]) } else { mindamage = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[230], _$_90fa[269], _$_90fa[270]); hitchance = UI[_$_90fa[25]](_$_90fa[229], _$_90fa[230], _$_90fa[271], _$_90fa[272]) } } } } }; y -= 27; y -= 14; if (UI[_$_90fa[72]](_$_90fa[12], _$_90fa[71], _$_90fa[259], _$_90fa[37])) { Render[_$_90fa[119]](x + 86, y + 94, 1, _$_90fa[259], [255, 255, 255, 255], font) }; if (UI[_$_90fa[72]](_$_90fa[12], _$_90fa[71], _$_90fa[259], _$_90fa[37])) { Render[_$_90fa[119]](x + 218, y + 94, 1, _$_90fa[288], [255, 255, 255, 255], font) }; if (!UI[_$_90fa[72]](_$_90fa[12], _$_90fa[71], _$_90fa[259], _$_90fa[37])) { y -= 14 }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[260], _$_90fa[37])) { Render[_$_90fa[119]](x + 87, y + 108, 1, _$_90fa[260], [255, 255, 255, 255], font) }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[260], _$_90fa[37])) { Render[_$_90fa[119]](x + 218, y + 108, 1, _$_90fa[288], [255, 255, 255, 255], font) }; if (!UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[260], _$_90fa[37])) { y -= 14 }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[231], _$_90fa[261], _$_90fa[37])) { Render[_$_90fa[119]](x + 86, y + 122, 1, _$_90fa[289], [255, 255, 255, 255], font) }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[231], _$_90fa[261], _$_90fa[37])) { Render[_$_90fa[119]](x + 218, y + 122, 1, _$_90fa[288], [255, 255, 255, 255], font) }; if (!UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[231], _$_90fa[261], _$_90fa[37])) { y -= 14 }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[258], _$_90fa[37])) { Render[_$_90fa[119]](x + 87, y + 136, 1, _$_90fa[290], [255, 255, 255, 255], font) }; if (UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[258], _$_90fa[37])) { Render[_$_90fa[119]](x + 198, y + 136, 1, _$_90fa[291], [255, 255, 255, 255], font) }; if (!UI[_$_90fa[72]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[258], _$_90fa[37])) { y -= 14 } } function Main() { var _0xa80ax132 = Global[_$_90fa[91]](); 3; var position = { X: -45, Y: 619 } } Main(); Global[_$_90fa[52]](_$_90fa[50], _$_90fa[292]); hitboxes = [_$_90fa[293], _$_90fa[294], _$_90fa[295], _$_90fa[296], _$_90fa[297], _$_90fa[298], _$_90fa[299], _$_90fa[300], _$_90fa[301]]; function getHitboxName(_0xa80ax31) { return hitboxes[_0xa80ax31] || _$_90fa[302] } function hitlog() { me = Entity[_$_90fa[69]](); hitbox = Event[_$_90fa[132]](_$_90fa[303]); target_damage = Event[_$_90fa[132]](_$_90fa[304]); victim = Event[_$_90fa[132]](_$_90fa[245]); attacker = Event[_$_90fa[132]](_$_90fa[244]); victimIndex = Entity[_$_90fa[143]](victim); attackerIndex = Entity[_$_90fa[143]](attacker); name = Entity[_$_90fa[153]](victimIndex); var _0xa80ax135 = _$_90fa[305]; if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[306])) { if (me == attackerIndex && me != victimIndex) { if (UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[307])) { Global[_$_90fa[79]](_$_90fa[308] + _0xa80ax135 + _$_90fa[309] + _$_90fa[310] + name + _$_90fa[311] + target_damage + _$_90fa[312] + getHitboxName(hitbox)); Global[_$_90fa[77]](_$_90fa[313] + _0xa80ax135 + _$_90fa[309] + _$_90fa[310] + name + _$_90fa[311] + target_damage + _$_90fa[312] + getHitboxName(hitbox)) } else { Global[_$_90fa[77]](_$_90fa[313] + _0xa80ax135 + _$_90fa[309] + _$_90fa[310] + name + _$_90fa[311] + target_damage + _$_90fa[312] + getHitboxName(hitbox)) } } } } function main() { Global[_$_90fa[52]](_$_90fa[248], _$_90fa[314]) } main(); UI[_$_90fa[1]](_$_90fa[253], 0, 0); UI[_$_90fa[1]](_$_90fa[315], 0, 0); var alpha = 50; var up = true; function rainbowColors() { var _0xa80ax139 = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[316]); var _0xa80ax13a = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[317]); var _0xa80ax13b = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[318]); if (Entity[_$_90fa[148]](Entity[_$_90fa[69]]()) && _0xa80ax13a) { var _0xa80ax13c = Global[_$_90fa[81]](); if (oldTick > _0xa80ax13c + ticksToDelay * _0xa80ax13b) { oldTick = Global[_$_90fa[81]]() }; if (_0xa80ax13c > oldTick + (ticksToDelay * _0xa80ax13b)) { if (up) { alpha += 10 }; if (!up) { alpha -= 10 }; oldTick = Global[_$_90fa[81]]() }; if (alpha >= 255) { alpha = 255; up = false }; if (alpha <= _0xa80ax139) { alpha = _0xa80ax139; up = true }; tickcount = Global[_$_90fa[81]](); color = HSVtoRGB(tickcount % 350 / 350, 1, 1, 1, 255); UI[_$_90fa[129]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[319], [color[_$_90fa[320]], color[_$_90fa[321]], color[_$_90fa[322]], 50]) } } Global[_$_90fa[52]](_$_90fa[50], _$_90fa[323]); var observators = []; function getObservators() { var _0xa80ax13f = Entity[_$_90fa[139]](); var _0xa80ax140 = Entity[_$_90fa[69]](); var _0xa80ax141 = Entity[_$_90fa[66]](_0xa80ax140, _$_90fa[324], _$_90fa[325]); if (!_0xa80ax140) { return }; observators = []; for (i = 0; i < _0xa80ax13f[_$_90fa[180]]; i++) { if (Entity[_$_90fa[149]](_0xa80ax140)) { if (!_0xa80ax13f[i] || Entity[_$_90fa[149]](_0xa80ax13f[i])) { continue }; var _0xa80ax142 = Entity[_$_90fa[66]](_0xa80ax13f[i], _$_90fa[324], _$_90fa[325]); if (!_0xa80ax142 || _0xa80ax142 == _$_90fa[325]) { continue }; if (_0xa80ax142 == _0xa80ax140) { observators[_$_90fa[181]](Entity[_$_90fa[153]](_0xa80ax13f[i])) } } else { if (!_0xa80ax13f[i] || Entity[_$_90fa[149]](_0xa80ax13f[i])) { continue }; var _0xa80ax142 = Entity[_$_90fa[66]](_0xa80ax13f[i], _$_90fa[324], _$_90fa[325]); if (!_0xa80ax142 || _0xa80ax142 == _$_90fa[325]) { continue }; if (_0xa80ax142 == _0xa80ax141) { observators[_$_90fa[181]](Entity[_$_90fa[153]](_0xa80ax13f[i])) } } } } function drawObservators() { var _0xa80ax144 = Render[_$_90fa[91]](); var _0xa80ax145 = UI[_$_90fa[25]](_$_90fa[29], _$_90fa[326]); var _0xa80ax146 = Render[_$_90fa[117]](_$_90fa[256], 7, 150); for (i = 0; i < observators[_$_90fa[180]]; i++) { var _0xa80axcd = observators[i]; var _0xa80ax147 = Render[_$_90fa[122]](_0xa80axcd, _0xa80ax146); Render[_$_90fa[119]](_0xa80ax144[0] - _0xa80ax147[0] - 15, (i * 20) + 5, 0, _0xa80axcd, [255, 255, 255, 255], _0xa80ax146) } } function onRoundStart() { observators = [] } Global[_$_90fa[52]](_$_90fa[50], _$_90fa[327]); Global[_$_90fa[52]](_$_90fa[50], _$_90fa[328]); Global[_$_90fa[52]](_$_90fa[329], _$_90fa[330]); const fontpixel2 = Render[_$_90fa[117]](_$_90fa[256], 8, 100); var Xoffset = _$_90fa[331]; var Yoffset = _$_90fa[332]; UI[_$_90fa[1]](_$_90fa[333], 1, 14); UI[_$_90fa[1]](_$_90fa[334], 0, 3); UI[_$_90fa[54]](_$_90fa[335]); UI[_$_90fa[54]](_$_90fa[336]); UI[_$_90fa[1]](_$_90fa[336], 14, 20); UI[_$_90fa[1]](Xoffset, -1000, 2000); UI[_$_90fa[1]](Yoffset, -1000, 1000); function can_shift_shot(_0xa80ax14d) { var _0xa80axf2 = Entity[_$_90fa[69]](); var _0xa80ax14e = Entity[_$_90fa[154]](_0xa80axf2); if (_0xa80axf2 == null || _0xa80ax14e == null) { return false }; var _0xa80ax14f = Entity[_$_90fa[66]](_0xa80axf2, _$_90fa[337], _$_90fa[338]); var _0xa80ax150 = Globals[_$_90fa[83]]() * (_0xa80ax14f - _0xa80ax14d); if (_0xa80ax150 < Entity[_$_90fa[66]](_0xa80axf2, _$_90fa[337], _$_90fa[339])) { return false }; if (_0xa80ax150 < Entity[_$_90fa[66]](_0xa80ax14e, _$_90fa[340], _$_90fa[341])) { return false }; return true } function _TBC_CREATE_MOVE() { var _0xa80ax152 = Exploit[_$_90fa[168]](); var _0xa80ax153 = UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[334]); Exploit[(_0xa80ax152 != 1 ? _$_90fa[342] : _$_90fa[343]) + _$_90fa[169]](1); if (can_shift_shot(14) && _0xa80ax152 != 1) { Exploit[_$_90fa[170]](); Exploit[_$_90fa[169]]() }; Exploit[_$_90fa[344]](_0xa80ax153); Exploit[_$_90fa[345]](14 - _0xa80ax153) } function _TBC_UNLOAD() { Exploit[_$_90fa[171]]() } function _FrameNetUpdateStart() { Exploit[_$_90fa[345]](UI[_$_90fa[25]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[333])) } function speed_booster(_0xa80ax157) { if (me == null || wpn == null) { return false } } function dmg_in_shot() { var _0xa80ax159 = Local[_$_90fa[346]](); set(_0xa80ax159 > null); if (_0xa80ax159 == null) { return true }; var _0xa80ax15a = Entity[_$_90fa[66]](_0xa80ax159, _$_90fa[347], _$_90fa[348]); s; _0xa80ax15a = 50 % (_0xa80ax159, _$_90fa[347]); const _0xa80ax15b = check(_$_90fa[347], _$_90fa[245], _0xa80ax15c); var _0xa80ax15c = player_health } function proccesticktotake() { const _0xa80ax15e = onetap[_$_90fa[350]][_$_90fa[349]](applicationCache); if (_0xa80ax15e << 14) { ; }; return true } function Teleport() { UI[_$_90fa[352]](_$_90fa[27], _$_90fa[28], _$_90fa[29], _$_90fa[351], _$_90fa[37]); UI[_$_90fa[352]](_$_90fa[229], _$_90fa[230], _$_90fa[257], _$_90fa[353], _$_90fa[354], _$_90fa[37]); Teleport = 20(proccesticks); Exploit[_$_90fa[336]](reserve) } Cheat[_$_90fa[52]](_$_90fa[355], _$_90fa[356]); Cheat[_$_90fa[52]](_$_90fa[357], _$_90fa[253]); Cheat[_$_90fa[52]](_$_90fa[358], _$_90fa[359]); Cheat[_$_90fa[52]](_$_90fa[74], _$_90fa[360]); Cheat[_$_90fa[52]](_$_90fa[361], _$_90fa[362]); const global_choked_commands = Globals[_$_90fa[363]], global_realtime = Globals[_$_90fa[22]], global_frametime = Globals[_$_90fa[85]], global_curtime = Globals[_$_90fa[84]], global_tick_interval = Globals[_$_90fa[83]], global_tickrate = Globals[_$_90fa[82]], global_tickcount = Globals[_$_90fa[81]], global_frame_stage = Globals[_$_90fa[80]], ui_get_menu_position = UI[_$_90fa[364]], ui_update_list = UI[_$_90fa[365]], ui_remove_item = UI[_$_90fa[366]], ui_get_hotkey = UI[_$_90fa[367]], ui_set_hotkey_state = UI[_$_90fa[368]], ui_get_hotkey_state = UI[_$_90fa[369]], ui_toggle_hotkey = UI[_$_90fa[130]], ui_set_color = UI[_$_90fa[129]], ui_add_sub_tab = UI[_$_90fa[370]], ui_add_textbox = UI[_$_90fa[126]], ui_add_color_picker = UI[_$_90fa[125]], ui_add_multi_dropdown = UI[_$_90fa[60]], ui_add_dropdown = UI[_$_90fa[16]], ui_add_hotkey = UI[_$_90fa[124]], ui_add_slider_float = UI[_$_90fa[123]], ui_add_slider_int = UI[_$_90fa[1]], ui_add_checkbox = UI[_$_90fa[54]], ui_set_value = UI[_$_90fa[35]], ui_get_children = UI[_$_90fa[371]], ui_get_value = UI[_$_90fa[25]], ui_get_string = UI[_$_90fa[127]], ui_get_color = UI[_$_90fa[128]], ui_is_menu_open = UI[_$_90fa[131]], ui_set_enabled = UI[_$_90fa[63]], entity_draw_flag = Entity[_$_90fa[372]], entity_get_ccs_weapon_info = Entity[_$_90fa[373]], entity_get_render_box = Entity[_$_90fa[374]], entity_get_weapons = Entity[_$_90fa[155]], entity_get_entities_by_class_id = Entity[_$_90fa[138]], entity_get_hitbox_position = Entity[_$_90fa[158]], entity_get_eye_position = Entity[_$_90fa[375]], entity_get_game_rules_proxy = Entity[_$_90fa[142]], entity_is_bot = Entity[_$_90fa[146]], entity_get_weapon = Entity[_$_90fa[154]], entity_set_prop = Entity[_$_90fa[157]], entity_get_prop = Entity[_$_90fa[66]], entity_get_render_origin = Entity[_$_90fa[156]], entity_get_name = Entity[_$_90fa[153]], entity_get_class_name = Entity[_$_90fa[152]], entity_get_class_id = Entity[_$_90fa[151]], entity_is_dormant = Entity[_$_90fa[150]], entity_is_alive = Entity[_$_90fa[149]], entity_is_valid = Entity[_$_90fa[148]], entity_is_local_player = Entity[_$_90fa[147]], entity_is_enemy = Entity[_$_90fa[145]], entity_is_teammate = Entity[_$_90fa[144]], entity_get_entity_from_user_id = Entity[_$_90fa[143]], entity_get_local_player = Entity[_$_90fa[69]], entity_get_teammates = Entity[_$_90fa[141]], entity_get_enemies = Entity[_$_90fa[140]], entity_get_players = Entity[_$_90fa[139]], entity_get_entities = Entity[_$_90fa[137]], render_text_size = Render[_$_90fa[108]], render_string = Render[_$_90fa[107]], render_filled_circle = Render[_$_90fa[114]], render_textured_rect = Render[_$_90fa[120]], render_add_texture = Render[_$_90fa[121]], render_find_font = Render[_$_90fa[118]], render_add_font = Render[_$_90fa[117]], render_polygon = Render[_$_90fa[115]], render_gradient_rect = Render[_$_90fa[112]], render_get_screen_size = Render[_$_90fa[91]], render_world_to_screen = Render[_$_90fa[116]], render_circle = Render[_$_90fa[113]], render_filled_rect = Render[_$_90fa[111]], render_rect = Render[_$_90fa[110]], render_line = Render[_$_90fa[109]], convar_set_string = Convar[_$_90fa[136]], convar_get_string = Convar[_$_90fa[127]], convar_set_float = Convar[_$_90fa[135]], convar_get_float = Convar[_$_90fa[134]], convar_set_int = Convar[_$_90fa[133]], convar_get_int = Convar[_$_90fa[132]], event_get_string = Event[_$_90fa[127]], event_get_float = Event[_$_90fa[134]], event_get_int = Event[_$_90fa[132]], trace_raw_line = Trace[_$_90fa[376]], trace_smoke = Trace[_$_90fa[377]], trace_bullet = Trace[_$_90fa[160]], trace_line = Trace[_$_90fa[109]], usercmd_get_movement = UserCMD[_$_90fa[162]], usercmd_set_view_angles = UserCMD[_$_90fa[88]], usercmd_send = UserCMD[_$_90fa[378]], usercmd_choke = UserCMD[_$_90fa[379]], usercmd_set_buttons = UserCMD[_$_90fa[380]], usercmd_get_buttons = UserCMD[_$_90fa[381]], usercmd_set_movement = UserCMD[_$_90fa[161]], sound_stop_microphone = Sound[_$_90fa[95]], sound_play_microphone = Sound[_$_90fa[94]], sound_play = Sound[_$_90fa[97]], local_get_inaccuracy = Local[_$_90fa[105]], local_get_spread = Local[_$_90fa[104]], local_get_fake_yaw = Local[_$_90fa[103]], local_get_real_yaw = Local[_$_90fa[102]], local_set_clan_tag = Local[_$_90fa[96]], local_set_view_angles = Local[_$_90fa[88]], local_get_view_angles = Local[_$_90fa[87]], local_latency = Local[_$_90fa[86]], cheat_is_legit_config_active = Cheat[_$_90fa[382]], cheat_is_rage_config_active = Cheat[_$_90fa[383]], cheat_get_username = Cheat[_$_90fa[3]], cheat_print_chat = Cheat[_$_90fa[77]], cheat_register_callback = Cheat[_$_90fa[52]], cheat_execute_command = Cheat[_$_90fa[79]], cheat_print_color = Cheat[_$_90fa[78]], cheat_print = Cheat[_$_90fa[76]], input_force_cursor = Input[_$_90fa[384]], input_get_cursor_position = Input[_$_90fa[92]], input_is_key_pressed = Input[_$_90fa[90]], world_get_server_string = World[_$_90fa[106]], world_get_map_name = World[_$_90fa[89]], antiaim_set_lby_offset = AntiAim[_$_90fa[167]], antiaim_set_real_offset = AntiAim[_$_90fa[40]], antiaim_set_fake_offset = AntiAim[_$_90fa[39]], antiaim_get_override = AntiAim[_$_90fa[166]], antiaim_set_override = AntiAim[_$_90fa[38]], exploit_override_tolerance = Exploit[_$_90fa[344]], exploit_override_shift = Exploit[_$_90fa[345]], exploit_enable_recharge = Exploit[_$_90fa[171]], exploit_disable_recharge = Exploit[_$_90fa[170]], exploit_recharge = Exploit[_$_90fa[169]], exploit_get_charge = Exploit[_$_90fa[168]], ragebot_get_targets = Ragebot[_$_90fa[385]], ragebot_ignore_target = Ragebot[_$_90fa[386]], ragebot_force_hitbox_safety = Ragebot[_$_90fa[387]], ragebot_force_target_minimum_damage = Ragebot[_$_90fa[388]], ragebot_force_target_hitchance = Ragebot[_$_90fa[389]], ragebot_force_target_safety = Ragebot[_$_90fa[390]], ragebot_force_target = Ragebot[_$_90fa[391]], ragebot_get_target = Ragebot[_$_90fa[392]], material_refresh = Material[_$_90fa[393]], material_set_key_value = Material[_$_90fa[394]], material_get = Material[_$_90fa[395]], material_destroy = Material[_$_90fa[396]], material_create = Material[_$_90fa[397]]; var screen_size = render_get_screen_size(); var sv_cheats_cache = 0; var removals_cache = 0; UI[_$_90fa[1]](_$_90fa[253], 0, 0); UI[_$_90fa[1]](_$_90fa[398], 0, 0); UI[_$_90fa[54]](_$_90fa[399]); UI[_$_90fa[125]](_$_90fa[400]); UI[_$_90fa[1]](_$_90fa[401], 0, 500); UI[_$_90fa[1]](_$_90fa[402], 0, 500); function get_weapon(_0xa80ax18d) { if (entity_get_name(entity_get_weapon(_0xa80ax18d)) == _$_90fa[275] || entity_get_name(entity_get_weapon(_0xa80ax18d)) == _$_90fa[276]) { return _$_90fa[403] } else { if (entity_get_name(entity_get_weapon(_0xa80ax18d)) == _$_90fa[273]) { return _$_90fa[273] } else { if (entity_get_name(entity_get_weapon(_0xa80ax18d)) == _$_90fa[279]) { return _$_90fa[404] } else { if (entity_get_name(entity_get_weapon(_0xa80ax18d)) == _$_90fa[278]) { return _$_90fa[405] } else { if (entity_get_name(entity_get_weapon(_0xa80ax18d)) == _$_90fa[267]) { return _$_90fa[406] } else { return _$_90fa[407] } } } } } } function set_dropdown_value(_0xa80axd5, _0xa80ax31, enable) { var _0xa80ax18f = 1 << _0xa80ax31; return enable ? (_0xa80axd5 | _0xa80ax18f) : (_0xa80axd5 & ~_0xa80ax18f) } function draw() { var _0xa80ax191 = entity_get_local_player(); if (entity_is_alive(_0xa80ax191)) { if (ui_get_value(_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[399])) { var _0xa80ax192 = entity_get_prop(_0xa80ax191, _$_90fa[337], _$_90fa[408]); var _0xa80ax193 = ui_get_value(_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[402]); var _0xa80ax12e = ui_get_value(_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[401]); var _0xa80axd6 = ui_get_color(_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[400]); sv_cheats_cache = ui_get_value(_$_90fa[409], _$_90fa[230], _$_90fa[410], _$_90fa[411]); removals_cache = ui_get_value(_$_90fa[412], _$_90fa[413], _$_90fa[414], _$_90fa[415]); if (_0xa80ax192) { if (get_weapon(_0xa80ax191) == _$_90fa[403] || get_weapon(_0xa80ax191) == _$_90fa[273] || get_weapon(_0xa80ax191) == _$_90fa[406]) { ui_set_value(_$_90fa[409], _$_90fa[230], _$_90fa[410], _$_90fa[411], 1); convar_set_float(_$_90fa[416], 0); ui_set_value(_$_90fa[412], _$_90fa[413], _$_90fa[414], _$_90fa[415], set_dropdown_value(removals_cache, 2, false)); render_gradient_rect(screen_size[0] / 2 + _0xa80ax193, screen_size[1] / 2, _0xa80ax12e, 1, 1, [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], _0xa80axd6[3]], [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], 0]); render_gradient_rect(screen_size[0] / 2 - _0xa80ax12e - _0xa80ax193, screen_size[1] / 2, _0xa80ax12e, 1, 1, [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], 0], [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], _0xa80axd6[3]]); render_gradient_rect(screen_size[0] / 2, screen_size[1] / 2 + _0xa80ax193, 1, _0xa80ax12e, 0, [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], _0xa80axd6[3]], [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], 0]); render_gradient_rect(screen_size[0] / 2, screen_size[1] / 2 - _0xa80ax12e - _0xa80ax193, 1, _0xa80ax12e, 0, [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], 0], [_0xa80axd6[0], _0xa80axd6[1], _0xa80axd6[2], _0xa80axd6[3]]) } }; if (!_0xa80ax192) { convar_set_float(_$_90fa[416], 1); ui_set_value(_$_90fa[409], _$_90fa[230], _$_90fa[410], _$_90fa[411], 1); ui_set_value(_$_90fa[412], _$_90fa[413], _$_90fa[414], _$_90fa[415], set_dropdown_value(removals_cache, 2, true)) } } } else { convar_set_float(_$_90fa[416], 1) } } function unload() { convar_set_float(_$_90fa[416], 1); ui_set_value(_$_90fa[412], _$_90fa[413], _$_90fa[414], _$_90fa[415], set_dropdown_value(removals_cache, 2, true)); ui_set_value(_$_90fa[409], _$_90fa[230], _$_90fa[410], _$_90fa[411], sv_cheats_cache) } cheat_register_callback(_$_90fa[361], _$_90fa[417]); cheat_register_callback(_$_90fa[50], _$_90fa[418]);;;;; function hsv_to_rgb(_0xa80ax122, _0xa80ax123, _0xa80ax124) { var _0xa80axfb, _0xa80ax125, _0xa80ax126, _0xa80axd2, _0xa80ax127, _0xa80ax128, _0xa80ax129, _0xa80ax12a; return { r: Math[_$_90fa[242]](_0xa80axfb * 255), g: Math[_$_90fa[242]](_0xa80ax125 * 255), b: Math[_$_90fa[242]](_0xa80ax126 * 255) } } var position = { x1: 107, y1: 596 }; function draw_fatality_rect(_0xa80ax197, _0xa80ax105, _0xa80ax12f, _0xa80ax12e) { var _0xa80ax198 = hsv_to_rgb(Global[_$_90fa[22]]() * UI[_$_90fa[25]](_$_90fa[254], _$_90fa[28], _$_90fa[29], _$_90fa[419]), 1, 1) } function draw_fatality_rect2(_0xa80ax19a, _0xa80ax19b, _0xa80ax19c, _0xa80ax19d) { var _0xa80ax198 = hsv_to_rgb(Global[_$_90fa[22]]() * UI[_$_90fa[25]](_$_90fa[254], _$_90fa[28], _$_90fa[29], _$_90fa[419]), 1, 1); Render[_$_90fa[110]](_0xa80ax19a + 42, _0xa80ax19b + 2, _0xa80ax19c + 57, _0xa80ax19d + -10, [_0xa80ax198[_$_90fa[322]], _0xa80ax198[_$_90fa[320]], _0xa80ax198[_$_90fa[321]], 200]); Render[_$_90fa[111]](_0xa80ax19a + 43, _0xa80ax19b + 3, _0xa80ax19c + 57, _0xa80ax19d + -10, [40, 40, 40, 255]); Render[_$_90fa[111]](_0xa80ax19a + 49, _0xa80ax19b + 7, _0xa80ax19c - -45, _0xa80ax19d - 19, [30, 30, 30, 200]); Render[_$_90fa[110]](_0xa80ax19a + 48, _0xa80ax19b + 6, _0xa80ax19c - -46, _0xa80ax19d + -17, [_0xa80ax198[_$_90fa[322]], _0xa80ax198[_$_90fa[320]], _0xa80ax198[_$_90fa[321]], 200]) } function draw_fatality_rect3(_0xa80ax19f, _0xa80ax1a0, _0xa80ax1a1, _0xa80ax1a2) { } function draw_gs_watermark() { var _0xa80ax198 = hsv_to_rgb(Global[_$_90fa[22]]() * UI[_$_90fa[25]](_$_90fa[254], _$_90fa[28], _$_90fa[29], _$_90fa[419]), 1, 1); var _0xa80ax1a4 = 1 / Global[_$_90fa[85]](); var fps = Math[_$_90fa[33]](_0xa80ax1a4); var _0xa80ax1a5 = Entity[_$_90fa[153]](Entity[_$_90fa[69]]()); var _0xa80ax1a6 = new Date(); var _0xa80ax1a7 = _0xa80ax1a6[_$_90fa[420]]() + _$_90fa[421] + _0xa80ax1a6[_$_90fa[422]]() + _$_90fa[421] + _0xa80ax1a6[_$_90fa[423]](); x1 = 107; y1 = 515; draw_fatality_rect(x1, y1, 40, 35); draw_fatality_rect2(x1 - 150, y1, 140, 35); draw_fatality_rect3(x1 - 300, y1, 140, 35); Render[_$_90fa[107]](x1 + -70, y1 + 10, 0, _$_90fa[424], [191, 143, 179, 255], 8); Render[_$_90fa[107]](x1 + -93, y1 + 10, 0, _$_90fa[425], [255, 255, 255, 255], 8); Render[_$_90fa[107]](x1 + -40, y1 + 10, 0, _$_90fa[426], [255, 255, 255, 255], 8); Render[_$_90fa[107]](x1 - 32, y1 + 10, 0, _$_90fa[253] + fps, [191, 143, 179, 255], 8); Render[_$_90fa[107]](x1 - 7, y1 + 10, 0, _$_90fa[427], [255, 255, 255, 255], 8); Render[_$_90fa[107]](x1 + 18, y1 + 10, 0, _$_90fa[428] + _0xa80ax1a7, [255, 255, 255, 255], 8) } main(); Global[_$_90fa[52]](_$_90fa[50], _$_90fa[429]); UI[_$_90fa[1]](_$_90fa[0], 0, 0); UI[_$_90fa[1]](_$_90fa[430], 0, 0); UI[_$_90fa[123]](_$_90fa[431], 1.0, 2.0); UI[_$_90fa[5]](_$_90fa[432]); UI[_$_90fa[54]](_$_90fa[433]); UI[_$_90fa[54]](_$_90fa[434]); var aspect_cache = 0; function aspect() { var _0xa80ax1aa = UI[_$_90fa[25]](_$_90fa[431]); var _0xa80ax1ab = UI[_$_90fa[25]](_$_90fa[433]); var _0xa80ax1ac = UI[_$_90fa[25]](_$_90fa[434]); if (_0xa80ax1ab != 0) { UI[_$_90fa[35]](_$_90fa[431], 1.33333333); UI[_$_90fa[35]](_$_90fa[433], 0) }; if (_0xa80ax1ac != 0) { UI[_$_90fa[35]](_$_90fa[431], 1.77777777); UI[_$_90fa[35]](_$_90fa[434], 0) }; if (aspect_cache != _0xa80ax1aa) { aspect_cache = _0xa80ax1aa; UI[_$_90fa[35]](_$_90fa[27], _$_90fa[230], _$_90fa[410], _$_90fa[435], 1); Global[_$_90fa[79]](_$_90fa[436] + _0xa80ax1aa) } } Cheat[_$_90fa[52]](_$_90fa[74], _$_90fa[437]); UI[_$_90fa[1]](_$_90fa[0], 0, 0); UI[_$_90fa[1]](_$_90fa[438], 0, 0); function drawString() { selectedcp = UI[_$_90fa[128]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[439]); selected_red = selectedcp[0]; selected_green = selectedcp[1]; selected_blue = selectedcp[2]; selected_alpha = selectedcp[3]; const alpha = Math[_$_90fa[235]](Math[_$_90fa[208]](-Math[_$_90fa[206]] + (Globals[_$_90fa[84]]() * (1 / 0.75)) % (Math[_$_90fa[206]] * 2))) * 255; const _0xa80ax1ae = Math[_$_90fa[235]](Math[_$_90fa[208]](-Math[_$_90fa[206]] + (Globals[_$_90fa[84]]() * (1 / 2)) % (Math[_$_90fa[206]] * 2))) * 255; isHideshots = UI[_$_90fa[72]](_$_90fa[229], _$_90fa[257], _$_90fa[260]); isFakeduck = UI[_$_90fa[72]](_$_90fa[12], _$_90fa[71], _$_90fa[259]); isDoubletap = UI[_$_90fa[72]](_$_90fa[229], _$_90fa[257], _$_90fa[258]); isInverted = UI[_$_90fa[72]](_$_90fa[12], _$_90fa[36], _$_90fa[225]); isLbyMode = UI[_$_90fa[25]](_$_90fa[12], _$_90fa[36], _$_90fa[43]); isDesyncMode = UI[_$_90fa[25]](_$_90fa[12], _$_90fa[36], _$_90fa[41]); localplayer_index = Entity[_$_90fa[69]](); localplayer_alive = Entity[_$_90fa[149]](localplayer_index); if (localplayer_alive == true) { Render[_$_90fa[107]](screen_size[0] / 2 + 1, screen_size[1] / 2 + 41, 12, _$_90fa[13], [0, 0, 0, 255], 8); Render[_$_90fa[107]](screen_size[0] / 2, screen_size[1] / 2 + 40, 12, _$_90fa[13], [191, 143, 179, 255], 8) } } function onCreateMove() { isLeftActive = UI[_$_90fa[72]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[440]); isRightActive = UI[_$_90fa[72]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[441]); isBackActive = UI[_$_90fa[72]](_$_90fa[27], _$_90fa[28], _$_90fa[62], _$_90fa[442]); if (isLeftActive) { drawLeft = 0; drawBack = 0; drawRight = 0; UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], -90); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[443], _$_90fa[216], false) } else { if (isRightActive) { drawLeft = 0; drawBack = 0; drawRight = 0; UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], 90); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[443], _$_90fa[216], false) } else { if (isBackActive) { drawLeft = 0; drawBack = 0; drawRight = 0; UI[_$_90fa[35]](_$_90fa[12], _$_90fa[23], _$_90fa[24], 0); UI[_$_90fa[35]](_$_90fa[12], _$_90fa[443], _$_90fa[216], false) } } } } function Main() { Global[_$_90fa[52]](_$_90fa[50], _$_90fa[444]); Global[_$_90fa[52]](_$_90fa[74], _$_90fa[445]) } Main()