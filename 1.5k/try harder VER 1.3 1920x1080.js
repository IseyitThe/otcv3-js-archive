var _0x2205 = ['tec\x209', 'Accuracy', 'ForceTargetSafety', 'flip\x20knife', 'Left\x20thigh', 'OnHurt', 'desert\x20eagle', 'GetServerString', 'CBaseEntity', '\x20damage\x20(', 'vgui/white', 'mag\x207', 'fog_end', 'IsKeyPressed', 'CDecoyGrenade', 'molotov', 'sg\x20553', 'GetValue', 'awp', 'player_hurt', 'LEFT', 'Left\x20upper\x20arm', 'Minimum\x20damage', 'ursus\x20knife', 'Anti-Aim', 'reset_miss_logs', 'getSeconds', 'General', 'Right\x20forearm', 'OnBulletImpact', 'main', 'fog_color', 'sin', 'LBY\x20mode', 'Vibrancy\x20', '\x20options', 'Minimum\x20damage\x20override', 'm_flNextPrimaryAttack', 'CHEGrenade', 'SetValue', 'firstLayer', 'Tickbase_x', 'TextSize', 'AddSliderInt', 'xm1014', 'Exploits', 'mp9', 'bowie\x20knife', 'RegisterCallback', 'GradientRect', 'materialUpdate', 'ms\x20|\x20', 'Tickcount', 'falchion\x20knife', 'm_iPing', 'floor', 'SetKeyValue', 'survival\x20knife', 'Right\x20foot', 'g3sg1', 'FAKE', 'm_vecOrigin', 'AddHotkey', 'SCOUT', 'drawString', 'userid', 'Pulse', 'toUpperCase', 'toLowerCase', 'Left\x20hand', 'CSmokeGrenade', 'GetColor', 'player_connect_full', '\x20in\x20the\x20', 'length', 'galil\x20ar', 'ragebot_fire', 'm4a1\x20s', 'Left\x20calf', 'draw', 'CWeaponSSG08', 'negev', 'Refresh', 'aug', 'GetName', 'CMolotovGrenade', 'usp\x20s', 'm249', 'Latency', 'fog_override', 'Wireframe', 'Rage\x20Anti-Aim', 'huntsman\x20knife', 'TextSizeCustom', 'Left\x20foot', 'String', 'Chest', 'attacker', 'Left\x20forearm', 'on_cm', 'text', 'CWeaponAWP', 'DMG', 'toString', 'flashbang', 'SetString', 'Rainbow', 'FilledRect', 'r_aspectratio\x20', 'Hitboxes', 'CKnife', 'incendiary\x20grenade', 'StringCustom', 'Doubletap\x20|\x20tickbase(v):\x207', 'hitbox', '$alpha', 'ssg\x2008', 'Right\x20calf', 'AddSliderFloat', 'onUnload', 'AUTOSNIPER', 'Right\x20hand', 'Tickbase_y', 'main_dt', 'HEAVY\x20PISTOL', 'skeleton\x20knife', 'JAVASCRIPT', 'Scout\x20Mindmg', 'Doubletap\x20|\x20tickbase(v):\x200', 'cl_drawhud', 'Hide\x20shots', 'talon\x20knife', 'SetColor', 'Heavy\x20Pistol\x20Mindmg', 'Frametime', 'abs', '\x20health\x20remaining', 'Safety\x20after\x20x\x20misses', 'onetap.com\x20|\x20', 'number', 'push', 'Hitlog\x20Color', 'CFlashbang', 'delay', 'stiletto\x20knife', 'GetFakeYaw', 'tick\x20|\x20', 'Doubletap\x20|\x20tickbase(v):\x2016', 'Realtime', 'Color\x20correction', 'Fake\x20angles', '$envmaptint', 'round', 'FAKE\x20DUCK', 'Misc', 'Anti\x20Bruteforce', 'GENERAL', 'PISTOL', 'Tint', 'On\x20Hit', 'onDraw', 'player_connect', 'five\x20seven', 'GetEntityFromUserID', 'r8\x20revolver', 'MISC', 'target_index', '$additive', 'Script\x20Items', '\x20chams', 'Curtime', 'bullet', 'Unload', 'Get', 'navaja\x20knife', '$envmapfresnelminmaxexp', 'mp7', 'secondLayer', 'aspect', 'DISCORD.GG/xBHzt5T', 'GetWeapon', 'Aspect\x20Ratio', 'Hide\x20real\x20angle', 'AWP', 'onRagebotFire', 'bayonet', 'GetClassName', 'CreateMove', 'cz75\x20auto', 'AddFont', 'TRY\x20HARDER\x20JS', '$baseTexture', 'ToggleHotkey', 'Targeting', '(fakeduck)', 'Rage', 'AddCheckbox', 'high\x20explosive\x20grenade', 'substring', 'fog_maxdensity', 'nomad\x20knife', 'Distance', 'AWP\x20Mindmg', 'Color', 'gut\x20knife', 'Safe\x20AWP', 'max', 'Tickrate', 'HIDESHOT', 'ump\x2045', 'bullet_impact', '\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Tickbase\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20', 'IsHotkeyActive', 'At\x20targets', 'Thorax', 'HIDE\x20SHOTS', 'm9\x20bayonet', 'player_death', 'Script\x20items', '16:9\x20mode', 'AddMultiDropdown', 'Upper\x20chest', 'Intensity', 'CBaseCombatWeapon', 'm_bIsScoped', 'GetString', '1.33\x20is\x204:3\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x201.77\x20is\x2016:9', 'hitgroup', 'CC4', 'Right\x20thigh', 'Watermark', 'GetEyePosition', 'knife', 'r_3dsky', 'getMinutes', 'sqrt', 'exploit', 'getHours', 'round_start', 'GetLocalPlayer', 'Head', 'DT\x20', 'Auto\x20stop\x20mode', 'Verdana', 'GetScreenSize', 'Extra', 'AddLabel', 'RIGHT', 'Enable\x20color\x20enhancement', 'Auto\x20Mindmg', 'Draw', 'GetTarget', '$envmapfresnel', 'AddColorPicker', 'GetInt', 'Doubletap', 'Better\x20glow', 'CWeaponTaser', 'Right\x20upper\x20arm', 'dual\x20berettas', 'safepoint', 'Pelvis', 'Force\x20safe\x20point', 'onCreateMove', 'IsDormant', 'CIncendiaryGrenade', 'smoke\x20grenade', 'SetEnabled', 'DT\x20(fakeduck)', 'Miscellaneous', '\x20for\x20', 'GetCursorPosition', 'Head\x20override\x20key', 'GetCharge', 'splice', 'GetProp', 'sawed\x20off', 'on_player_death', 'Fog\x20correction', 'scar\x2020', 'min', 'GetFloat', '4:3\x20mode']; (function (_0x56acce, _0x2205a7) { var _0x978dfa = function (_0x1aa18d) { while (--_0x1aa18d) { _0x56acce['push'](_0x56acce['shift']()); } }; _0x978dfa(++_0x2205a7); }(_0x2205, 0x13d)); var _0x978d = function (_0x56acce, _0x2205a7) { _0x56acce = _0x56acce - 0x0; var _0x978dfa = _0x2205[_0x56acce]; return _0x978dfa; }; var _0xfaa9c5 = _0x978d, restore_values = ![]; function override_mindmg() { var _0x485c2a = _0x978d; if (!isActive('Minimum\x20damage\x20override')) { restore_values ? (restore_values = ![], setValue(_0x485c2a('0x5a'), heavy_cache), setValue('SCOUT', scout_cache), setValue(_0x485c2a('0x95'), awp_cache), setValue('AUTOSNIPER', auto_cache)) : (heavy_cache = UI[_0x485c2a('0x10a')](_0x485c2a('0xa1'), _0x485c2a('0x5a'), _0x485c2a('0x9f'), 'Minimum\x20damage'), scout_cache = UI[_0x485c2a('0x10a')]('Rage', _0x485c2a('0x1d'), _0x485c2a('0x9f'), _0x485c2a('0x10f')), awp_cache = UI[_0x485c2a('0x10a')]('Rage', _0x485c2a('0x95'), _0x485c2a('0x9f'), _0x485c2a('0x10f')), auto_cache = UI[_0x485c2a('0x10a')](_0x485c2a('0xa1'), _0x485c2a('0x56'), _0x485c2a('0x9f'), _0x485c2a('0x10f'))); return; } restore_values = !![], heavy_value = UI[_0x485c2a('0x10a')](_0x485c2a('0xb8'), _0x485c2a('0x63')), scout_value = UI[_0x485c2a('0x10a')](_0x485c2a('0xb8'), _0x485c2a('0x5d')), awp_value = UI[_0x485c2a('0x10a')]('Script\x20items', _0x485c2a('0xa8')), auto_value = UI['GetValue']('Script\x20items', _0x485c2a('0xd7')), weapon_name = Entity[_0x485c2a('0x32')](Entity[_0x485c2a('0x92')](Entity['GetLocalPlayer']())), isHeavyPistol(weapon_name) && setValue(_0x485c2a('0x5a'), heavy_value), weapon_name == 'ssg\x2008' && setValue(_0x485c2a('0x1d'), scout_value), weapon_name == _0x485c2a('0x10b') && setValue(_0x485c2a('0x95'), awp_value), isAutoSniper(weapon_name) && setValue(_0x485c2a('0x56'), auto_value); } var oldTick = 0x0, lastPressed = 0x0, isHideRealActive = ![]; function onCreateMove() { var _0x115dfd = _0x978d; override_mindmg(), isHideRealActive && (Global[_0x115dfd('0x12')]() > oldTick + 0x10 && (backWasPressed = ![], rightWasPressed = ![], leftWasPressed = ![], upWasPressed = ![], oldTick = Global['Tickcount']()), drawLeft = 0x0, drawBack = 0x0, drawRight = 0x0, UI['SetValue'](_0x115dfd('0x111'), _0x115dfd('0x39'), 'Yaw\x20offset', -0x6), UI['SetValue'](_0x115dfd('0x111'), _0x115dfd('0x74'), _0x115dfd('0x94'), ![])), UI['SetValue'](_0x115dfd('0x111'), 'Rage\x20Anti-Aim', _0x115dfd('0xb3'), isHideRealActive ? !![] : ![]); } function player_connect() { var _0x2e598a = _0x978d; lastPressed = Global[_0x2e598a('0x12')](), oldTick = Global[_0x2e598a('0x12')](); } function Main() { var _0x3b09b5 = _0x978d; UI[_0x3b09b5('0xa2')](_0x3b09b5('0xab')), UI['AddHotkey'](_0x3b09b5('0x2')), UI[_0x3b09b5('0x9')]('Heavy\x20Pistol\x20Mindmg', 0x0, 0x82), UI['AddSliderInt']('Scout\x20Mindmg', 0x0, 0x82), UI[_0x3b09b5('0x9')](_0x3b09b5('0xa8'), 0x0, 0x82), UI['AddSliderInt']('Auto\x20Mindmg', 0x0, 0x82), Global[_0x3b09b5('0xe')](_0x3b09b5('0xd8'), _0x3b09b5('0x1e')), Global[_0x3b09b5('0xe')](_0x3b09b5('0x99'), _0x3b09b5('0xe5')), Global['RegisterCallback'](_0x3b09b5('0x26'), _0x3b09b5('0x7f')); } var waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1, misses = [0x40], safety_ents = [0x40]; reset_miss_logs(), UI[_0xfaa9c5('0x9')]('Safety\x20after\x20x\x20misses', 0x1, 0x6); function on_ragebot_fire() { var _0x15dcf0 = _0xfaa9c5; waiting_for_hit = !![], target_idx = Event[_0x15dcf0('0xdc')](_0x15dcf0('0x84')), tick_count = Globals['Tickcount'](); } function on_player_hurt() { var _0x480783 = _0xfaa9c5, _0x1aa18d = Entity[_0x480783('0x81')](Event[_0x480783('0xdc')](_0x480783('0x1f'))); if (_0x1aa18d == Entity['GetLocalPlayer']()) return; var _0x385480 = Entity[_0x480783('0x81')](Event['GetInt']('attacker')); if (_0x385480 != Entity[_0x480783('0xcd')]()) return; if (_0x1aa18d != target_idx) return; waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1; } function on_create_move() { var _0x320c3a = _0xfaa9c5, _0x20e5dc = 0x3e8 / Globals[_0x320c3a('0xad')](), _0x366b2e = 0x1 + Math['ceil'](Local[_0x320c3a('0x36')]() * 0x2 / _0x20e5dc); Globals[_0x320c3a('0x12')]() - tick_count >= _0x366b2e && waiting_for_hit && (misses[target_idx]++, misses[target_idx] >= UI[_0x320c3a('0x10a')](_0x320c3a('0x78'), _0x320c3a('0x5c'), _0x320c3a('0xb8'), _0x320c3a('0x67')) && (safety_ents[target_idx] = 0x1), waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1); var _0xb03fa7 = Ragebot[_0x320c3a('0xd9')](); if (_0xb03fa7 == 0x0) return; safety_ents[_0xb03fa7] == 0x1 && Ragebot[_0x320c3a('0xfb')](_0xb03fa7); } function on_player_death() { var _0x2d9a50 = _0xfaa9c5, _0x49d0e9 = Entity[_0x2d9a50('0x81')](Event[_0x2d9a50('0xdc')](_0x2d9a50('0x1f'))); reset_specific_miss_logs(_0x49d0e9); } function reset_miss_logs() { for (var _0x5bd554 = 0x0; _0x5bd554 < 0x40; _0x5bd554++) { reset_specific_miss_logs(_0x5bd554); } } function reset_specific_miss_logs(_0x3541c5) { misses[_0x3541c5] = 0x0, safety_ents[_0x3541c5] = 0x0; } Cheat[_0xfaa9c5('0xe')](_0xfaa9c5('0x2a'), 'on_ragebot_fire'), Cheat['RegisterCallback'](_0xfaa9c5('0x10c'), 'on_player_hurt'), Cheat['RegisterCallback'](_0xfaa9c5('0x99'), 'on_create_move'), Cheat[_0xfaa9c5('0xe')](_0xfaa9c5('0xb7'), _0xfaa9c5('0xf3')), Cheat[_0xfaa9c5('0xe')](_0xfaa9c5('0xcc'), _0xfaa9c5('0x112')), UI['AddDropdown'](_0xfaa9c5('0x79'), ['Off', _0xfaa9c5('0x7d'), 'On\x20Shot']); function GetScriptOption(_0x2d27b3) { var _0x2a2822 = _0xfaa9c5, _0x3dcf89 = UI['GetValue'](_0x2a2822('0x78'), 'JAVASCRIPT', _0x2a2822('0xb8'), _0x2d27b3); return _0x3dcf89; } function radian(_0x2e3540) { return _0x2e3540 * Math['PI'] / 0xb4; } function ExtendVector(_0x278324, _0x22be21, _0x146e0e) { var _0x19d61f = radian(_0x22be21); return [_0x146e0e * Math['cos'](_0x19d61f) + _0x278324[0x0], _0x146e0e * Math['sin'](_0x19d61f) + _0x278324[0x1], _0x278324[0x2]]; } function VectorAdd(_0x8fe8ff, _0x55ae9d) { return [_0x8fe8ff[0x0] + _0x55ae9d[0x0], _0x8fe8ff[0x1] + _0x55ae9d[0x1], _0x8fe8ff[0x2] + _0x55ae9d[0x2]]; } function VectorSubtract(_0xfbacd, _0x28c620) { return [_0xfbacd[0x0] - _0x28c620[0x0], _0xfbacd[0x1] - _0x28c620[0x1], _0xfbacd[0x2] - _0x28c620[0x2]]; } function VectorMultiply(_0x1ca668, _0x3cff0c) { return [_0x1ca668[0x0] * _0x3cff0c[0x0], _0x1ca668[0x1] * _0x3cff0c[0x1], _0x1ca668[0x2] * _0x3cff0c[0x2]]; } function VectorLength(_0xac4cce, _0x9a6a24, _0x3cb1e4) { var _0x26de79 = _0xfaa9c5; return Math[_0x26de79('0xc9')](_0xac4cce * _0xac4cce + _0x9a6a24 * _0x9a6a24 + _0x3cb1e4 * _0x3cb1e4); } function VectorNormalize(_0x2a4ce4) { var _0x3506ac = VectorLength(_0x2a4ce4[0x0], _0x2a4ce4[0x1], _0x2a4ce4[0x2]); return [_0x2a4ce4[0x0] / _0x3506ac, _0x2a4ce4[0x1] / _0x3506ac, _0x2a4ce4[0x2] / _0x3506ac]; } function VectorDot(_0x5840e2, _0x3224cd) { return _0x5840e2[0x0] * _0x3224cd[0x0] + _0x5840e2[0x1] * _0x3224cd[0x1] + _0x5840e2[0x2] * _0x3224cd[0x2]; } function VectorDistance(_0x3af65c, _0x2e9500) { return VectorLength(_0x3af65c[0x0] - _0x2e9500[0x0], _0x3af65c[0x1] - _0x2e9500[0x1], _0x3af65c[0x2] - _0x2e9500[0x2]); } function ClosestPointOnRay(_0x3f212f, _0x1f8d34, _0x12f1c4) { var _0x5e3e7f = VectorSubtract(_0x3f212f, _0x1f8d34), _0x10c65e = VectorSubtract(_0x12f1c4, _0x1f8d34), _0x1b47e2 = VectorLength(_0x10c65e[0x0], _0x10c65e[0x1], _0x10c65e[0x2]); _0x10c65e = VectorNormalize(_0x10c65e); var _0x26d870 = VectorDot(_0x10c65e, _0x5e3e7f); if (_0x26d870 < 0x0) return _0x1f8d34; if (_0x26d870 > _0x1b47e2) return _0x12f1c4; return VectorAdd(_0x1f8d34, VectorMultiply(_0x10c65e, [_0x26d870, _0x26d870, _0x26d870])); } function Flip() { var _0x2480cc = _0xfaa9c5; UI[_0x2480cc('0x9e')](_0x2480cc('0x111'), _0x2480cc('0x74'), 'Inverter'); } var lastHitTime = 0x0, lastImpactTimes = [0x0], lastImpacts = [[0x0, 0x0, 0x0]]; function OnHurt() { var _0x177c9c = _0xfaa9c5; if (GetScriptOption('Anti\x20Bruteforce') == 0x0) return; if (Entity[_0x177c9c('0x81')](Event[_0x177c9c('0xdc')](_0x177c9c('0x1f'))) !== Entity[_0x177c9c('0xcd')]()) return; var _0x4ba74e = Event['GetInt']('hitgroup'); if (_0x4ba74e == 0x1 || _0x4ba74e == 0x6 || _0x4ba74e == 0x7) { var _0x1f638b = Global[_0x177c9c('0x88')](); Math[_0x177c9c('0x65')](lastHitTime - _0x1f638b) > 0.5 && (lastHitTime = _0x1f638b, Flip()); } } function OnBulletImpact() { var _0x338ec0 = _0xfaa9c5; if (GetScriptOption('Anti\x20Bruteforce') !== 0x2) return; var _0x138449 = Global['Curtime'](); if (Math[_0x338ec0('0x65')](lastHitTime - _0x138449) < 0.5) return; var _0x4a745b = Entity['GetEntityFromUserID'](Event[_0x338ec0('0xdc')](_0x338ec0('0x1f'))), _0x1275af = [Event[_0x338ec0('0xf7')]('x'), Event[_0x338ec0('0xf7')]('y'), Event[_0x338ec0('0xf7')]('z'), _0x138449], _0xd42f31; if (Entity['IsValid'](_0x4a745b) && Entity['IsEnemy'](_0x4a745b)) { if (!Entity[_0x338ec0('0xe6')](_0x4a745b)) _0xd42f31 = Entity['GetEyePosition'](_0x4a745b); else { if (Math[_0x338ec0('0x65')](lastImpactTimes[_0x4a745b] - _0x138449) < 0.1) _0xd42f31 = lastImpacts[_0x4a745b]; else { lastImpacts[_0x4a745b] = _0x1275af, lastImpactTimes[_0x4a745b] = _0x138449; return; } } var _0xf12c0d = Entity[_0x338ec0('0xcd')](), _0x2726de = Entity[_0x338ec0('0xc5')](_0xf12c0d), _0x996154 = Entity[_0x338ec0('0xf1')](_0xf12c0d, _0x338ec0('0x101'), _0x338ec0('0x1b')), _0x201d92 = VectorMultiply(VectorAdd(_0x2726de, _0x996154), [0.5, 0.5, 0.5]), _0x38e342 = ClosestPointOnRay(_0x201d92, _0xd42f31, _0x1275af), _0x2f5292 = VectorDistance(_0x201d92, _0x38e342); if (_0x2f5292 < 0x55) { var _0x57b085 = Local['GetRealYaw'](), _0x2a2dcf = Local[_0x338ec0('0x6f')](), _0x19903d = ClosestPointOnRay(_0x2726de, _0xd42f31, _0x1275af), _0x335d05 = VectorDistance(_0x2726de, _0x19903d), _0x4e6667 = ClosestPointOnRay(_0x996154, _0xd42f31, _0x1275af), _0x193328 = VectorDistance(_0x996154, _0x4e6667), _0x3b0cd7, _0x2547aa, _0xd33021; if (_0x2f5292 < _0x335d05 && _0x2f5292 < _0x193328) _0x3b0cd7 = _0x38e342, _0x2547aa = ExtendVector(_0x38e342, _0x57b085 + 0xb4, 0xa), _0xd33021 = ExtendVector(_0x38e342, _0x2a2dcf + 0xb4, 0xa); else { if (_0x193328 < _0x335d05) { _0x3b0cd7 = _0x4e6667; var _0x4b0321 = ExtendVector(_0x38e342, _0x57b085 - 0x1e + 0x3c, 0xa), _0x524f27 = ExtendVector(_0x38e342, _0x57b085 - 0x1e - 0x3c, 0xa), _0x50f43d = ExtendVector(_0x38e342, _0x2a2dcf - 0x1e + 0x3c, 0xa), _0x1f33cd = ExtendVector(_0x38e342, _0x2a2dcf - 0x1e - 0x3c, 0xa); VectorDistance(_0x4e6667, _0x4b0321) < VectorDistance(_0x4e6667, _0x524f27) ? _0x2547aa = _0x4b0321 : _0x2547aa = _0x524f27, VectorDistance(_0x4e6667, _0x50f43d) < VectorDistance(_0x4e6667, _0x1f33cd) ? _0xd33021 = _0x50f43d : _0xd33021 = _0x1f33cd; } else _0x3b0cd7 = _0x19903d, _0x2547aa = ExtendVector(_0x38e342, _0x57b085, 0xa), _0xd33021 = ExtendVector(_0x38e342, _0x2a2dcf, 0xa); } VectorDistance(_0x3b0cd7, _0xd33021) < VectorDistance(_0x3b0cd7, _0x2547aa) && (lastHitTime = _0x138449, Flip()); } lastImpacts[_0x4a745b] = _0x1275af, lastImpactTimes[_0x4a745b] = _0x138449; } } Cheat[_0xfaa9c5('0xe')]('player_hurt', _0xfaa9c5('0xfe')), Cheat[_0xfaa9c5('0xe')](_0xfaa9c5('0xb0'), _0xfaa9c5('0x116')); function draw() { var _0x1e2416 = _0xfaa9c5, _0x166832 = Render['AddFont']('Verdana\x20Bold', 0x12, 0x320); Render[_0x1e2416('0x4e')](0x2b, 0x35c, 0x1, _0x1e2416('0x1a'), [0x80, 0xb6, 0x0, 0xff], _0x166832), Render[_0x1e2416('0x4e')](0x2c, 0x35c, 0x1, _0x1e2416('0x1a'), [0x2d, 0x2d, 0x2d, 0x54], _0x166832), UI[_0x1e2416('0xb2')](_0x1e2416('0xa1'), _0x1e2416('0x7a'), _0x1e2416('0xb'), _0x1e2416('0x60')) && (Render[_0x1e2416('0x4e')](0x4d, 0x294, 0x1, 'HIDESHOT', [0x80, 0xb6, 0x0, 0xff], _0x166832), Render[_0x1e2416('0x4e')](0x4e, 0x294, 0x1, _0x1e2416('0xae'), [0x2d, 0x2d, 0x2d, 0x54], _0x166832)), UI[_0x1e2416('0xb2')](_0x1e2416('0xa1'), _0x1e2416('0x7a'), _0x1e2416('0xb'), _0x1e2416('0xdd')) && (Render['StringCustom'](0x1a, 0x26c, 0x1, 'DT', [0x80, 0xb6, 0x0, 0xff], _0x166832), Render[_0x1e2416('0x4e')](0x1b, 0x26c, 0x1, 'DT', [0x2d, 0x2d, 0x2d, 0x54], _0x166832)); } Cheat['RegisterCallback'](_0xfaa9c5('0xd8'), _0xfaa9c5('0x2d')), UI[_0xfaa9c5('0x1c')](_0xfaa9c5('0xee')); var cache1 = UI[_0xfaa9c5('0x10a')](_0xfaa9c5('0xa1'), 'GENERAL', 'Targeting', _0xfaa9c5('0x4b')), cache2 = UI[_0xfaa9c5('0x10a')](_0xfaa9c5('0xa1'), _0xfaa9c5('0x7b'), _0xfaa9c5('0x9f'), _0xfaa9c5('0x4b')), cache3 = UI['GetValue']('Rage', 'HEAVY\x20PISTOL', 'Targeting', _0xfaa9c5('0x4b')), cache4 = UI[_0xfaa9c5('0x10a')]('Rage', _0xfaa9c5('0x1d'), 'Targeting', _0xfaa9c5('0x4b')), cache5 = UI[_0xfaa9c5('0x10a')]('Rage', 'AWP', 'Targeting', _0xfaa9c5('0x4b')), cache6 = UI[_0xfaa9c5('0x10a')]('Rage', _0xfaa9c5('0x56'), _0xfaa9c5('0x9f'), _0xfaa9c5('0x4b')); function on_cm() { var _0x56afa3 = _0xfaa9c5; UI[_0x56afa3('0xb2')](_0x56afa3('0xb8'), _0x56afa3('0xee')) ? (UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), _0x56afa3('0x7a'), _0x56afa3('0x9f'), 'Hitboxes', 0x1), UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), _0x56afa3('0x7b'), _0x56afa3('0x9f'), 'Hitboxes', 0x1), UI['SetValue'](_0x56afa3('0xa1'), _0x56afa3('0x5a'), _0x56afa3('0x9f'), 'Hitboxes', 0x1), UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), _0x56afa3('0x1d'), _0x56afa3('0x9f'), _0x56afa3('0x4b'), 0x1), UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), _0x56afa3('0x95'), _0x56afa3('0x9f'), _0x56afa3('0x4b'), 0x1), UI['SetValue']('Rage', _0x56afa3('0x56'), _0x56afa3('0x9f'), 'Hitboxes', 0x1)) : (UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), _0x56afa3('0x7a'), _0x56afa3('0x9f'), _0x56afa3('0x4b'), cache1), UI[_0x56afa3('0x5')]('Rage', _0x56afa3('0x7b'), 'Targeting', _0x56afa3('0x4b'), cache2), UI['SetValue'](_0x56afa3('0xa1'), _0x56afa3('0x5a'), 'Targeting', _0x56afa3('0x4b'), cache3), UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), _0x56afa3('0x1d'), _0x56afa3('0x9f'), _0x56afa3('0x4b'), cache4), UI['SetValue']('Rage', 'AWP', _0x56afa3('0x9f'), _0x56afa3('0x4b'), cache5), UI[_0x56afa3('0x5')](_0x56afa3('0xa1'), 'AUTOSNIPER', _0x56afa3('0x9f'), 'Hitboxes', cache6)); } Cheat['RegisterCallback'](_0xfaa9c5('0x99'), _0xfaa9c5('0x41')); function get_icon(_0x2f42b4) { var _0x3a461c = _0xfaa9c5, _0x2188f4 = ''; switch (_0x2f42b4) { case _0x3a461c('0xff'): _0x2188f4 = 'a'; break; case _0x3a461c('0xe1'): _0x2188f4 = 'b'; break; case _0x3a461c('0x80'): _0x2188f4 = 'c'; break; case 'glock\x2018': _0x2188f4 = 'd'; break; case 'ak\x2047': _0x2188f4 = 'e'; break; case _0x3a461c('0x31'): _0x2188f4 = 'f'; break; case _0x3a461c('0x10b'): _0x2188f4 = 'g'; break; case 'famas': _0x2188f4 = 'h'; break; case _0x3a461c('0x35'): _0x2188f4 = 'i'; break; case _0x3a461c('0x19'): _0x2188f4 = 'j'; break; case _0x3a461c('0x29'): _0x2188f4 = 'k'; break; case 'm4a4': _0x2188f4 = 'l'; break; case _0x3a461c('0x2b'): _0x2188f4 = 'm'; break; case 'mac\x2010': _0x2188f4 = 'n'; break; case 'p2000': _0x2188f4 = 'o'; break; case 'mp5\x20sd': _0x2188f4 = 'p'; break; case _0x3a461c('0xaf'): _0x2188f4 = 'q'; break; case _0x3a461c('0xa'): _0x2188f4 = 'r'; break; case 'pp\x20bizon': _0x2188f4 = 's'; break; case _0x3a461c('0x104'): _0x2188f4 = 't'; break; case _0x3a461c('0x2f'): _0x2188f4 = 'u'; break; case _0x3a461c('0xf2'): _0x2188f4 = 'v'; break; case _0x3a461c('0xf9'): _0x2188f4 = 'w'; break; case 'zeus\x20x27': _0x2188f4 = 'x'; break; case 'p250': _0x2188f4 = 'y'; break; case _0x3a461c('0x8e'): _0x2188f4 = 'z'; break; case _0x3a461c('0xc'): _0x2188f4 = 'A'; break; case 'nova': _0x2188f4 = 'B'; break; case 'p90': _0x2188f4 = 'C'; break; case _0x3a461c('0xf5'): _0x2188f4 = 'D'; break; case _0x3a461c('0x109'): _0x2188f4 = 'E'; break; case _0x3a461c('0x52'): _0x2188f4 = 'F'; break; case _0x3a461c('0xc6'): _0x2188f4 = 'G'; break; case _0x3a461c('0x46'): _0x2188f4 = 'H'; break; case _0x3a461c('0xa3'): _0x2188f4 = 'I'; break; case _0x3a461c('0xe8'): _0x2188f4 = 'J'; break; case _0x3a461c('0x108'): _0x2188f4 = 'K'; break; case 'decoy\x20grenade': _0x2188f4 = 'L'; break; case _0x3a461c('0x4d'): _0x2188f4 = 'M'; break; case 'c4\x20explosive': _0x2188f4 = 'N'; break; case _0x3a461c('0x34'): _0x2188f4 = 'P'; break; case _0x3a461c('0x9a'): _0x2188f4 = 'Q'; break; case _0x3a461c('0x82'): _0x2188f4 = 'R'; break; case _0x3a461c('0x97'): _0x2188f4 = 'V'; break; case _0x3a461c('0xfc'): _0x2188f4 = 'W'; break; case _0x3a461c('0xaa'): _0x2188f4 = 'X'; break; case 'karambit': _0x2188f4 = 'Y'; break; case _0x3a461c('0xb6'): _0x2188f4 = 'Z'; break; case _0x3a461c('0x13'): _0x2188f4 = '1'; break; case _0x3a461c('0xd'): _0x2188f4 = '2'; break; case 'butterfly\x20knife': _0x2188f4 = '3'; break; case 'shadow\x20daggers': _0x2188f4 = '4'; break; case _0x3a461c('0x110'): _0x2188f4 = '5'; break; case _0x3a461c('0x8c'): _0x2188f4 = '6'; break; case _0x3a461c('0x6e'): _0x2188f4 = '7'; break; case _0x3a461c('0x5b'): _0x2188f4 = '8'; break; case _0x3a461c('0x3a'): _0x2188f4 = '0'; break; case _0x3a461c('0x61'): _0x2188f4 = '8'; break; case 'classic\x20knife': _0x2188f4 = '25'; break; case 'paracord\x20knife': _0x2188f4 = 'Z'; break; case _0x3a461c('0x17'): _0x2188f4 = 'Z'; break; case _0x3a461c('0xa6'): _0x2188f4 = 'Z'; break; default: _0x2188f4 = ''; break; }return _0x2188f4; } UI[_0xfaa9c5('0xd4')](_0xfaa9c5('0xb1')), UI[_0xfaa9c5('0x9')](_0xfaa9c5('0x7'), 0x0, Global['GetScreenSize']()[0x0]), UI[_0xfaa9c5('0x9')](_0xfaa9c5('0x58'), 0x0, Global[_0xfaa9c5('0xd2')]()[0x1]); function in_bounds(_0xa93077, _0x219a99, _0x174c33, _0x453083, _0x2941e1) { return _0xa93077[0x0] > _0x219a99 && _0xa93077[0x1] > _0x174c33 && _0xa93077[0x0] < _0x453083 && _0xa93077[0x1] < _0x2941e1; } var fa = 0x0, sa = 0x0; function main_dt() { var _0x6ee724 = _0xfaa9c5; if (!World['GetServerString']()) return; const _0x551ea2 = UI[_0x6ee724('0x10a')](_0x6ee724('0x78'), _0x6ee724('0x5c'), _0x6ee724('0xb8'), 'Tickbase_x'), _0x2bc021 = UI[_0x6ee724('0x10a')](_0x6ee724('0x78'), _0x6ee724('0x5c'), _0x6ee724('0xb8'), _0x6ee724('0x58')); localplayer_index = Entity[_0x6ee724('0xcd')](), localplayer_weapon = Entity[_0x6ee724('0x92')](localplayer_index), weapon_name = Entity[_0x6ee724('0x32')](localplayer_weapon), g_Local_classname = Entity['GetClassName'](localplayer_weapon); var _0x43bed7 = Entity['GetProp'](localplayer_weapon, _0x6ee724('0xbd'), _0x6ee724('0x3')), _0x1ba1c4 = ![]; _0x43bed7 <= Globals[_0x6ee724('0x88')]() && (_0x1ba1c4 = !![]); var _0x5ad922 = 0x8 * Globals[_0x6ee724('0x64')](), _0x46d00b = Render[_0x6ee724('0x9b')](_0x6ee724('0xd1'), 0x7, 0x64), _0xcf577a = Render[_0x6ee724('0x9b')](_0x6ee724('0x89'), 0x12, 0x64); if (_0x1ba1c4 && Exploit[_0x6ee724('0xef')]() == 0x1 && UI[_0x6ee724('0xb2')]('Rage', _0x6ee724('0xb'), _0x6ee724('0xdd'))) var _0x374085 = _0x6ee724('0x71'), _0xcc4f80 = [0x59, 0x77, 0xef, 0xff]; else { if (_0x1ba1c4 && Exploit['GetCharge']() == 0x1 && UI['IsHotkeyActive'](_0x6ee724('0xa1'), _0x6ee724('0xb'), _0x6ee724('0x60'))) var _0x374085 = _0x6ee724('0x4f'), _0xcc4f80 = [0x59, 0x77, 0xef, 0xff]; else var _0x374085 = _0x6ee724('0x5e'), _0xcc4f80 = [0x59, 0x59, 0x59, 0xff]; } var _0x1768dd = Render[_0x6ee724('0x3b')](_0x374085, _0x46d00b)[0x0] + 0x8; Render[_0x6ee724('0x49')](_0x551ea2, _0x2bc021, _0x1768dd, 0x2, _0xcc4f80), Render['FilledRect'](_0x551ea2, _0x2bc021 + 0x2, _0x1768dd, 0x12, [0x11, 0x11, 0x11, 0xff]), Render[_0x6ee724('0x4e')](_0x551ea2 + 0x5, _0x2bc021 + 0x5, 0x0, _0x374085, [0x0, 0x0, 0x0, 0xb4], _0x46d00b), Render[_0x6ee724('0x4e')](_0x551ea2 + 0x4, _0x2bc021 + 0x4, 0x0, _0x374085, [0xff, 0xff, 0xff, 0xff], _0x46d00b), Render[_0x6ee724('0x3d')](_0x551ea2 + 0x4, _0x2bc021 + 0x16, 0x0, get_icon(weapon_name), [0xff, 0xff, 0xff, 0xff], 0x5); if (g_Local_classname == 'CKnife' || g_Local_classname == _0x6ee724('0x2e') || g_Local_classname == _0x6ee724('0x43') || weapon_name == _0x6ee724('0x82') || g_Local_classname == 'CHEGrenade' || g_Local_classname == _0x6ee724('0x33') || g_Local_classname == 'CIncendiaryGrenade' || g_Local_classname == _0x6ee724('0x6c') || g_Local_classname == _0x6ee724('0x24') || g_Local_classname == _0x6ee724('0x107') || g_Local_classname == _0x6ee724('0xdf') || g_Local_classname == _0x6ee724('0xc2')) { } else _0x1ba1c4 ? (fa = Math[_0x6ee724('0xf6')](fa + _0x5ad922, 0x1), Render[_0x6ee724('0x4e')](_0x551ea2 + 0xa + Render[_0x6ee724('0x8')](get_icon(weapon_name), 0x5)[0x0], _0x2bc021 + 0x12, 0x0, 'A', [0xff, 0xff, 0xff, fa * 0xff], _0xcf577a)) : fa = 0x0, _0x1ba1c4 && Exploit[_0x6ee724('0xef')]() == 0x1 && UI['IsHotkeyActive'](_0x6ee724('0xa1'), _0x6ee724('0xb'), 'Doubletap') ? (sa = Math[_0x6ee724('0xf6')](sa + _0x5ad922, 0x1), Render[_0x6ee724('0x4e')](_0x551ea2 + 0x1e + Render[_0x6ee724('0x8')](get_icon(weapon_name), 0x5)[0x0], _0x2bc021 + 0x12, 0x0, 'A', [0xff, 0xff, 0xff, sa * 0xff], _0xcf577a)) : sa = 0x0; if (Global[_0x6ee724('0x106')](0x1) && UI['IsMenuOpen']()) { const _0x31b62a = Global[_0x6ee724('0xed')](); in_bounds(_0x31b62a, _0x551ea2, _0x2bc021, _0x551ea2 + _0x1768dd, _0x2bc021 + 0x1e) && (UI[_0x6ee724('0x5')](_0x6ee724('0x78'), _0x6ee724('0x5c'), _0x6ee724('0xb8'), _0x6ee724('0x7'), _0x31b62a[0x0] - _0x1768dd / 0x2), UI[_0x6ee724('0x5')](_0x6ee724('0x78'), _0x6ee724('0x5c'), _0x6ee724('0xb8'), 'Tickbase_y', _0x31b62a[0x1] - 0x14)); } } Global[_0xfaa9c5('0xe')](_0xfaa9c5('0xd8'), _0xfaa9c5('0x59')); var materials = []; function createMat(_0x402a5d) { var _0x5b73e8 = _0xfaa9c5; UI[_0x5b73e8('0xdb')](_0x402a5d + _0x5b73e8('0x87')); var _0x6d22b5 = ['Hollow', _0x5b73e8('0x20'), _0x5b73e8('0x48'), _0x5b73e8('0x38')]; UI[_0x5b73e8('0xba')](_0x402a5d + '\x20options', _0x6d22b5), UI[_0x5b73e8('0x54')](_0x5b73e8('0x0') + _0x402a5d[_0x5b73e8('0x22')](), 0x0, 0xa), Material['Create'](_0x402a5d + _0x5b73e8('0x87')), materials[_0x5b73e8('0x6a')]([_0x402a5d, _0x402a5d + _0x5b73e8('0x87'), _0x402a5d + _0x5b73e8('0x1'), _0x5b73e8('0x0') + _0x402a5d['toLowerCase']()]); } function HSVtoRGB(_0x42ef30, _0x6a32a0, _0x346389) { var _0x17daa6 = _0xfaa9c5, _0x2906e9, _0x3744fb, _0x2d6a4e, _0x57f460, _0x10e33f, _0x1c9892, _0x42f399, _0x23f048; arguments['length'] === 0x1 && (_0x6a32a0 = _0x42ef30['s'], _0x346389 = _0x42ef30['v'], _0x42ef30 = _0x42ef30['h']); _0x57f460 = Math[_0x17daa6('0x15')](_0x42ef30 * 0x6), _0x10e33f = _0x42ef30 * 0x6 - _0x57f460, _0x1c9892 = _0x346389 * (0x1 - _0x6a32a0), _0x42f399 = _0x346389 * (0x1 - _0x10e33f * _0x6a32a0), _0x23f048 = _0x346389 * (0x1 - (0x1 - _0x10e33f) * _0x6a32a0); switch (_0x57f460 % 0x6) { case 0x0: _0x2906e9 = _0x346389, _0x3744fb = _0x23f048, _0x2d6a4e = _0x1c9892; break; case 0x1: _0x2906e9 = _0x42f399, _0x3744fb = _0x346389, _0x2d6a4e = _0x1c9892; break; case 0x2: _0x2906e9 = _0x1c9892, _0x3744fb = _0x346389, _0x2d6a4e = _0x23f048; break; case 0x3: _0x2906e9 = _0x1c9892, _0x3744fb = _0x42f399, _0x2d6a4e = _0x346389; break; case 0x4: _0x2906e9 = _0x23f048, _0x3744fb = _0x1c9892, _0x2d6a4e = _0x346389; break; case 0x5: _0x2906e9 = _0x346389, _0x3744fb = _0x1c9892, _0x2d6a4e = _0x42f399; break; }return [Math[_0x17daa6('0x76')](_0x2906e9 * 0xff), Math[_0x17daa6('0x76')](_0x3744fb * 0xff), Math[_0x17daa6('0x76')](_0x2d6a4e * 0xff), 0xff]; } function materialUpdate() { var _0x234557 = _0xfaa9c5; for (i in materials) { var _0x5b1fc6 = materials[i], _0x24b8e7 = Material[_0x234557('0x8b')](_0x5b1fc6[0x0] + _0x234557('0x87')); if (_0x24b8e7 > 0x0) { Material[_0x234557('0x16')](_0x24b8e7, _0x234557('0x9d'), _0x234557('0x103')); var _0x2079fa = UI[_0x234557('0x10a')](_0x234557('0xb8'), _0x5b1fc6[0x2]) & 0x1; i == 0x1 && Cheat['Print'](UI[_0x234557('0x10a')](_0x234557('0xb8'), _0x5b1fc6[0x2]) + '\x0a'); Material[_0x234557('0x16')](_0x24b8e7, _0x234557('0x85'), _0x2079fa ? '1' : '0'), Material[_0x234557('0x16')](_0x24b8e7, '$envmap', 'models/effects/cube_white'), Material[_0x234557('0x16')](_0x24b8e7, _0x234557('0xda'), '1'); var _0x2cd152 = UI[_0x234557('0x25')](_0x234557('0xb8'), _0x5b1fc6[0x0] + '\x20chams'), _0x14dd34 = UI[_0x234557('0x10a')](_0x234557('0xb8'), _0x5b1fc6[0x2]) & 0x2, _0x30cc7a = UI[_0x234557('0x10a')](_0x234557('0xb8'), _0x5b1fc6[0x2]) & 0x4; _0x30cc7a && (_0x2cd152 = HSVtoRGB(Globals[_0x234557('0x72')]() / 0x5 % 0x1, 0x1, 0x1), _0x2cd152[0x0] /= 0xa, _0x2cd152[0x1] /= 0xa, _0x2cd152[0x2] /= 0xa); if (_0x14dd34) { var _0x2c3dbb = 0x7, _0x2079fa = 0x5, _0x15c4c5 = 0.6, _0x5ef928 = (Math[_0x234557('0x119')](Globals[_0x234557('0x72')]() * 0x7) + 0x5) * _0x15c4c5; _0x2cd152[0x0] *= _0x5ef928, _0x2cd152[0x1] *= _0x5ef928, _0x2cd152[0x2] *= _0x5ef928; } var _0x30befb = UI[_0x234557('0x10a')]('Script\x20items', _0x5b1fc6[0x2]) & 0x8; Material['SetKeyValue'](_0x24b8e7, '$wireframe', _0x30befb ? '1' : '0'); var _0x3d5216 = UI[_0x234557('0x10a')]('Script\x20items', _0x5b1fc6[0x3]); Material[_0x234557('0x16')](_0x24b8e7, _0x234557('0x8d'), '[0\x20' + (0xb - _0x3d5216) + '\x20' + (0xb - _0x3d5216) * 0x2 + ']'), Material[_0x234557('0x16')](_0x24b8e7, _0x234557('0x75'), '[' + _0x2cd152[0x0] / 0xff + '\x20' + _0x2cd152[0x1] / 0xff + '\x20' + _0x2cd152[0x2] / 0xff + ']'), Material['SetKeyValue'](_0x24b8e7, _0x234557('0x51'), _0x2cd152[0x3] / 0xff + ''), Material[_0x234557('0x30')](_0x24b8e7); } } } createMat(_0xfaa9c5('0xde')), Cheat['RegisterCallback']('Material', _0xfaa9c5('0x10')); function onUnload() { for (i in materials) { Material['Destroy'](materials[i][0x1]); } } Cheat['RegisterCallback'](_0xfaa9c5('0x8a'), _0xfaa9c5('0x55')); const enable = UI[_0xfaa9c5('0xa2')](_0xfaa9c5('0xd6')), cc = UI[_0xfaa9c5('0xa2')](_0xfaa9c5('0x73')), cc_tint = UI['AddSliderInt'](_0xfaa9c5('0x7c'), 0x0, 0x64), cc_intensity = UI['AddSliderInt'](_0xfaa9c5('0xbc'), 0x0, 0x64), fog = UI[_0xfaa9c5('0xa2')](_0xfaa9c5('0xf4')), fog_color = UI[_0xfaa9c5('0xdb')](_0xfaa9c5('0xa9')), fog_distance = UI['AddSliderInt']('Distance', 0x0, 0x9c4), fog_density = UI['AddSliderInt']('Density', 0x0, 0x64), handle_visibility = function () { var _0x4004b4 = _0xfaa9c5; const _0x1842cb = UI[_0x4004b4('0x10a')](_0x4004b4('0x78'), _0x4004b4('0x5c'), _0x4004b4('0xb8'), 'Enable\x20color\x20enhancement'), _0x569e8e = UI[_0x4004b4('0x10a')]('Misc', _0x4004b4('0x5c'), 'Script\x20items', _0x4004b4('0x73')), _0x342972 = UI[_0x4004b4('0x10a')](_0x4004b4('0x78'), 'JAVASCRIPT', _0x4004b4('0xb8'), 'Fog\x20correction'); UI[_0x4004b4('0xe9')](_0x4004b4('0x78'), 'JAVASCRIPT', _0x4004b4('0xb8'), _0x4004b4('0xd6'), !![]), UI[_0x4004b4('0xe9')](_0x4004b4('0x78'), 'JAVASCRIPT', _0x4004b4('0xb8'), _0x4004b4('0x73'), _0x1842cb), UI['SetEnabled'](_0x4004b4('0x78'), _0x4004b4('0x5c'), _0x4004b4('0xb8'), _0x4004b4('0x7c'), _0x569e8e), UI[_0x4004b4('0xe9')](_0x4004b4('0x78'), _0x4004b4('0x5c'), _0x4004b4('0xb8'), _0x4004b4('0xbc'), _0x569e8e), UI['SetEnabled'](_0x4004b4('0x78'), _0x4004b4('0x5c'), _0x4004b4('0xb8'), _0x4004b4('0xf4'), _0x1842cb), UI[_0x4004b4('0xe9')](_0x4004b4('0x78'), _0x4004b4('0x5c'), _0x4004b4('0xb8'), _0x4004b4('0xa9'), _0x342972), UI[_0x4004b4('0xe9')](_0x4004b4('0x78'), _0x4004b4('0x5c'), _0x4004b4('0xb8'), _0x4004b4('0xa7'), _0x342972), UI[_0x4004b4('0xe9')]('Misc', _0x4004b4('0x5c'), _0x4004b4('0xb8'), 'Density', _0x342972); }, update_fog = function () { var _0x16203f = _0xfaa9c5; if (!UI[_0x16203f('0x10a')](_0x16203f('0x78'), _0x16203f('0x5c'), _0x16203f('0xb8'), 'Fog\x20correction')) { Convar['GetString'](_0x16203f('0x37')) !== '0' && Convar[_0x16203f('0x47')](_0x16203f('0x37'), '0'); return; } Convar['GetString']('fog_override') !== '1' && Convar[_0x16203f('0x47')]('fog_override', '1'); const _0x1f601e = UI[_0x16203f('0x25')]('Misc', _0x16203f('0x5c'), _0x16203f('0xb8'), _0x16203f('0xa9')), _0x426b01 = _0x1f601e[0x0] + '\x20' + _0x1f601e[0x1] + '\x20' + _0x1f601e[0x2], _0x3d9281 = UI[_0x16203f('0xbf')]('Misc', 'JAVASCRIPT', 'Script\x20items', _0x16203f('0xa7')), _0x1252ec = (UI[_0x16203f('0x10a')](_0x16203f('0x78'), _0x16203f('0x5c'), _0x16203f('0xb8'), 'Density') / 0x64)['toString'](); Convar['GetString']('fog_color') !== _0x426b01 && Convar[_0x16203f('0x47')](_0x16203f('0x118'), _0x426b01), Convar['GetString'](_0x16203f('0x105')) !== _0x3d9281 && (Convar[_0x16203f('0x47')]('fog_start', '0'), Convar[_0x16203f('0x47')](_0x16203f('0x105'), _0x3d9281)), Convar[_0x16203f('0xbf')](_0x16203f('0xa5')) !== _0x1252ec && Convar['SetString'](_0x16203f('0xa5'), _0x1252ec); }, draw_cc = function () { var _0x5ee7dc = _0xfaa9c5; if (!UI[_0x5ee7dc('0x10a')](_0x5ee7dc('0x78'), _0x5ee7dc('0x5c'), _0x5ee7dc('0xb8'), _0x5ee7dc('0x73'))) return; const _0x283fd5 = UI[_0x5ee7dc('0x10a')](_0x5ee7dc('0x78'), _0x5ee7dc('0x5c'), 'Script\x20items', 'Tint'), _0x31df94 = UI[_0x5ee7dc('0x10a')](_0x5ee7dc('0x78'), _0x5ee7dc('0x5c'), _0x5ee7dc('0xb8'), _0x5ee7dc('0xbc')), _0x92ea98 = Global[_0x5ee7dc('0xd2')]()[0x0], _0x129d89 = Global['GetScreenSize']()[0x1]; Render[_0x5ee7dc('0x49')](0x0, 0x0, _0x92ea98, _0x129d89, [_0x283fd5, 0x0, 0xff - _0x283fd5, _0x31df94]); }; handle_visibility(), Convar['SetString'](_0xfaa9c5('0xc7'), '0'); function main() { handle_visibility(), update_fog(), draw_cc(); } Global[_0xfaa9c5('0xe')]('Draw', _0xfaa9c5('0x117')), UI[_0xfaa9c5('0x54')](_0xfaa9c5('0x93'), 0x1, 0x2), UI[_0xfaa9c5('0xd4')](_0xfaa9c5('0xc0')), UI[_0xfaa9c5('0xa2')](_0xfaa9c5('0xf8')), UI['AddCheckbox'](_0xfaa9c5('0xb9')); var aspect_cache = 0x0; function aspect() { var _0xf5d305 = _0xfaa9c5, _0x944058 = UI[_0xf5d305('0x10a')](_0xf5d305('0x93')), _0x2b6568 = UI[_0xf5d305('0x10a')](_0xf5d305('0xf8')), _0xf442e0 = UI[_0xf5d305('0x10a')]('16:9\x20mode'); _0x2b6568 != 0x0 && (UI[_0xf5d305('0x5')](_0xf5d305('0x93'), 1.33333333), UI['SetValue'](_0xf5d305('0xf8'), 0x0)), _0xf442e0 != 0x0 && (UI[_0xf5d305('0x5')](_0xf5d305('0x93'), 1.77777777), UI['SetValue'](_0xf5d305('0xb9'), 0x0)), aspect_cache != _0x944058 && (aspect_cache = _0x944058, UI[_0xf5d305('0x5')](_0xf5d305('0x78'), _0xf5d305('0x7a'), _0xf5d305('0xeb'), 'Hidden\x20cvars', 0x1), Global['ExecuteCommand'](_0xf5d305('0x4a') + _0x944058)); } Cheat[_0xfaa9c5('0xe')](_0xfaa9c5('0x99'), _0xfaa9c5('0x90')); const hitgroup = [_0xfaa9c5('0xce'), 'Neck', _0xfaa9c5('0xe3'), 'Body', _0xfaa9c5('0xb4'), _0xfaa9c5('0x3e'), _0xfaa9c5('0xbb'), _0xfaa9c5('0xfd'), _0xfaa9c5('0xc3'), _0xfaa9c5('0x2c'), _0xfaa9c5('0x53'), _0xfaa9c5('0x3c'), _0xfaa9c5('0x18'), _0xfaa9c5('0x23'), _0xfaa9c5('0x57'), _0xfaa9c5('0x10e'), _0xfaa9c5('0x40'), _0xfaa9c5('0xe0'), _0xfaa9c5('0x115')], activeLogs = [], ragebotTarget = {}; UI[_0xfaa9c5('0xdb')](_0xfaa9c5('0x6b')); var color = UI[_0xfaa9c5('0x25')](_0xfaa9c5('0x83'), _0xfaa9c5('0x5c'), _0xfaa9c5('0x86'), _0xfaa9c5('0x6b')); if (color[0x0] === 0x0 && color[0x1] === 0x0 && color[0x2] === 0x0 && color[0x3] === 0x0) UI[_0xfaa9c5('0x62')](_0xfaa9c5('0x83'), _0xfaa9c5('0x5c'), _0xfaa9c5('0x86'), _0xfaa9c5('0x6b'), [0xff, 0x0, 0x0, 0xff]); function getMultiColorTextSize(_0x223aa8) { var _0x199050 = _0xfaa9c5, _0x452616 = 0x0; for (var _0x11594a = 0x0; _0x11594a < _0x223aa8[_0x199050('0x28')]; _0x11594a++) { _0x452616 += Render[_0x199050('0x8')](_0x223aa8[_0x11594a][0x1], 0x8)[0x0]; } return _0x452616; } function drawMultiColorText(_0x11dad6, _0xdadb83, _0x543603) { var _0x42ff4f = _0xfaa9c5, _0x1b462b = 0x0; for (var _0x5e62b8 = 0x0; _0x5e62b8 < _0x543603['length']; _0x5e62b8++) { const _0x5b6beb = _0x543603[_0x5e62b8], _0x2fba67 = _0x5b6beb[0x1]; var _0x507e8e = _0x5b6beb[0x0]; typeof _0x5b6beb[0x0] == _0x42ff4f('0x69') && (_0x507e8e = UI['GetColor'](_0x42ff4f('0x83'), _0x42ff4f('0x5c'), 'Script\x20Items', _0x42ff4f('0x6b'))); Render[_0x42ff4f('0x3d')](_0x11dad6 + _0x1b462b, _0xdadb83, 0x0, _0x2fba67, _0x507e8e, 0x8); const _0x387864 = Render[_0x42ff4f('0x8')](_0x2fba67, 0x8)[0x0]; _0x1b462b += _0x387864; } } function showLog(_0x318115, _0x2ec80a) { var _0x37dbfc = _0xfaa9c5; const _0x2d96ba = _0x2ec80a[_0x37dbfc('0x42')], _0x42a387 = getMultiColorTextSize(_0x2d96ba), _0x30beb1 = Global[_0x37dbfc('0x72')]() < _0x2ec80a[_0x37dbfc('0x6d')], _0x1a68f0 = 0x2d + 0x2a * (_0x318115 - 0x1), _0x3c1bd4 = 0xc, _0x182a9e = _0x42a387 < 0x96 ? 0x96 : _0x42a387 + 0xf, _0x2ea2ed = 0x3, _0x5740b2 = 0xf; _0x2ec80a['firstLayer'] = _0x30beb1 ? Math[_0x37dbfc('0xf6')](_0x2ec80a[_0x37dbfc('0x6')] + _0x182a9e * 0.025, _0x182a9e + _0x5740b2) : Math[_0x37dbfc('0xac')](_0x2ec80a[_0x37dbfc('0x6')] - _0x2ea2ed, 0x0), _0x2ec80a[_0x37dbfc('0x8f')] = _0x30beb1 ? Math['min'](_0x2ec80a[_0x37dbfc('0x8f')] + _0x182a9e * 0.015, _0x182a9e) : Math[_0x37dbfc('0xac')](_0x2ec80a[_0x37dbfc('0x8f')] - 0x2 * _0x2ea2ed, 0x0); var _0x4fa752 = UI[_0x37dbfc('0x25')](_0x37dbfc('0x83'), _0x37dbfc('0x5c'), 'Script\x20Items', 'Hitlog\x20Color'); Render['FilledRect'](_0x2ec80a[_0x37dbfc('0x6')] - _0x2ec80a[_0x37dbfc('0x6')], _0x1a68f0, _0x2ec80a[_0x37dbfc('0x6')], _0x3c1bd4 + 0x14, _0x4fa752), Render[_0x37dbfc('0x49')](_0x2ec80a['secondLayer'] - _0x2ec80a['secondLayer'], _0x1a68f0, _0x2ec80a[_0x37dbfc('0x8f')], _0x3c1bd4 + 0x14, [0x10, 0x0, 0x0, 0xff]), drawMultiColorText(_0x2ec80a['secondLayer'] - _0x182a9e + 0x5, _0x1a68f0 + 0x3 + 0x6, _0x2d96ba), activeLogs[_0x318115] = _0x2ec80a, _0x2ec80a[_0x37dbfc('0x8f')] === 0x0 && activeLogs[_0x37dbfc('0xf0')](_0x318115, 0x1); } function onDraw() { var _0x3b826d = _0xfaa9c5; for (var _0x15c101 = 0x0; _0x15c101 < activeLogs[_0x3b826d('0x28')]; _0x15c101++) { showLog(_0x15c101, activeLogs[_0x15c101]); } } function onRagebotFire() { var _0x4ff31c = _0xfaa9c5; ragebotTarget[Entity[_0x4ff31c('0x32')](Event['GetInt']('target_index'))] = { 'hitgroup': hitgroup[Event[_0x4ff31c('0xdc')](_0x4ff31c('0x50'))], 'hc': Event['GetInt']('hitchance'), 'safepoint': Event[_0x4ff31c('0xdc')](_0x4ff31c('0xe2')), 'exploit': Event['GetInt'](_0x4ff31c('0xca')) }; } function onPlayerHurt() { var _0x59f043 = _0xfaa9c5; const _0x3e7769 = Entity[_0x59f043('0x81')](Event[_0x59f043('0xdc')](_0x59f043('0x3f'))), _0x43722f = Entity[_0x59f043('0x81')](Event['GetInt'](_0x59f043('0x1f'))), _0x53172a = Entity[_0x59f043('0x32')](_0x43722f); if (_0x3e7769 === Entity[_0x59f043('0xcd')]() && _0x43722f !== Entity[_0x59f043('0xcd')]()) { const _0x25c181 = ragebotTarget[_0x53172a]; if (_0x25c181 != null) { const _0x489eb1 = [[[0xff, 0xff, 0xff, 0xff], 'Hit\x20'], [0x0, _0x53172a[_0x59f043('0xa4')](0x0, 0x1c)], [[0xff, 0xff, 0xff, 0xff], _0x59f043('0x27')], [0x0, _0x25c181[_0x59f043('0xc1')]], [[0xff, 0xff, 0xff, 0xff], _0x59f043('0xec')], [0x0, Event[_0x59f043('0xdc')]('dmg_health')[_0x59f043('0x45')]()], [[0xff, 0xff, 0xff, 0xff], _0x59f043('0x102')], [0x0, Event['GetInt']('health') + _0x59f043('0x66')], [[0xff, 0xff, 0xff, 0xff], ')']]; activeLogs[_0x59f043('0x6a')]({ 'text': _0x489eb1, 'delay': Global[_0x59f043('0x72')]() + 0x5, 'firstLayer': 0x0, 'secondLayer': 0x0 }); } } } Global[_0xfaa9c5('0xe')](_0xfaa9c5('0xd8'), _0xfaa9c5('0x7e')), Global[_0xfaa9c5('0xe')](_0xfaa9c5('0x2a'), _0xfaa9c5('0x96')), Global['RegisterCallback'](_0xfaa9c5('0x10c'), 'onPlayerHurt'); var screen_size = Global[_0xfaa9c5('0xd2')](); Main(); var heavy_cache = UI[_0xfaa9c5('0x10a')](_0xfaa9c5('0xa1'), _0xfaa9c5('0x5a'), _0xfaa9c5('0x9f'), 'Minimum\x20damage'), scout_cache = UI[_0xfaa9c5('0x10a')](_0xfaa9c5('0xa1'), _0xfaa9c5('0x1d'), 'Targeting', _0xfaa9c5('0x10f')), awp_cache = UI[_0xfaa9c5('0x10a')]('Rage', _0xfaa9c5('0x95'), _0xfaa9c5('0x9f'), _0xfaa9c5('0x10f')), auto_cache = UI[_0xfaa9c5('0x10a')]('Rage', _0xfaa9c5('0x56'), _0xfaa9c5('0x9f'), _0xfaa9c5('0x10f')), isInverted, drawLeft = 0x0; drawHideReal = 0x1; var drawRight = 0x0, drawBack = 0x0, leftWasPressed = ![], rightWasPressed = ![], backWasPressed = ![], upWasPressed = ![]; function isActive(_0x4c6b58) { var _0x7e51dc = _0xfaa9c5; return UI[_0x7e51dc('0xb2')](_0x7e51dc('0xb8'), _0x4c6b58); } function setValue(_0x34af35, _0xbdddc) { var _0xddf3dd = _0xfaa9c5; UI[_0xddf3dd('0x5')](_0xddf3dd('0xa1'), _0x34af35[_0xddf3dd('0x21')](), _0xddf3dd('0x9f'), _0xddf3dd('0x10f'), _0xbdddc); } function isHeavyPistol(_0x175754) { var _0x6c6d29 = _0xfaa9c5; if (_0x175754 == 'r8\x20revolver' || _0x175754 == _0x6c6d29('0xff')) return !![]; } function isAutoSniper(_0x19281a) { var _0x1431a9 = _0xfaa9c5; if (_0x19281a == 'scar\x2020' || weapon_name == _0x1431a9('0x19')) return !![]; } function isDoubleTapActive() { var _0x459f17 = _0xfaa9c5, _0x5ace1a = UI[_0x459f17('0x10a')](_0x459f17('0xa1'), _0x459f17('0xb'), _0x459f17('0xdd')), _0x41b254 = UI[_0x459f17('0xb2')](_0x459f17('0xa1'), _0x459f17('0xb'), 'Doubletap'); return _0x5ace1a && _0x41b254; } function correctLBYMode() { var _0x4ad8e9 = _0xfaa9c5; isDoubleTapActive() == 0x1 ? (UI[_0x4ad8e9('0x5')](_0x4ad8e9('0x111'), _0x4ad8e9('0x74'), _0x4ad8e9('0x11a'), '1'), UI['SetValue']('Rage', _0x4ad8e9('0x56'), _0x4ad8e9('0xfa'), _0x4ad8e9('0xd0'), 0x6)) : (UI[_0x4ad8e9('0x5')](_0x4ad8e9('0x111'), _0x4ad8e9('0x74'), _0x4ad8e9('0x11a'), '1'), UI[_0x4ad8e9('0x5')]('Rage', _0x4ad8e9('0x56'), 'Accuracy', _0x4ad8e9('0xd0'), 0x40)); } correctLBYMode(); var jump = ![], prefer_safe_backup = ![]; function drawString() { var _0x58794f = _0xfaa9c5; if (World[_0x58794f('0x100')]() == '') return; correctLBYMode(), isDoubletap = UI['IsHotkeyActive'](_0x58794f('0xa1'), _0x58794f('0xb'), _0x58794f('0xdd')), isInverted = UI[_0x58794f('0xb2')](_0x58794f('0x111'), 'Fake\x20angles', 'Inverter'), isHideReal = UI[_0x58794f('0x10a')]('Anti-Aim', _0x58794f('0x74'), _0x58794f('0x94')), isHIDESHOTS = UI[_0x58794f('0xb2')](_0x58794f('0xa1'), _0x58794f('0xb'), _0x58794f('0x60')), isDMG = isActive(_0x58794f('0x2')), isSP = UI['IsHotkeyActive'](_0x58794f('0xa1'), _0x58794f('0x114'), _0x58794f('0xe4')), isOVHBX = ![], isFD = UI['IsHotkeyActive'](_0x58794f('0x111'), _0x58794f('0xd3'), 'Fake\x20duck'), dt_color = [0xff, 0x0, 0x0, 0xff]; var _0xbf8bb1 = UI['GetValue']('Anti-Aim', _0x58794f('0x74'), _0x58794f('0x11a')) == '1', _0x1e74a5 = UI['GetValue'](_0x58794f('0x111'), _0x58794f('0x74'), _0x58794f('0x11a')) == '1'; if (_0xbf8bb1) Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x28, 0x0, _0x58794f('0x9c'), [0xb1, 0x97, 0xff, 0xff], 0x3); else _0x1e74a5 && Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x28, 0x0, _0x58794f('0x9c'), [0xb1, 0x97, 0xff, 0xff], 0x3); is_DT = ![], g_Local = Entity[_0x58794f('0xcd')](), g_Local_weapon = Entity[_0x58794f('0x92')](g_Local), weapon_name = Entity['GetName'](g_Local_weapon), g_Local_classname = Entity[_0x58794f('0x98')](g_Local_weapon); if (UI[_0x58794f('0x10a')](_0x58794f('0x78'), _0x58794f('0x5c'), 'Script\x20items', _0x58794f('0xab')) && g_Local_classname == _0x58794f('0x43')) is_force_safe_point = UI['IsHotkeyActive']('Rage', _0x58794f('0x7a'), _0x58794f('0x114'), 'Force\x20safe\x20point'), !is_force_safe_point && (UI[_0x58794f('0x9e')](_0x58794f('0xa1'), 'GENERAL', _0x58794f('0x114'), _0x58794f('0xe4')), prefer_safe_backup = !![]); else prefer_safe_backup && (UI[_0x58794f('0x9e')](_0x58794f('0xa1'), _0x58794f('0x7a'), _0x58794f('0x114'), _0x58794f('0xe4')), prefer_safe_backup = ![]); DT = _0x58794f('0xcf'), add_y = 0x3a; UI[_0x58794f('0x10a')]('Rage', _0x58794f('0x7a'), 'Exploits', _0x58794f('0xdd')) && (isDoubletap ? dt_color = [0xff * (0x1 - Exploit[_0x58794f('0xef')]()), 0xff * Exploit[_0x58794f('0xef')](), 0x0, 0xff] : dt_color = [0xff, 0x0, 0x0, 0xff]); g_Local_classname == _0x58794f('0x4c') || g_Local_classname == _0x58794f('0x2e') || g_Local_classname == _0x58794f('0x43') || weapon_name == _0x58794f('0x82') || g_Local_classname == _0x58794f('0x4') || g_Local_classname == 'CMolotovGrenade' || g_Local_classname == _0x58794f('0xe7') || g_Local_classname == _0x58794f('0x6c') || g_Local_classname == _0x58794f('0x24') || g_Local_classname == _0x58794f('0x107') || g_Local_classname == 'CWeaponTaser' || g_Local_classname == _0x58794f('0xc2') ? (isFD ? DT = DT + _0x58794f('0xa0') : DT = DT + '(active\x20weapon)', is_DT = ![]) : (DT = isFD ? _0x58794f('0xea') : _0x58794f('0xcf'), is_DT = isFD == ![] && isDoubletap); UI['SetValue'](_0x58794f('0xa1'), _0x58794f('0xb'), 'Doubletap', is_DT); if (drawLeft) Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? _0x58794f('0x10d') : _0x58794f('0xd5'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'HIDE\x20SHOTS', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x44'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x77'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else { if (drawRight) Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? 'LEFT' : _0x58794f('0xd5'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'HIDE\x20SHOTS', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x44'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x77'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else { if (drawBack) Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? 'LEFT' : _0x58794f('0xd5'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'HIDE\x20SHOTS', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x44'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x77'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else drawHideReal && (Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isHideReal ? _0x58794f('0x91') : 'DISCORD.GG/xBHzt5T', [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0xb5'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'DMG', [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x58794f('0x77'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x58794f('0x3d')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3))); } } } UI['AddColorPicker'](_0xfaa9c5('0xc4')); var color = UI[_0xfaa9c5('0x25')]('Misc', _0xfaa9c5('0x5c'), 'Script\x20items', _0xfaa9c5('0xc4')); if (color[0x3] == 0x0) UI[_0xfaa9c5('0x62')](_0xfaa9c5('0x78'), _0xfaa9c5('0x5c'), _0xfaa9c5('0xb8'), _0xfaa9c5('0xc4'), [0x59, 0x77, 0xef, 0xff]); function draw() { var _0x33efa3 = _0xfaa9c5; if (!World[_0x33efa3('0x100')]()) return; var _0xe05245 = new Date(), _0x59b629 = _0xe05245[_0x33efa3('0xcb')](), _0x178877 = _0xe05245[_0x33efa3('0xc8')](), _0x33911b = _0xe05245[_0x33efa3('0x113')](), _0x495ff0 = _0x59b629 <= 0x9 ? '0' + _0x59b629 + ':' : _0x59b629 + ':', _0x428abe = _0x178877 <= 0x9 ? '0' + _0x178877 + ':' : _0x178877 + ':', _0x75241a = _0x33911b <= 0x9 ? '0' + _0x33911b : _0x33911b, _0x13b920 = Globals[_0x33efa3('0xad')]()[_0x33efa3('0x45')](), _0x2fab26 = Math[_0x33efa3('0x76')](Entity['GetProp'](Entity['GetLocalPlayer'](), 'CPlayerResource', _0x33efa3('0x14')))[_0x33efa3('0x45')](); color = UI['GetColor']('Misc', _0x33efa3('0x5c'), _0x33efa3('0xb8'), _0x33efa3('0xc4')); var _0xb87f67 = Render[_0x33efa3('0x9b')](_0x33efa3('0xd1'), 0x7, 0x190), _0x91c19 = _0x33efa3('0x68') + Cheat['GetUsername']() + '\x20|\x20delay:\x20' + _0x2fab26 + _0x33efa3('0x11') + _0x13b920 + _0x33efa3('0x70') + _0x495ff0 + _0x428abe + _0x75241a, _0x4ef6b9 = Render[_0x33efa3('0x3b')](_0x91c19, _0xb87f67)[0x0] + 0x8, _0x5f0283 = Global[_0x33efa3('0xd2')]()[0x0]; _0x5f0283 = _0x5f0283 - _0x4ef6b9 - 0xa, Render['FilledRect'](_0x5f0283, 0xa, _0x4ef6b9, 0x2, [color[0x0], color[0x1], color[0x2], 0xff]), Render[_0x33efa3('0x49')](_0x5f0283, 0xc, _0x4ef6b9, 0x12, [0x11, 0x11, 0x11, color[0x3]]), Render[_0x33efa3('0x4e')](_0x5f0283 + 0x4, 0xa + 0x4, 0x0, _0x91c19, [0xff, 0xff, 0xff, 0xff], _0xb87f67); } Cheat[_0xfaa9c5('0xe')]('Draw', _0xfaa9c5('0x2d')); function d() { var _0x5a0488 = _0xfaa9c5, _0x3ce30a = Entity['GetLocalPlayer'](), _0x470a3a = Entity[_0x5a0488('0xf1')](_0x3ce30a, 'DT_CSPlayer', _0x5a0488('0xbe')); if (_0x470a3a) { var _0x1dcc56 = Global[_0x5a0488('0xd2')](); x = _0x1dcc56[0x0], y = _0x1dcc56[0x1], Convar['SetString']('cl_drawhud', '0'), Render[_0x5a0488('0xf')](_0x1dcc56[0x1] - 0x78, 0x168, 0x1, 0x96, 0x0, [0x42, 0x86, 0xf4, 0xff], [0x37, 0x3b, 0x44, 0x96]), Render[_0x5a0488('0xf')](_0x1dcc56[0x0] - 0x46b, 0x213, 0x96, 0x1, 0x1, [0x42, 0x86, 0xf4, 0xff], [0x37, 0x3b, 0x44, 0x64]), Render[_0x5a0488('0xf')](_0x1dcc56[0x0] - 0x3ac, 0x213, 0x96, 0x1, 0x1, [0x37, 0x3b, 0x44, 0x64], [0x42, 0x86, 0xf4, 0xff]), Render['GradientRect'](_0x1dcc56[0x1] - 0x78, 0x226, 0x1, 0x96, 0x0, [0x37, 0x3b, 0x44, 0x64], [0x42, 0x86, 0xf4, 0xff]); } else Convar[_0x5a0488('0x47')](_0x5a0488('0x5f'), '1'); } Cheat[_0xfaa9c5('0xe')]('Draw', 'd');