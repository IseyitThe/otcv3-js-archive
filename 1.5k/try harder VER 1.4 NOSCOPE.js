var _0x3788 = ['Vibrancy\x20', 'draw', 'HEAVY\x20PISTOL', 'GetEntityFromUserID', 'Inverter', 'Exploits', 'GetFakeYaw', 'cos', 'getSeconds', 'Curtime', 'MISC', 'min', 'c4\x20explosive', 'toUpperCase', 'sg\x20553', 'hitchance', 'CMolotovGrenade', 'awp', 'ForceTargetSafety', 'Pelvis', 'length', 'GetInt', 'CWeaponSSG08', 'vgui/white', '(active\x20weapon)', 'AddFont', 'Tickbase_y', 'Realtime', 'Color\x20correction', 'Accuracy', 'AddLabel', 'Right\x20upper\x20arm', 'GENERAL', 'GetWeapon', 'delay', 'Minimum\x20damage\x20override', 'Rage\x20Anti-Aim', 'CFlashbang', 'FilledRect', 'mag\x207', 'SetColor', 'Left\x20forearm', 'galil\x20ar', 'Body', 'CKnife', 'cz75\x20auto', '$envmapfresnelminmaxexp', 'p90', 'Left\x20thigh', 'Targeting', 'CIncendiaryGrenade', 'Intensity', 'PISTOL', '\x20|\x20delay:\x20', 'Script\x20Items', 'scar\x2020', 'GetTarget', 'AWP\x20Mindmg', 'SetValue', 'CSmokeGrenade', 'String', 'Distance', 'hitbox', 'nomad\x20knife', 'Anti-Aim', 'huntsman\x20knife', 'Rage', 'ExecuteCommand', 'Verdana', 'Safe\x20AWP', 'GetClassName', 'substring', 'Scout\x20Mindmg', 'AddSliderInt', 'tec\x209', 'DISCORD.GG/xBHzt5T', 'GetProp', 'SCOUT', 'At\x20targets', 'IsValid', 'StringCustom', 'on_player_death', 'Minimum\x20damage', '$envmap', 'Auto\x20stop\x20mode', 'player_hurt', 'GetEyePosition', 'ToggleHotkey', 'nova', '(fakeduck)', 'exploit', '16:9\x20mode', 'Left\x20hand', 'Latency', 'GetServerString', 'sqrt', 'skeleton\x20knife', 'negev', 'Hide\x20shots', 'AddMultiDropdown', 'famas', '4:3\x20mode', 'JAVASCRIPT', 'Hidden\x20cvars', 'number', 'FAKE', 'Hollow', 'flashbang', 'Right\x20forearm', 'materialUpdate', 'Tickcount', '\x20in\x20the\x20', 'Hitboxes', 'SetKeyValue', 'glock\x2018', 'incendiary\x20grenade', 'Force\x20safe\x20point', 'AUTOSNIPER', 'main', 'Rainbow', 'drawString', 'AddCheckbox', 'CC4', 'General', 'fog_color', 'GetLocalPlayer', 'Yaw\x20offset', 'IsHotkeyActive', '[0\x20', 'HIDESHOT', 'push', 'DT\x20(fakeduck)', 'Safety\x20after\x20x\x20misses', 'navaja\x20knife', 'Doubletap', 'Wireframe', 'smoke\x20grenade', '$additive', 'GetUsername', 'mac\x2010', 'text', 'm9\x20bayonet', 'Miscellaneous', 'fog_override', 'sin', 'target_index', 'Head\x20override\x20key', 'ssg\x2008', 'Tint', 'onDraw', 'secondLayer', 'Print', 'Left\x20foot', 'hitgroup', 'CBaseEntity', 'Create', 'IsDormant', 'Fake\x20angles', 'firstLayer', 'IsMenuOpen', 'Color', 'IsEnemy', 'Anti\x20Bruteforce', 'zeus\x20x27', 'HIDE\x20SHOTS', '$envmaptint', 'Tickrate', 'reset_miss_logs', 'CWeaponTaser', 'on_create_move', 'main_dt', '$wireframe', '\x20health\x20remaining', 'molotov', 'SetString', 'Aspect\x20Ratio', 'stiletto\x20knife', 'OnBulletImpact', 'FAKE\x20DUCK', 'attacker', 'm_vecOrigin', 'r_aspectratio\x20', 'AddColorPicker', 'Auto\x20Mindmg', 'bullet_impact', 'paracord\x20knife', 'health', 'GetCursorPosition', 'toString', 'Get', 'ak\x2047', 'Heavy\x20Pistol\x20Mindmg', 'ragebot_fire', 'onPlayerHurt', 'ms\x20|\x20', 'aug', 'Watermark', 'RIGHT', 'p250', 'Script\x20items', 'getMinutes', 'abs', 'GetString', 'Doubletap\x20|\x20tickbase(v):\x207', 'userid', 'Draw', 'gut\x20knife', 'player_connect', 'ump\x2045', 'five\x20seven', 'm_flNextPrimaryAttack', 'CDecoyGrenade', 'GetScreenSize', 'on_player_hurt', 'player_death', 'g3sg1', 'DT\x20', 'survival\x20knife', 'desert\x20eagle', 'GetCharge', 'p2000', 'GetName', 'onetap.com\x20|\x20', 'dual\x20berettas', 'ceil', 'CWeaponAWP', 'models/effects/cube_white', 'TextSizeCustom', 'butterfly\x20knife', 'Chest', 'mp7', 'GetColor', 'Fake\x20duck', '\x20damage\x20(', 'Right\x20calf', 'Misc', 'Density', 'bullet', '\x20chams', 'splice', 'TextSize', 'm4a4', '$alpha', 'SetEnabled', 'Hitlog\x20Color', 'Upper\x20chest', 'usp\x20s', 'CreateMove', 'ursus\x20knife', 'm_iPing', 'IsKeyPressed', '1.33\x20is\x204:3\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x201.77\x20is\x2016:9', 'r8\x20revolver', 'Enable\x20color\x20enhancement', 'bowie\x20knife', 'On\x20Shot', 'Fog\x20correction', 'xm1014', 'm249', 'tick\x20|\x20', 'Unload', 'toLowerCase', 'on_ragebot_fire', 'GetValue', 'r_3dsky', 'Material', '$baseTexture', '\x20options', 'Off', 'Hide\x20real\x20angle', 'Doubletap\x20|\x20tickbase(v):\x2016', 'round', 'DMG', 'GetFloat', 'AWP', 'RegisterCallback', 'getHours', 'Better\x20glow', 'LBY\x20mode', 'LEFT', 'AddHotkey', 'fog_end', 'Tickbase_x']; (function (_0x900e20, _0x37880e) { var _0x20d6f4 = function (_0x46c475) { while (--_0x46c475) { _0x900e20['push'](_0x900e20['shift']()); } }; _0x20d6f4(++_0x37880e); }(_0x3788, 0x86)); var _0x20d6 = function (_0x900e20, _0x37880e) { _0x900e20 = _0x900e20 - 0x0; var _0x20d6f4 = _0x3788[_0x900e20]; return _0x20d6f4; }; var _0x5485a7 = _0x20d6, restore_values = ![]; function override_mindmg() { var _0x322c5e = _0x20d6; if (!isActive(_0x322c5e('0xb8'))) { restore_values ? (restore_values = ![], setValue(_0x322c5e('0x97'), heavy_cache), setValue(_0x322c5e('0xe2'), scout_cache), setValue(_0x322c5e('0x8c'), awp_cache), setValue(_0x322c5e('0x10a'), auto_cache)) : (heavy_cache = UI['GetValue'](_0x322c5e('0xd7'), _0x322c5e('0x97'), _0x322c5e('0xc6'), _0x322c5e('0xe7')), scout_cache = UI['GetValue']('Rage', _0x322c5e('0xe2'), _0x322c5e('0xc6'), 'Minimum\x20damage'), awp_cache = UI['GetValue'](_0x322c5e('0xd7'), _0x322c5e('0x8c'), _0x322c5e('0xc6'), 'Minimum\x20damage'), auto_cache = UI[_0x322c5e('0x81')](_0x322c5e('0xd7'), _0x322c5e('0x10a'), 'Targeting', 'Minimum\x20damage')); return; } restore_values = !![], heavy_value = UI[_0x322c5e('0x81')](_0x322c5e('0x41'), _0x322c5e('0x39')), scout_value = UI['GetValue'](_0x322c5e('0x41'), _0x322c5e('0xdd')), awp_value = UI['GetValue']('Script\x20items', _0x322c5e('0xce')), auto_value = UI[_0x322c5e('0x81')](_0x322c5e('0x41'), _0x322c5e('0x31')), weapon_name = Entity[_0x322c5e('0x57')](Entity['GetWeapon'](Entity[_0x322c5e('0x112')]())), isHeavyPistol(weapon_name) && setValue('HEAVY\x20PISTOL', heavy_value), weapon_name == _0x322c5e('0xd') && setValue(_0x322c5e('0xe2'), scout_value), weapon_name == 'awp' && setValue(_0x322c5e('0x8c'), awp_value), isAutoSniper(weapon_name) && setValue(_0x322c5e('0x10a'), auto_value); } var oldTick = 0x0, lastPressed = 0x0, isHideRealActive = ![]; function onCreateMove() { var _0x1b6485 = _0x20d6; override_mindmg(), isHideRealActive && (Global[_0x1b6485('0x103')]() > oldTick + 0x10 && (backWasPressed = ![], rightWasPressed = ![], leftWasPressed = ![], upWasPressed = ![], oldTick = Global['Tickcount']()), drawLeft = 0x0, drawBack = 0x0, drawRight = 0x0, UI[_0x1b6485('0xcf')](_0x1b6485('0xd5'), 'Rage\x20Anti-Aim', _0x1b6485('0x113'), -0x6), UI['SetValue']('Anti-Aim', 'Fake\x20angles', _0x1b6485('0x87'), ![])), UI[_0x1b6485('0xcf')](_0x1b6485('0xd5'), _0x1b6485('0xb9'), _0x1b6485('0xe3'), isHideRealActive ? !![] : ![]); } function player_connect() { var _0x55f18c = _0x20d6; lastPressed = Global['Tickcount'](), oldTick = Global[_0x55f18c('0x103')](); } function Main() { var _0x5d7869 = _0x20d6; UI['AddCheckbox'](_0x5d7869('0xda')), UI['AddHotkey'](_0x5d7869('0xb8')), UI['AddSliderInt'](_0x5d7869('0x39'), 0x0, 0x82), UI['AddSliderInt'](_0x5d7869('0xdd'), 0x0, 0x82), UI[_0x5d7869('0xde')]('AWP\x20Mindmg', 0x0, 0x82), UI[_0x5d7869('0xde')](_0x5d7869('0x31'), 0x0, 0x82), Global[_0x5d7869('0x8d')](_0x5d7869('0x47'), _0x5d7869('0x10d')), Global['RegisterCallback'](_0x5d7869('0x71'), 'onCreateMove'), Global[_0x5d7869('0x8d')]('player_connect_full', _0x5d7869('0x49')); } var waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1, misses = [0x40], safety_ents = [0x40]; reset_miss_logs(), UI[_0x5485a7('0xde')]('Safety\x20after\x20x\x20misses', 0x1, 0x6); function on_ragebot_fire() { var _0x16f1ff = _0x5485a7; waiting_for_hit = !![], target_idx = Event[_0x16f1ff('0xaa')](_0x16f1ff('0xb')), tick_count = Globals[_0x16f1ff('0x103')](); } function on_player_hurt() { var _0x3f4366 = _0x5485a7, _0x46c475 = Entity[_0x3f4366('0x98')](Event[_0x3f4366('0xaa')](_0x3f4366('0x46'))); if (_0x46c475 == Entity[_0x3f4366('0x112')]()) return; var _0x2613c5 = Entity[_0x3f4366('0x98')](Event['GetInt'](_0x3f4366('0x2d'))); if (_0x2613c5 != Entity['GetLocalPlayer']()) return; if (_0x46c475 != target_idx) return; waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1; } function on_create_move() { var _0x40b3fd = _0x5485a7, _0x572f3e = 0x3e8 / Globals['Tickrate'](), _0x417c9b = 0x1 + Math[_0x40b3fd('0x5a')](Local[_0x40b3fd('0xf2')]() * 0x2 / _0x572f3e); Globals[_0x40b3fd('0x103')]() - tick_count >= _0x417c9b && waiting_for_hit && (misses[target_idx]++, misses[target_idx] >= UI['GetValue'](_0x40b3fd('0x65'), _0x40b3fd('0xfb'), _0x40b3fd('0x41'), _0x40b3fd('0x119')) && (safety_ents[target_idx] = 0x1), waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1); var _0x548d20 = Ragebot[_0x40b3fd('0xcd')](); if (_0x548d20 == 0x0) return; safety_ents[_0x548d20] == 0x1 && Ragebot[_0x40b3fd('0xa7')](_0x548d20); } function on_player_death() { var _0x282d3e = _0x5485a7, _0x415966 = Entity[_0x282d3e('0x98')](Event['GetInt'](_0x282d3e('0x46'))); reset_specific_miss_logs(_0x415966); } function reset_miss_logs() { for (var _0x2d0948 = 0x0; _0x2d0948 < 0x40; _0x2d0948++) { reset_specific_miss_logs(_0x2d0948); } } function reset_specific_miss_logs(_0x172bac) { misses[_0x172bac] = 0x0, safety_ents[_0x172bac] = 0x0; } Cheat[_0x5485a7('0x8d')](_0x5485a7('0x3a'), _0x5485a7('0x80')), Cheat[_0x5485a7('0x8d')]('player_hurt', _0x5485a7('0x4f')), Cheat[_0x5485a7('0x8d')]('CreateMove', _0x5485a7('0x23')), Cheat[_0x5485a7('0x8d')](_0x5485a7('0x50'), _0x5485a7('0xe6')), Cheat[_0x5485a7('0x8d')]('round_start', _0x5485a7('0x21')), UI['AddDropdown'](_0x5485a7('0x1c'), [_0x5485a7('0x86'), 'On\x20Hit', _0x5485a7('0x79')]); function GetScriptOption(_0xd403a6) { var _0x35dea4 = _0x5485a7, _0x2692cc = UI[_0x35dea4('0x81')](_0x35dea4('0x65'), _0x35dea4('0xfb'), _0x35dea4('0x41'), _0xd403a6); return _0x2692cc; } function radian(_0x5ceed3) { return _0x5ceed3 * Math['PI'] / 0xb4; } function ExtendVector(_0x2ee24b, _0x16d8f2, _0x27bae2) { var _0x2bf90f = _0x5485a7, _0xfd7edb = radian(_0x16d8f2); return [_0x27bae2 * Math[_0x2bf90f('0x9c')](_0xfd7edb) + _0x2ee24b[0x0], _0x27bae2 * Math[_0x2bf90f('0xa')](_0xfd7edb) + _0x2ee24b[0x1], _0x2ee24b[0x2]]; } function VectorAdd(_0x5b7dda, _0x2d3527) { return [_0x5b7dda[0x0] + _0x2d3527[0x0], _0x5b7dda[0x1] + _0x2d3527[0x1], _0x5b7dda[0x2] + _0x2d3527[0x2]]; } function VectorSubtract(_0x551a67, _0x455a54) { return [_0x551a67[0x0] - _0x455a54[0x0], _0x551a67[0x1] - _0x455a54[0x1], _0x551a67[0x2] - _0x455a54[0x2]]; } function VectorMultiply(_0x4cf84, _0x191cd8) { return [_0x4cf84[0x0] * _0x191cd8[0x0], _0x4cf84[0x1] * _0x191cd8[0x1], _0x4cf84[0x2] * _0x191cd8[0x2]]; } function VectorLength(_0x25899c, _0x53e628, _0x5178ed) { var _0x4cc808 = _0x5485a7; return Math[_0x4cc808('0xf4')](_0x25899c * _0x25899c + _0x53e628 * _0x53e628 + _0x5178ed * _0x5178ed); } function VectorNormalize(_0x5002c8) { var _0x165450 = VectorLength(_0x5002c8[0x0], _0x5002c8[0x1], _0x5002c8[0x2]); return [_0x5002c8[0x0] / _0x165450, _0x5002c8[0x1] / _0x165450, _0x5002c8[0x2] / _0x165450]; } function VectorDot(_0x36de84, _0x110362) { return _0x36de84[0x0] * _0x110362[0x0] + _0x36de84[0x1] * _0x110362[0x1] + _0x36de84[0x2] * _0x110362[0x2]; } function VectorDistance(_0x5341ee, _0x5256ab) { return VectorLength(_0x5341ee[0x0] - _0x5256ab[0x0], _0x5341ee[0x1] - _0x5256ab[0x1], _0x5341ee[0x2] - _0x5256ab[0x2]); } function ClosestPointOnRay(_0x5d0c6e, _0x4a8c09, _0x36f344) { var _0x11fa81 = VectorSubtract(_0x5d0c6e, _0x4a8c09), _0x5074d4 = VectorSubtract(_0x36f344, _0x4a8c09), _0x3bb71b = VectorLength(_0x5074d4[0x0], _0x5074d4[0x1], _0x5074d4[0x2]); _0x5074d4 = VectorNormalize(_0x5074d4); var _0x4adbc0 = VectorDot(_0x5074d4, _0x11fa81); if (_0x4adbc0 < 0x0) return _0x4a8c09; if (_0x4adbc0 > _0x3bb71b) return _0x36f344; return VectorAdd(_0x4a8c09, VectorMultiply(_0x5074d4, [_0x4adbc0, _0x4adbc0, _0x4adbc0])); } function Flip() { var _0x47895e = _0x5485a7; UI['ToggleHotkey']('Anti-Aim', _0x47895e('0x17'), _0x47895e('0x99')); } var lastHitTime = 0x0, lastImpactTimes = [0x0], lastImpacts = [[0x0, 0x0, 0x0]]; function OnHurt() { var _0x53995a = _0x5485a7; if (GetScriptOption('Anti\x20Bruteforce') == 0x0) return; if (Entity[_0x53995a('0x98')](Event['GetInt'](_0x53995a('0x46'))) !== Entity['GetLocalPlayer']()) return; var _0x3eb173 = Event['GetInt'](_0x53995a('0x13')); if (_0x3eb173 == 0x1 || _0x3eb173 == 0x6 || _0x3eb173 == 0x7) { var _0x32d9f1 = Global[_0x53995a('0x9e')](); Math[_0x53995a('0x43')](lastHitTime - _0x32d9f1) > 0.5 && (lastHitTime = _0x32d9f1, Flip()); } } function OnBulletImpact() { var _0x1be40a = _0x5485a7; if (GetScriptOption(_0x1be40a('0x1c')) !== 0x2) return; var _0x296450 = Global['Curtime'](); if (Math['abs'](lastHitTime - _0x296450) < 0.5) return; var _0x34dc45 = Entity['GetEntityFromUserID'](Event[_0x1be40a('0xaa')](_0x1be40a('0x46'))), _0x3a2675 = [Event[_0x1be40a('0x8b')]('x'), Event[_0x1be40a('0x8b')]('y'), Event[_0x1be40a('0x8b')]('z'), _0x296450], _0xfcb7d2; if (Entity[_0x1be40a('0xe4')](_0x34dc45) && Entity[_0x1be40a('0x1b')](_0x34dc45)) { if (!Entity[_0x1be40a('0x16')](_0x34dc45)) _0xfcb7d2 = Entity[_0x1be40a('0xeb')](_0x34dc45); else { if (Math[_0x1be40a('0x43')](lastImpactTimes[_0x34dc45] - _0x296450) < 0.1) _0xfcb7d2 = lastImpacts[_0x34dc45]; else { lastImpacts[_0x34dc45] = _0x3a2675, lastImpactTimes[_0x34dc45] = _0x296450; return; } } var _0x1748e6 = Entity[_0x1be40a('0x112')](), _0x4be8ad = Entity[_0x1be40a('0xeb')](_0x1748e6), _0x521529 = Entity[_0x1be40a('0xe1')](_0x1748e6, _0x1be40a('0x14'), _0x1be40a('0x2e')), _0x5c756d = VectorMultiply(VectorAdd(_0x4be8ad, _0x521529), [0.5, 0.5, 0.5]), _0x1c81ec = ClosestPointOnRay(_0x5c756d, _0xfcb7d2, _0x3a2675), _0x5c292e = VectorDistance(_0x5c756d, _0x1c81ec); if (_0x5c292e < 0x55) { var _0x55b861 = Local['GetRealYaw'](), _0x206d84 = Local[_0x1be40a('0x9b')](), _0x184b04 = ClosestPointOnRay(_0x4be8ad, _0xfcb7d2, _0x3a2675), _0x37a9ce = VectorDistance(_0x4be8ad, _0x184b04), _0x1a0c34 = ClosestPointOnRay(_0x521529, _0xfcb7d2, _0x3a2675), _0x10089d = VectorDistance(_0x521529, _0x1a0c34), _0x2b4358, _0x39ef4f, _0x3f184c; if (_0x5c292e < _0x37a9ce && _0x5c292e < _0x10089d) _0x2b4358 = _0x1c81ec, _0x39ef4f = ExtendVector(_0x1c81ec, _0x55b861 + 0xb4, 0xa), _0x3f184c = ExtendVector(_0x1c81ec, _0x206d84 + 0xb4, 0xa); else { if (_0x10089d < _0x37a9ce) { _0x2b4358 = _0x1a0c34; var _0x286d84 = ExtendVector(_0x1c81ec, _0x55b861 - 0x1e + 0x3c, 0xa), _0x4398fd = ExtendVector(_0x1c81ec, _0x55b861 - 0x1e - 0x3c, 0xa), _0x4abb2d = ExtendVector(_0x1c81ec, _0x206d84 - 0x1e + 0x3c, 0xa), _0x3a3cb4 = ExtendVector(_0x1c81ec, _0x206d84 - 0x1e - 0x3c, 0xa); VectorDistance(_0x1a0c34, _0x286d84) < VectorDistance(_0x1a0c34, _0x4398fd) ? _0x39ef4f = _0x286d84 : _0x39ef4f = _0x4398fd, VectorDistance(_0x1a0c34, _0x4abb2d) < VectorDistance(_0x1a0c34, _0x3a3cb4) ? _0x3f184c = _0x4abb2d : _0x3f184c = _0x3a3cb4; } else _0x2b4358 = _0x184b04, _0x39ef4f = ExtendVector(_0x1c81ec, _0x55b861, 0xa), _0x3f184c = ExtendVector(_0x1c81ec, _0x206d84, 0xa); } VectorDistance(_0x2b4358, _0x3f184c) < VectorDistance(_0x2b4358, _0x39ef4f) && (lastHitTime = _0x296450, Flip()); } lastImpacts[_0x34dc45] = _0x3a2675, lastImpactTimes[_0x34dc45] = _0x296450; } } Cheat[_0x5485a7('0x8d')](_0x5485a7('0xea'), 'OnHurt'), Cheat[_0x5485a7('0x8d')](_0x5485a7('0x32'), _0x5485a7('0x2b')); function draw() { var _0x932d89 = _0x5485a7, _0x5b232d = Render[_0x932d89('0xae')]('Verdana\x20Bold', 0x12, 0x320); Render[_0x932d89('0xe5')](0x2b, 0x35c, 0x1, _0x932d89('0xfe'), [0x80, 0xb6, 0x0, 0xff], _0x5b232d), Render[_0x932d89('0xe5')](0x2c, 0x35c, 0x1, 'FAKE', [0x2d, 0x2d, 0x2d, 0x54], _0x5b232d), UI['IsHotkeyActive'](_0x932d89('0xd7'), _0x932d89('0xb5'), 'Exploits', 'Hide\x20shots') && (Render[_0x932d89('0xe5')](0x4d, 0x294, 0x1, 'HIDESHOT', [0x80, 0xb6, 0x0, 0xff], _0x5b232d), Render[_0x932d89('0xe5')](0x4e, 0x294, 0x1, _0x932d89('0x116'), [0x2d, 0x2d, 0x2d, 0x54], _0x5b232d)), UI['IsHotkeyActive'](_0x932d89('0xd7'), _0x932d89('0xb5'), _0x932d89('0x9a'), _0x932d89('0x0')) && (Render[_0x932d89('0xe5')](0x1a, 0x26c, 0x1, 'DT', [0x80, 0xb6, 0x0, 0xff], _0x5b232d), Render[_0x932d89('0xe5')](0x1b, 0x26c, 0x1, 'DT', [0x2d, 0x2d, 0x2d, 0x54], _0x5b232d)); } Cheat[_0x5485a7('0x8d')](_0x5485a7('0x47'), _0x5485a7('0x96')), UI[_0x5485a7('0x92')](_0x5485a7('0xc')); var cache1 = UI[_0x5485a7('0x81')]('Rage', 'GENERAL', 'Targeting', 'Hitboxes'), cache2 = UI[_0x5485a7('0x81')](_0x5485a7('0xd7'), _0x5485a7('0xc9'), 'Targeting', _0x5485a7('0x105')), cache3 = UI['GetValue'](_0x5485a7('0xd7'), _0x5485a7('0x97'), _0x5485a7('0xc6'), _0x5485a7('0x105')), cache4 = UI[_0x5485a7('0x81')](_0x5485a7('0xd7'), 'SCOUT', 'Targeting', _0x5485a7('0x105')), cache5 = UI[_0x5485a7('0x81')](_0x5485a7('0xd7'), _0x5485a7('0x8c'), _0x5485a7('0xc6'), 'Hitboxes'), cache6 = UI[_0x5485a7('0x81')](_0x5485a7('0xd7'), _0x5485a7('0x10a'), _0x5485a7('0xc6'), _0x5485a7('0x105')); function on_cm() { var _0x3dc9d6 = _0x5485a7; UI[_0x3dc9d6('0x114')](_0x3dc9d6('0x41'), _0x3dc9d6('0xc')) ? (UI[_0x3dc9d6('0xcf')]('Rage', _0x3dc9d6('0xb5'), _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), 0x1), UI[_0x3dc9d6('0xcf')](_0x3dc9d6('0xd7'), 'PISTOL', _0x3dc9d6('0xc6'), 'Hitboxes', 0x1), UI[_0x3dc9d6('0xcf')]('Rage', _0x3dc9d6('0x97'), 'Targeting', _0x3dc9d6('0x105'), 0x1), UI[_0x3dc9d6('0xcf')](_0x3dc9d6('0xd7'), _0x3dc9d6('0xe2'), _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), 0x1), UI['SetValue'](_0x3dc9d6('0xd7'), _0x3dc9d6('0x8c'), _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), 0x1), UI['SetValue'](_0x3dc9d6('0xd7'), 'AUTOSNIPER', _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), 0x1)) : (UI[_0x3dc9d6('0xcf')]('Rage', _0x3dc9d6('0xb5'), _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), cache1), UI[_0x3dc9d6('0xcf')](_0x3dc9d6('0xd7'), _0x3dc9d6('0xc9'), _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), cache2), UI[_0x3dc9d6('0xcf')](_0x3dc9d6('0xd7'), 'HEAVY\x20PISTOL', 'Targeting', _0x3dc9d6('0x105'), cache3), UI['SetValue'](_0x3dc9d6('0xd7'), _0x3dc9d6('0xe2'), _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), cache4), UI[_0x3dc9d6('0xcf')](_0x3dc9d6('0xd7'), _0x3dc9d6('0x8c'), 'Targeting', _0x3dc9d6('0x105'), cache5), UI[_0x3dc9d6('0xcf')](_0x3dc9d6('0xd7'), 'AUTOSNIPER', _0x3dc9d6('0xc6'), _0x3dc9d6('0x105'), cache6)); } Cheat[_0x5485a7('0x8d')](_0x5485a7('0x71'), 'on_cm'); function get_icon(_0x13bd49) { var _0x55a76d = _0x5485a7, _0x2c145f = ''; switch (_0x13bd49) { case _0x55a76d('0x54'): _0x2c145f = 'a'; break; case _0x55a76d('0x59'): _0x2c145f = 'b'; break; case _0x55a76d('0x4b'): _0x2c145f = 'c'; break; case _0x55a76d('0x107'): _0x2c145f = 'd'; break; case _0x55a76d('0x38'): _0x2c145f = 'e'; break; case _0x55a76d('0x3d'): _0x2c145f = 'f'; break; case _0x55a76d('0xa6'): _0x2c145f = 'g'; break; case _0x55a76d('0xf9'): _0x2c145f = 'h'; break; case _0x55a76d('0x7c'): _0x2c145f = 'i'; break; case _0x55a76d('0x51'): _0x2c145f = 'j'; break; case _0x55a76d('0xbf'): _0x2c145f = 'k'; break; case _0x55a76d('0x6b'): _0x2c145f = 'l'; break; case 'm4a1\x20s': _0x2c145f = 'm'; break; case _0x55a76d('0x5'): _0x2c145f = 'n'; break; case _0x55a76d('0x56'): _0x2c145f = 'o'; break; case 'mp5\x20sd': _0x2c145f = 'p'; break; case _0x55a76d('0x4a'): _0x2c145f = 'q'; break; case _0x55a76d('0x7b'): _0x2c145f = 'r'; break; case 'pp\x20bizon': _0x2c145f = 's'; break; case _0x55a76d('0xbc'): _0x2c145f = 't'; break; case _0x55a76d('0xf6'): _0x2c145f = 'u'; break; case 'sawed\x20off': _0x2c145f = 'v'; break; case _0x55a76d('0xdf'): _0x2c145f = 'w'; break; case _0x55a76d('0x1d'): _0x2c145f = 'x'; break; case _0x55a76d('0x40'): _0x2c145f = 'y'; break; case _0x55a76d('0x60'): _0x2c145f = 'z'; break; case 'mp9': _0x2c145f = 'A'; break; case _0x55a76d('0xed'): _0x2c145f = 'B'; break; case _0x55a76d('0xc4'): _0x2c145f = 'C'; break; case 'scar\x2020': _0x2c145f = 'D'; break; case _0x55a76d('0xa3'): _0x2c145f = 'E'; break; case _0x55a76d('0xd'): _0x2c145f = 'F'; break; case 'knife': _0x2c145f = 'G'; break; case _0x55a76d('0x100'): _0x2c145f = 'H'; break; case 'high\x20explosive\x20grenade': _0x2c145f = 'I'; break; case _0x55a76d('0x2'): _0x2c145f = 'J'; break; case _0x55a76d('0x27'): _0x2c145f = 'K'; break; case 'decoy\x20grenade': _0x2c145f = 'L'; break; case _0x55a76d('0x108'): _0x2c145f = 'M'; break; case _0x55a76d('0xa1'): _0x2c145f = 'N'; break; case _0x55a76d('0x70'): _0x2c145f = 'P'; break; case _0x55a76d('0xc2'): _0x2c145f = 'Q'; break; case _0x55a76d('0x76'): _0x2c145f = 'R'; break; case 'bayonet': _0x2c145f = 'V'; break; case 'flip\x20knife': _0x2c145f = 'W'; break; case _0x55a76d('0x48'): _0x2c145f = 'X'; break; case 'karambit': _0x2c145f = 'Y'; break; case _0x55a76d('0x7'): _0x2c145f = 'Z'; break; case 'falchion\x20knife': _0x2c145f = '1'; break; case _0x55a76d('0x78'): _0x2c145f = '2'; break; case _0x55a76d('0x5e'): _0x2c145f = '3'; break; case 'shadow\x20daggers': _0x2c145f = '4'; break; case _0x55a76d('0x72'): _0x2c145f = '5'; break; case _0x55a76d('0x11a'): _0x2c145f = '6'; break; case _0x55a76d('0x2a'): _0x2c145f = '7'; break; case _0x55a76d('0xf5'): _0x2c145f = '8'; break; case _0x55a76d('0xd6'): _0x2c145f = '0'; break; case 'talon\x20knife': _0x2c145f = '8'; break; case 'classic\x20knife': _0x2c145f = '25'; break; case _0x55a76d('0x33'): _0x2c145f = 'Z'; break; case _0x55a76d('0x53'): _0x2c145f = 'Z'; break; case _0x55a76d('0xd4'): _0x2c145f = 'Z'; break; default: _0x2c145f = ''; break; }return _0x2c145f; } UI[_0x5485a7('0xb3')]('\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Tickbase\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'), UI['AddSliderInt'](_0x5485a7('0x94'), 0x0, Global[_0x5485a7('0x4e')]()[0x0]), UI['AddSliderInt'](_0x5485a7('0xaf'), 0x0, Global[_0x5485a7('0x4e')]()[0x1]); function in_bounds(_0x50c369, _0x3791e5, _0x44f20f, _0x33424a, _0x3b255b) { return _0x50c369[0x0] > _0x3791e5 && _0x50c369[0x1] > _0x44f20f && _0x50c369[0x0] < _0x33424a && _0x50c369[0x1] < _0x3b255b; } var fa = 0x0, sa = 0x0; function main_dt() { var _0x30ce3c = _0x5485a7; if (!World['GetServerString']()) return; const _0xea1c47 = UI[_0x30ce3c('0x81')](_0x30ce3c('0x65'), _0x30ce3c('0xfb'), _0x30ce3c('0x41'), _0x30ce3c('0x94')), _0x235e09 = UI[_0x30ce3c('0x81')]('Misc', _0x30ce3c('0xfb'), _0x30ce3c('0x41'), 'Tickbase_y'); localplayer_index = Entity[_0x30ce3c('0x112')](), localplayer_weapon = Entity[_0x30ce3c('0xb6')](localplayer_index), weapon_name = Entity[_0x30ce3c('0x57')](localplayer_weapon), g_Local_classname = Entity[_0x30ce3c('0xdb')](localplayer_weapon); var _0x5a13ca = Entity[_0x30ce3c('0xe1')](localplayer_weapon, 'CBaseCombatWeapon', _0x30ce3c('0x4c')), _0x39492f = ![]; _0x5a13ca <= Globals[_0x30ce3c('0x9e')]() && (_0x39492f = !![]); var _0x127439 = 0x8 * Globals['Frametime'](), _0x578b00 = Render[_0x30ce3c('0xae')](_0x30ce3c('0xd9'), 0x7, 0x64), _0x5b941d = Render['AddFont'](_0x30ce3c('0x67'), 0x12, 0x64); if (_0x39492f && Exploit[_0x30ce3c('0x55')]() == 0x1 && UI[_0x30ce3c('0x114')](_0x30ce3c('0xd7'), _0x30ce3c('0x9a'), _0x30ce3c('0x0'))) var _0x5bf91c = _0x30ce3c('0x88'), _0xc387a2 = [0x59, 0x77, 0xef, 0xff]; else { if (_0x39492f && Exploit['GetCharge']() == 0x1 && UI[_0x30ce3c('0x114')](_0x30ce3c('0xd7'), _0x30ce3c('0x9a'), _0x30ce3c('0xf7'))) var _0x5bf91c = _0x30ce3c('0x45'), _0xc387a2 = [0x59, 0x77, 0xef, 0xff]; else var _0x5bf91c = 'Doubletap\x20|\x20tickbase(v):\x200', _0xc387a2 = [0x59, 0x59, 0x59, 0xff]; } var _0x3b7817 = Render[_0x30ce3c('0x5d')](_0x5bf91c, _0x578b00)[0x0] + 0x8; Render[_0x30ce3c('0xbb')](_0xea1c47, _0x235e09, _0x3b7817, 0x2, _0xc387a2), Render['FilledRect'](_0xea1c47, _0x235e09 + 0x2, _0x3b7817, 0x12, [0x11, 0x11, 0x11, 0xff]), Render['StringCustom'](_0xea1c47 + 0x5, _0x235e09 + 0x5, 0x0, _0x5bf91c, [0x0, 0x0, 0x0, 0xb4], _0x578b00), Render[_0x30ce3c('0xe5')](_0xea1c47 + 0x4, _0x235e09 + 0x4, 0x0, _0x5bf91c, [0xff, 0xff, 0xff, 0xff], _0x578b00), Render[_0x30ce3c('0xd1')](_0xea1c47 + 0x4, _0x235e09 + 0x16, 0x0, get_icon(weapon_name), [0xff, 0xff, 0xff, 0xff], 0x5); if (g_Local_classname == 'CKnife' || g_Local_classname == _0x30ce3c('0xab') || g_Local_classname == _0x30ce3c('0x5b') || weapon_name == _0x30ce3c('0x76') || g_Local_classname == 'CHEGrenade' || g_Local_classname == _0x30ce3c('0xa5') || g_Local_classname == _0x30ce3c('0xc7') || g_Local_classname == _0x30ce3c('0xba') || g_Local_classname == _0x30ce3c('0xd0') || g_Local_classname == _0x30ce3c('0x4d') || g_Local_classname == _0x30ce3c('0x22') || g_Local_classname == _0x30ce3c('0x10f')) { } else _0x39492f ? (fa = Math[_0x30ce3c('0xa0')](fa + _0x127439, 0x1), Render['StringCustom'](_0xea1c47 + 0xa + Render[_0x30ce3c('0x6a')](get_icon(weapon_name), 0x5)[0x0], _0x235e09 + 0x12, 0x0, 'A', [0xff, 0xff, 0xff, fa * 0xff], _0x5b941d)) : fa = 0x0, _0x39492f && Exploit[_0x30ce3c('0x55')]() == 0x1 && UI['IsHotkeyActive'](_0x30ce3c('0xd7'), 'Exploits', 'Doubletap') ? (sa = Math[_0x30ce3c('0xa0')](sa + _0x127439, 0x1), Render[_0x30ce3c('0xe5')](_0xea1c47 + 0x1e + Render[_0x30ce3c('0x6a')](get_icon(weapon_name), 0x5)[0x0], _0x235e09 + 0x12, 0x0, 'A', [0xff, 0xff, 0xff, sa * 0xff], _0x5b941d)) : sa = 0x0; if (Global[_0x30ce3c('0x74')](0x1) && UI[_0x30ce3c('0x19')]()) { const _0x214c1d = Global[_0x30ce3c('0x35')](); in_bounds(_0x214c1d, _0xea1c47, _0x235e09, _0xea1c47 + _0x3b7817, _0x235e09 + 0x1e) && (UI['SetValue'](_0x30ce3c('0x65'), _0x30ce3c('0xfb'), _0x30ce3c('0x41'), _0x30ce3c('0x94'), _0x214c1d[0x0] - _0x3b7817 / 0x2), UI['SetValue']('Misc', 'JAVASCRIPT', _0x30ce3c('0x41'), _0x30ce3c('0xaf'), _0x214c1d[0x1] - 0x14)); } } Global[_0x5485a7('0x8d')](_0x5485a7('0x47'), _0x5485a7('0x24')); var materials = []; function createMat(_0x1baffd) { var _0x57680b = _0x5485a7; UI[_0x57680b('0x30')](_0x1baffd + _0x57680b('0x68')); var _0x70cd9 = [_0x57680b('0xff'), 'Pulse', _0x57680b('0x10c'), _0x57680b('0x1')]; UI[_0x57680b('0xf8')](_0x1baffd + '\x20options', _0x70cd9), UI['AddSliderFloat']('Vibrancy\x20' + _0x1baffd[_0x57680b('0x7f')](), 0x0, 0xa), Material[_0x57680b('0x15')](_0x1baffd + '\x20chams'), materials[_0x57680b('0x117')]([_0x1baffd, _0x1baffd + _0x57680b('0x68'), _0x1baffd + _0x57680b('0x85'), _0x57680b('0x95') + _0x1baffd[_0x57680b('0x7f')]()]); } function HSVtoRGB(_0x53de35, _0x308af3, _0x12b9dc) { var _0x30982f = _0x5485a7, _0x27ce6d, _0x184e8e, _0x5b07df, _0x2637f6, _0x2d31e, _0x330659, _0x32561a, _0x494e44; arguments[_0x30982f('0xa9')] === 0x1 && (_0x308af3 = _0x53de35['s'], _0x12b9dc = _0x53de35['v'], _0x53de35 = _0x53de35['h']); _0x2637f6 = Math['floor'](_0x53de35 * 0x6), _0x2d31e = _0x53de35 * 0x6 - _0x2637f6, _0x330659 = _0x12b9dc * (0x1 - _0x308af3), _0x32561a = _0x12b9dc * (0x1 - _0x2d31e * _0x308af3), _0x494e44 = _0x12b9dc * (0x1 - (0x1 - _0x2d31e) * _0x308af3); switch (_0x2637f6 % 0x6) { case 0x0: _0x27ce6d = _0x12b9dc, _0x184e8e = _0x494e44, _0x5b07df = _0x330659; break; case 0x1: _0x27ce6d = _0x32561a, _0x184e8e = _0x12b9dc, _0x5b07df = _0x330659; break; case 0x2: _0x27ce6d = _0x330659, _0x184e8e = _0x12b9dc, _0x5b07df = _0x494e44; break; case 0x3: _0x27ce6d = _0x330659, _0x184e8e = _0x32561a, _0x5b07df = _0x12b9dc; break; case 0x4: _0x27ce6d = _0x494e44, _0x184e8e = _0x330659, _0x5b07df = _0x12b9dc; break; case 0x5: _0x27ce6d = _0x12b9dc, _0x184e8e = _0x330659, _0x5b07df = _0x32561a; break; }return [Math[_0x30982f('0x89')](_0x27ce6d * 0xff), Math[_0x30982f('0x89')](_0x184e8e * 0xff), Math['round'](_0x5b07df * 0xff), 0xff]; } function materialUpdate() { var _0x87c853 = _0x5485a7; for (i in materials) { var _0xfefd9f = materials[i], _0x3b382f = Material[_0x87c853('0x37')](_0xfefd9f[0x0] + '\x20chams'); if (_0x3b382f > 0x0) { Material[_0x87c853('0x106')](_0x3b382f, _0x87c853('0x84'), _0x87c853('0xac')); var _0x2ad094 = UI[_0x87c853('0x81')]('Script\x20items', _0xfefd9f[0x2]) & 0x1; i == 0x1 && Cheat[_0x87c853('0x11')](UI[_0x87c853('0x81')](_0x87c853('0x41'), _0xfefd9f[0x2]) + '\x0a'); Material['SetKeyValue'](_0x3b382f, _0x87c853('0x3'), _0x2ad094 ? '1' : '0'), Material['SetKeyValue'](_0x3b382f, _0x87c853('0xe8'), _0x87c853('0x5c')), Material[_0x87c853('0x106')](_0x3b382f, '$envmapfresnel', '1'); var _0x4bfba4 = UI[_0x87c853('0x61')](_0x87c853('0x41'), _0xfefd9f[0x0] + _0x87c853('0x68')), _0x3dcbda = UI['GetValue']('Script\x20items', _0xfefd9f[0x2]) & 0x2, _0x315c78 = UI['GetValue'](_0x87c853('0x41'), _0xfefd9f[0x2]) & 0x4; _0x315c78 && (_0x4bfba4 = HSVtoRGB(Globals[_0x87c853('0xb0')]() / 0x5 % 0x1, 0x1, 0x1), _0x4bfba4[0x0] /= 0xa, _0x4bfba4[0x1] /= 0xa, _0x4bfba4[0x2] /= 0xa); if (_0x3dcbda) { var _0x183013 = 0x7, _0x2ad094 = 0x5, _0x3c2bfe = 0.6, _0x2d5116 = (Math['sin'](Globals[_0x87c853('0xb0')]() * 0x7) + 0x5) * _0x3c2bfe; _0x4bfba4[0x0] *= _0x2d5116, _0x4bfba4[0x1] *= _0x2d5116, _0x4bfba4[0x2] *= _0x2d5116; } var _0x34d23c = UI[_0x87c853('0x81')]('Script\x20items', _0xfefd9f[0x2]) & 0x8; Material[_0x87c853('0x106')](_0x3b382f, _0x87c853('0x25'), _0x34d23c ? '1' : '0'); var _0x450d17 = UI[_0x87c853('0x81')](_0x87c853('0x41'), _0xfefd9f[0x3]); Material['SetKeyValue'](_0x3b382f, _0x87c853('0xc3'), _0x87c853('0x115') + (0xb - _0x450d17) + '\x20' + (0xb - _0x450d17) * 0x2 + ']'), Material[_0x87c853('0x106')](_0x3b382f, _0x87c853('0x1f'), '[' + _0x4bfba4[0x0] / 0xff + '\x20' + _0x4bfba4[0x1] / 0xff + '\x20' + _0x4bfba4[0x2] / 0xff + ']'), Material[_0x87c853('0x106')](_0x3b382f, _0x87c853('0x6c'), _0x4bfba4[0x3] / 0xff + ''), Material['Refresh'](_0x3b382f); } } } createMat(_0x5485a7('0x8f')), Cheat[_0x5485a7('0x8d')](_0x5485a7('0x83'), _0x5485a7('0x102')); function onUnload() { for (i in materials) { Material['Destroy'](materials[i][0x1]); } } Cheat[_0x5485a7('0x8d')](_0x5485a7('0x7e'), 'onUnload'); const enable = UI[_0x5485a7('0x10e')](_0x5485a7('0x77')), cc = UI['AddCheckbox'](_0x5485a7('0xb1')), cc_tint = UI[_0x5485a7('0xde')]('Tint', 0x0, 0x64), cc_intensity = UI[_0x5485a7('0xde')](_0x5485a7('0xc8'), 0x0, 0x64), fog = UI[_0x5485a7('0x10e')](_0x5485a7('0x7a')), fog_color = UI['AddColorPicker'](_0x5485a7('0x1a')), fog_distance = UI[_0x5485a7('0xde')](_0x5485a7('0xd2'), 0x0, 0x9c4), fog_density = UI[_0x5485a7('0xde')]('Density', 0x0, 0x64), handle_visibility = function () { var _0x5e4e8b = _0x5485a7; const _0x46036c = UI[_0x5e4e8b('0x81')](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), _0x5e4e8b('0x41'), 'Enable\x20color\x20enhancement'), _0x3a6bab = UI['GetValue'](_0x5e4e8b('0x65'), 'JAVASCRIPT', 'Script\x20items', _0x5e4e8b('0xb1')), _0x74f078 = UI[_0x5e4e8b('0x81')](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), _0x5e4e8b('0x41'), _0x5e4e8b('0x7a')); UI[_0x5e4e8b('0x6d')](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), _0x5e4e8b('0x41'), _0x5e4e8b('0x77'), !![]), UI['SetEnabled']('Misc', 'JAVASCRIPT', 'Script\x20items', _0x5e4e8b('0xb1'), _0x46036c), UI['SetEnabled'](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), _0x5e4e8b('0x41'), _0x5e4e8b('0xe'), _0x3a6bab), UI[_0x5e4e8b('0x6d')](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), _0x5e4e8b('0x41'), 'Intensity', _0x3a6bab), UI[_0x5e4e8b('0x6d')](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), 'Script\x20items', _0x5e4e8b('0x7a'), _0x46036c), UI[_0x5e4e8b('0x6d')]('Misc', _0x5e4e8b('0xfb'), _0x5e4e8b('0x41'), _0x5e4e8b('0x1a'), _0x74f078), UI['SetEnabled'](_0x5e4e8b('0x65'), 'JAVASCRIPT', _0x5e4e8b('0x41'), _0x5e4e8b('0xd2'), _0x74f078), UI[_0x5e4e8b('0x6d')](_0x5e4e8b('0x65'), _0x5e4e8b('0xfb'), 'Script\x20items', 'Density', _0x74f078); }, update_fog = function () { var _0x3af37e = _0x5485a7; if (!UI[_0x3af37e('0x81')]('Misc', _0x3af37e('0xfb'), _0x3af37e('0x41'), _0x3af37e('0x7a'))) { Convar[_0x3af37e('0x44')](_0x3af37e('0x9')) !== '0' && Convar[_0x3af37e('0x28')]('fog_override', '0'); return; } Convar[_0x3af37e('0x44')](_0x3af37e('0x9')) !== '1' && Convar['SetString'](_0x3af37e('0x9'), '1'); const _0x45b701 = UI[_0x3af37e('0x61')](_0x3af37e('0x65'), 'JAVASCRIPT', _0x3af37e('0x41'), _0x3af37e('0x1a')), _0x4497d4 = _0x45b701[0x0] + '\x20' + _0x45b701[0x1] + '\x20' + _0x45b701[0x2], _0x31c1f9 = UI[_0x3af37e('0x44')](_0x3af37e('0x65'), _0x3af37e('0xfb'), _0x3af37e('0x41'), _0x3af37e('0xd2')), _0x1ce8ed = (UI['GetValue'](_0x3af37e('0x65'), _0x3af37e('0xfb'), 'Script\x20items', _0x3af37e('0x66')) / 0x64)[_0x3af37e('0x36')](); Convar[_0x3af37e('0x44')](_0x3af37e('0x111')) !== _0x4497d4 && Convar['SetString'](_0x3af37e('0x111'), _0x4497d4), Convar['GetString'](_0x3af37e('0x93')) !== _0x31c1f9 && (Convar[_0x3af37e('0x28')]('fog_start', '0'), Convar[_0x3af37e('0x28')](_0x3af37e('0x93'), _0x31c1f9)), Convar[_0x3af37e('0x44')]('fog_maxdensity') !== _0x1ce8ed && Convar[_0x3af37e('0x28')]('fog_maxdensity', _0x1ce8ed); }, draw_cc = function () { var _0x39d294 = _0x5485a7; if (!UI[_0x39d294('0x81')](_0x39d294('0x65'), 'JAVASCRIPT', 'Script\x20items', _0x39d294('0xb1'))) return; const _0x3e0b7e = UI[_0x39d294('0x81')](_0x39d294('0x65'), _0x39d294('0xfb'), _0x39d294('0x41'), _0x39d294('0xe')), _0x3eb0ea = UI['GetValue'](_0x39d294('0x65'), _0x39d294('0xfb'), _0x39d294('0x41'), 'Intensity'), _0x594b1b = Global['GetScreenSize']()[0x0], _0x12f942 = Global['GetScreenSize']()[0x1]; Render[_0x39d294('0xbb')](0x0, 0x0, _0x594b1b, _0x12f942, [_0x3e0b7e, 0x0, 0xff - _0x3e0b7e, _0x3eb0ea]); }; handle_visibility(), Convar['SetString'](_0x5485a7('0x82'), '0'); function main() { handle_visibility(), update_fog(), draw_cc(); } Global[_0x5485a7('0x8d')]('Draw', _0x5485a7('0x10b')), UI['AddSliderFloat']('Aspect\x20Ratio', 0x1, 0x2), UI['AddLabel'](_0x5485a7('0x75')), UI[_0x5485a7('0x10e')](_0x5485a7('0xfa')), UI[_0x5485a7('0x10e')](_0x5485a7('0xf0')); var aspect_cache = 0x0; function aspect() { var _0x551468 = _0x5485a7, _0x3e6a15 = UI['GetValue'](_0x551468('0x29')), _0x297baa = UI[_0x551468('0x81')](_0x551468('0xfa')), _0xe1a483 = UI[_0x551468('0x81')](_0x551468('0xf0')); _0x297baa != 0x0 && (UI['SetValue'](_0x551468('0x29'), 1.33333333), UI[_0x551468('0xcf')]('4:3\x20mode', 0x0)), _0xe1a483 != 0x0 && (UI[_0x551468('0xcf')](_0x551468('0x29'), 1.77777777), UI[_0x551468('0xcf')](_0x551468('0xf0'), 0x0)), aspect_cache != _0x3e6a15 && (aspect_cache = _0x3e6a15, UI[_0x551468('0xcf')](_0x551468('0x65'), 'GENERAL', _0x551468('0x8'), _0x551468('0xfc'), 0x1), Global[_0x551468('0xd8')](_0x551468('0x2f') + _0x3e6a15)); } Cheat[_0x5485a7('0x8d')]('CreateMove', 'aspect'); const hitgroup = ['Head', 'Neck', _0x5485a7('0xa8'), _0x5485a7('0xc0'), 'Thorax', _0x5485a7('0x5f'), _0x5485a7('0x6f'), _0x5485a7('0xc5'), 'Right\x20thigh', 'Left\x20calf', _0x5485a7('0x64'), _0x5485a7('0x12'), 'Right\x20foot', _0x5485a7('0xf1'), 'Right\x20hand', 'Left\x20upper\x20arm', _0x5485a7('0xbe'), _0x5485a7('0xb4'), _0x5485a7('0x101')], activeLogs = [], ragebotTarget = {}; UI[_0x5485a7('0x30')]('Hitlog\x20Color'); var color = UI[_0x5485a7('0x61')](_0x5485a7('0x9f'), 'JAVASCRIPT', _0x5485a7('0xcb'), 'Hitlog\x20Color'); if (color[0x0] === 0x0 && color[0x1] === 0x0 && color[0x2] === 0x0 && color[0x3] === 0x0) UI[_0x5485a7('0xbd')](_0x5485a7('0x9f'), _0x5485a7('0xfb'), _0x5485a7('0xcb'), _0x5485a7('0x6e'), [0xff, 0x0, 0x0, 0xff]); function getMultiColorTextSize(_0x3cc854) { var _0x4a34fd = _0x5485a7, _0xaf11cf = 0x0; for (var _0xc561ec = 0x0; _0xc561ec < _0x3cc854['length']; _0xc561ec++) { _0xaf11cf += Render[_0x4a34fd('0x6a')](_0x3cc854[_0xc561ec][0x1], 0x8)[0x0]; } return _0xaf11cf; } function drawMultiColorText(_0xbe30ca, _0x3154b4, _0x534d37) { var _0x20f62f = _0x5485a7, _0x1d8c80 = 0x0; for (var _0x302324 = 0x0; _0x302324 < _0x534d37[_0x20f62f('0xa9')]; _0x302324++) { const _0x3092b5 = _0x534d37[_0x302324], _0x568d46 = _0x3092b5[0x1]; var _0x26eee1 = _0x3092b5[0x0]; typeof _0x3092b5[0x0] == _0x20f62f('0xfd') && (_0x26eee1 = UI[_0x20f62f('0x61')](_0x20f62f('0x9f'), _0x20f62f('0xfb'), _0x20f62f('0xcb'), _0x20f62f('0x6e'))); Render['String'](_0xbe30ca + _0x1d8c80, _0x3154b4, 0x0, _0x568d46, _0x26eee1, 0x8); const _0x508d7a = Render[_0x20f62f('0x6a')](_0x568d46, 0x8)[0x0]; _0x1d8c80 += _0x508d7a; } } function showLog(_0x1bf202, _0x152823) { var _0xfc565c = _0x5485a7; const _0x4e88be = _0x152823[_0xfc565c('0x6')], _0x34ce40 = getMultiColorTextSize(_0x4e88be), _0x3c6a75 = Global['Realtime']() < _0x152823[_0xfc565c('0xb7')], _0x32ab30 = 0x2d + 0x2a * (_0x1bf202 - 0x1), _0x4ae176 = 0xc, _0x33d7fe = _0x34ce40 < 0x96 ? 0x96 : _0x34ce40 + 0xf, _0x5c78e9 = 0x3, _0x573652 = 0xf; _0x152823['firstLayer'] = _0x3c6a75 ? Math[_0xfc565c('0xa0')](_0x152823[_0xfc565c('0x18')] + _0x33d7fe * 0.025, _0x33d7fe + _0x573652) : Math['max'](_0x152823[_0xfc565c('0x18')] - _0x5c78e9, 0x0), _0x152823[_0xfc565c('0x10')] = _0x3c6a75 ? Math[_0xfc565c('0xa0')](_0x152823[_0xfc565c('0x10')] + _0x33d7fe * 0.015, _0x33d7fe) : Math['max'](_0x152823[_0xfc565c('0x10')] - 0x2 * _0x5c78e9, 0x0); var _0x264808 = UI[_0xfc565c('0x61')](_0xfc565c('0x9f'), _0xfc565c('0xfb'), _0xfc565c('0xcb'), _0xfc565c('0x6e')); Render[_0xfc565c('0xbb')](_0x152823[_0xfc565c('0x18')] - _0x152823[_0xfc565c('0x18')], _0x32ab30, _0x152823[_0xfc565c('0x18')], _0x4ae176 + 0x14, _0x264808), Render[_0xfc565c('0xbb')](_0x152823['secondLayer'] - _0x152823[_0xfc565c('0x10')], _0x32ab30, _0x152823[_0xfc565c('0x10')], _0x4ae176 + 0x14, [0x10, 0x0, 0x0, 0xff]), drawMultiColorText(_0x152823[_0xfc565c('0x10')] - _0x33d7fe + 0x5, _0x32ab30 + 0x3 + 0x6, _0x4e88be), activeLogs[_0x1bf202] = _0x152823, _0x152823[_0xfc565c('0x10')] === 0x0 && activeLogs[_0xfc565c('0x69')](_0x1bf202, 0x1); } function onDraw() { for (var _0x1ece72 = 0x0; _0x1ece72 < activeLogs['length']; _0x1ece72++) { showLog(_0x1ece72, activeLogs[_0x1ece72]); } } function onRagebotFire() { var _0x241d20 = _0x5485a7; ragebotTarget[Entity[_0x241d20('0x57')](Event[_0x241d20('0xaa')]('target_index'))] = { 'hitgroup': hitgroup[Event[_0x241d20('0xaa')](_0x241d20('0xd3'))], 'hc': Event[_0x241d20('0xaa')](_0x241d20('0xa4')), 'safepoint': Event[_0x241d20('0xaa')]('safepoint'), 'exploit': Event[_0x241d20('0xaa')](_0x241d20('0xef')) }; } function onPlayerHurt() { var _0x506fb1 = _0x5485a7; const _0xe0e456 = Entity['GetEntityFromUserID'](Event[_0x506fb1('0xaa')]('attacker')), _0x14e2c9 = Entity[_0x506fb1('0x98')](Event[_0x506fb1('0xaa')]('userid')), _0x115d7a = Entity[_0x506fb1('0x57')](_0x14e2c9); if (_0xe0e456 === Entity[_0x506fb1('0x112')]() && _0x14e2c9 !== Entity[_0x506fb1('0x112')]()) { const _0x5d6b5e = ragebotTarget[_0x115d7a]; if (_0x5d6b5e != null) { const _0x3a3c02 = [[[0xff, 0xff, 0xff, 0xff], 'Hit\x20'], [0x0, _0x115d7a[_0x506fb1('0xdc')](0x0, 0x1c)], [[0xff, 0xff, 0xff, 0xff], _0x506fb1('0x104')], [0x0, _0x5d6b5e[_0x506fb1('0x13')]], [[0xff, 0xff, 0xff, 0xff], '\x20for\x20'], [0x0, Event[_0x506fb1('0xaa')]('dmg_health')[_0x506fb1('0x36')]()], [[0xff, 0xff, 0xff, 0xff], _0x506fb1('0x63')], [0x0, Event[_0x506fb1('0xaa')](_0x506fb1('0x34')) + _0x506fb1('0x26')], [[0xff, 0xff, 0xff, 0xff], ')']]; activeLogs[_0x506fb1('0x117')]({ 'text': _0x3a3c02, 'delay': Global[_0x506fb1('0xb0')]() + 0x5, 'firstLayer': 0x0, 'secondLayer': 0x0 }); } } } Global[_0x5485a7('0x8d')](_0x5485a7('0x47'), _0x5485a7('0xf')), Global[_0x5485a7('0x8d')](_0x5485a7('0x3a'), 'onRagebotFire'), Global[_0x5485a7('0x8d')](_0x5485a7('0xea'), _0x5485a7('0x3b')); var screen_size = Global[_0x5485a7('0x4e')](); Main(); var heavy_cache = UI['GetValue'](_0x5485a7('0xd7'), _0x5485a7('0x97'), _0x5485a7('0xc6'), _0x5485a7('0xe7')), scout_cache = UI['GetValue'](_0x5485a7('0xd7'), 'SCOUT', 'Targeting', _0x5485a7('0xe7')), awp_cache = UI['GetValue'](_0x5485a7('0xd7'), _0x5485a7('0x8c'), _0x5485a7('0xc6'), _0x5485a7('0xe7')), auto_cache = UI[_0x5485a7('0x81')](_0x5485a7('0xd7'), _0x5485a7('0x10a'), _0x5485a7('0xc6'), 'Minimum\x20damage'), isInverted, drawLeft = 0x0; drawHideReal = 0x1; var drawRight = 0x0, drawBack = 0x0, leftWasPressed = ![], rightWasPressed = ![], backWasPressed = ![], upWasPressed = ![]; function isActive(_0x36c01a) { return UI['IsHotkeyActive']('Script\x20items', _0x36c01a); } function setValue(_0x418c0e, _0x410302) { var _0x1fb07b = _0x5485a7; UI[_0x1fb07b('0xcf')](_0x1fb07b('0xd7'), _0x418c0e[_0x1fb07b('0xa2')](), _0x1fb07b('0xc6'), _0x1fb07b('0xe7'), _0x410302); } function isHeavyPistol(_0x18777c) { var _0x6e8738 = _0x5485a7; if (_0x18777c == _0x6e8738('0x76') || _0x18777c == 'desert\x20eagle') return !![]; } function isAutoSniper(_0xdd1851) { var _0x444a5a = _0x5485a7; if (_0xdd1851 == _0x444a5a('0xcc') || weapon_name == 'g3sg1') return !![]; } function isDoubleTapActive() { var _0x8b4b7d = _0x5485a7, _0x3a5d83 = UI[_0x8b4b7d('0x81')](_0x8b4b7d('0xd7'), 'Exploits', _0x8b4b7d('0x0')), _0x3c262e = UI[_0x8b4b7d('0x114')](_0x8b4b7d('0xd7'), _0x8b4b7d('0x9a'), _0x8b4b7d('0x0')); return _0x3a5d83 && _0x3c262e; } function correctLBYMode() { var _0x1e0390 = _0x5485a7; isDoubleTapActive() == 0x1 ? (UI[_0x1e0390('0xcf')](_0x1e0390('0xd5'), _0x1e0390('0x17'), _0x1e0390('0x90'), '1'), UI['SetValue'](_0x1e0390('0xd7'), 'AUTOSNIPER', _0x1e0390('0xb2'), _0x1e0390('0xe9'), 0x6)) : (UI['SetValue'](_0x1e0390('0xd5'), _0x1e0390('0x17'), _0x1e0390('0x90'), '1'), UI[_0x1e0390('0xcf')](_0x1e0390('0xd7'), _0x1e0390('0x10a'), _0x1e0390('0xb2'), _0x1e0390('0xe9'), 0x40)); } correctLBYMode(); var jump = ![], prefer_safe_backup = ![]; function drawString() { var _0x982d51 = _0x5485a7; if (World['GetServerString']() == '') return; correctLBYMode(), isDoubletap = UI[_0x982d51('0x114')](_0x982d51('0xd7'), _0x982d51('0x9a'), _0x982d51('0x0')), isInverted = UI[_0x982d51('0x114')](_0x982d51('0xd5'), 'Fake\x20angles', _0x982d51('0x99')), isHideReal = UI[_0x982d51('0x81')](_0x982d51('0xd5'), _0x982d51('0x17'), _0x982d51('0x87')), isHIDESHOTS = UI['IsHotkeyActive'](_0x982d51('0xd7'), 'Exploits', _0x982d51('0xf7')), isDMG = isActive(_0x982d51('0xb8')), isSP = UI[_0x982d51('0x114')](_0x982d51('0xd7'), _0x982d51('0x110'), 'Force\x20safe\x20point'), isOVHBX = ![], isFD = UI[_0x982d51('0x114')](_0x982d51('0xd5'), 'Extra', _0x982d51('0x62')), dt_color = [0xff, 0x0, 0x0, 0xff]; var _0x1f3632 = UI['GetValue'](_0x982d51('0xd5'), 'Fake\x20angles', _0x982d51('0x90')) == '1', _0x1afbd7 = UI[_0x982d51('0x81')](_0x982d51('0xd5'), 'Fake\x20angles', _0x982d51('0x90')) == '1'; if (_0x1f3632) Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x28, 0x0, 'TRY\x20HARDER\x20JS', [0xb1, 0x97, 0xff, 0xff], 0x3); else _0x1afbd7 && Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x28, 0x0, 'TRY\x20HARDER\x20JS', [0xb1, 0x97, 0xff, 0xff], 0x3); is_DT = ![], g_Local = Entity[_0x982d51('0x112')](), g_Local_weapon = Entity['GetWeapon'](g_Local), weapon_name = Entity[_0x982d51('0x57')](g_Local_weapon), g_Local_classname = Entity['GetClassName'](g_Local_weapon); if (UI[_0x982d51('0x81')](_0x982d51('0x65'), _0x982d51('0xfb'), _0x982d51('0x41'), _0x982d51('0xda')) && g_Local_classname == _0x982d51('0x5b')) is_force_safe_point = UI[_0x982d51('0x114')](_0x982d51('0xd7'), _0x982d51('0xb5'), _0x982d51('0x110'), 'Force\x20safe\x20point'), !is_force_safe_point && (UI[_0x982d51('0xec')](_0x982d51('0xd7'), _0x982d51('0xb5'), _0x982d51('0x110'), _0x982d51('0x109')), prefer_safe_backup = !![]); else prefer_safe_backup && (UI['ToggleHotkey'](_0x982d51('0xd7'), _0x982d51('0xb5'), _0x982d51('0x110'), 'Force\x20safe\x20point'), prefer_safe_backup = ![]); DT = _0x982d51('0x52'), add_y = 0x3a; UI[_0x982d51('0x81')]('Rage', _0x982d51('0xb5'), 'Exploits', 'Doubletap') && (isDoubletap ? dt_color = [0xff * (0x1 - Exploit[_0x982d51('0x55')]()), 0xff * Exploit[_0x982d51('0x55')](), 0x0, 0xff] : dt_color = [0xff, 0x0, 0x0, 0xff]); g_Local_classname == _0x982d51('0xc1') || g_Local_classname == _0x982d51('0xab') || g_Local_classname == _0x982d51('0x5b') || weapon_name == _0x982d51('0x76') || g_Local_classname == 'CHEGrenade' || g_Local_classname == _0x982d51('0xa5') || g_Local_classname == _0x982d51('0xc7') || g_Local_classname == 'CFlashbang' || g_Local_classname == _0x982d51('0xd0') || g_Local_classname == _0x982d51('0x4d') || g_Local_classname == _0x982d51('0x22') || g_Local_classname == _0x982d51('0x10f') ? (isFD ? DT = DT + _0x982d51('0xee') : DT = DT + _0x982d51('0xad'), is_DT = ![]) : (DT = isFD ? _0x982d51('0x118') : _0x982d51('0x52'), is_DT = isFD == ![] && isDoubletap); UI[_0x982d51('0xcf')]('Rage', _0x982d51('0x9a'), _0x982d51('0x0'), is_DT); if (drawLeft) Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? _0x982d51('0x91') : _0x982d51('0x3f'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x1e'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x8a'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FAKE\x20DUCK', [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else { if (drawRight) Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? _0x982d51('0x91') : _0x982d51('0x3f'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x1e'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x8a'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x2c'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else { if (drawBack) Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? _0x982d51('0x91') : _0x982d51('0x3f'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x1e'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x8a'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x2c'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else drawHideReal && (Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isHideReal ? _0x982d51('0xe0') : _0x982d51('0xe0'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x1e'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x8a'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x982d51('0x2c'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x982d51('0xd1')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3))); } } } UI[_0x5485a7('0x30')](_0x5485a7('0x3e')); var color = UI['GetColor'](_0x5485a7('0x65'), _0x5485a7('0xfb'), 'Script\x20items', _0x5485a7('0x3e')); if (color[0x3] == 0x0) UI[_0x5485a7('0xbd')]('Misc', _0x5485a7('0xfb'), 'Script\x20items', _0x5485a7('0x3e'), [0x59, 0x77, 0xef, 0xff]); function draw() { var _0x4aeb84 = _0x5485a7; if (!World[_0x4aeb84('0xf3')]()) return; var _0x1c7d5b = new Date(), _0x9973f6 = _0x1c7d5b[_0x4aeb84('0x8e')](), _0x488739 = _0x1c7d5b[_0x4aeb84('0x42')](), _0x551774 = _0x1c7d5b[_0x4aeb84('0x9d')](), _0x40ac63 = _0x9973f6 <= 0x9 ? '0' + _0x9973f6 + ':' : _0x9973f6 + ':', _0x2c4ed0 = _0x488739 <= 0x9 ? '0' + _0x488739 + ':' : _0x488739 + ':', _0x20bff6 = _0x551774 <= 0x9 ? '0' + _0x551774 : _0x551774, _0x1e6b24 = Globals[_0x4aeb84('0x20')]()[_0x4aeb84('0x36')](), _0x4bad04 = Math[_0x4aeb84('0x89')](Entity['GetProp'](Entity[_0x4aeb84('0x112')](), 'CPlayerResource', _0x4aeb84('0x73')))['toString'](); color = UI[_0x4aeb84('0x61')](_0x4aeb84('0x65'), 'JAVASCRIPT', 'Script\x20items', _0x4aeb84('0x3e')); var _0x46e806 = Render[_0x4aeb84('0xae')](_0x4aeb84('0xd9'), 0x7, 0x190), _0x5548d0 = _0x4aeb84('0x58') + Cheat[_0x4aeb84('0x4')]() + _0x4aeb84('0xca') + _0x4bad04 + _0x4aeb84('0x3c') + _0x1e6b24 + _0x4aeb84('0x7d') + _0x40ac63 + _0x2c4ed0 + _0x20bff6, _0x28aac9 = Render[_0x4aeb84('0x5d')](_0x5548d0, _0x46e806)[0x0] + 0x8, _0x5edc0d = Global[_0x4aeb84('0x4e')]()[0x0]; _0x5edc0d = _0x5edc0d - _0x28aac9 - 0xa, Render[_0x4aeb84('0xbb')](_0x5edc0d, 0xa, _0x28aac9, 0x2, [color[0x0], color[0x1], color[0x2], 0xff]), Render[_0x4aeb84('0xbb')](_0x5edc0d, 0xc, _0x28aac9, 0x12, [0x11, 0x11, 0x11, color[0x3]]), Render[_0x4aeb84('0xe5')](_0x5edc0d + 0x4, 0xa + 0x4, 0x0, _0x5548d0, [0xff, 0xff, 0xff, 0xff], _0x46e806); } Cheat['RegisterCallback'](_0x5485a7('0x47'), 'draw');