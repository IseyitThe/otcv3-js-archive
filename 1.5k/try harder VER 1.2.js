var _0x2a7d = ['delay', 'Safe\x20AWP', 'CIncendiaryGrenade', 'Hitboxes', 'bullet', 'JAVASCRIPT', 'GetCharge', 'Minimum\x20damage\x20override', 'Scout\x20Mindmg', 'ssg\x2008', 'toLowerCase', 'CSmokeGrenade', 'smoke\x20grenade', 'Upper\x20chest', '[0\x20', 'target_index', 'getMinutes', 'FAKE\x20DUCK', 'ragebot_fire', 'GetServerString', 'AddHotkey', 'GetEntityFromUserID', 'Body', 'negev', 'm4a4', 'Safety\x20after\x20x\x20misses', 'Latency', 'Rainbow', 'p2000', 'IsMenuOpen', 'Head\x20override\x20key', 'GENERAL', '4:3\x20mode', 'Misc', 'number', 'Rage\x20Anti-Aim', 'usp\x20s', 'GetCursorPosition', 'TRY\x20HARDER\x20JS', 'galil\x20ar', 'Vibrancy\x20', 'GetValue', 'Fake\x20duck', 'nomad\x20knife', '\x20|\x20delay:\x20', 'Watermark', 'AddColorPicker', 'ms\x20|\x20', 'CDecoyGrenade', 'Material', 'DMG', 'toString', 'health', 'ToggleHotkey', 'zeus\x20x27', 'Thorax', 'Tickbase_y', 'Off', 'r_aspectratio\x20', 'Left\x20hand', 'FAKE', 'DT\x20', 'pp\x20bizon', 'Fog\x20correction', '\x20in\x20the\x20', 'DISCORD.GG/xBHzt5T', 'Pelvis', '\x20chams', 'Hollow', 'onPlayerHurt', 'main_dt', 'butterfly\x20knife', 'dmg_health', 'flip\x20knife', 'm_iPing', 'hitgroup', 'HIDESHOT', '\x20for\x20', 'AddSliderInt', 'Hide\x20real\x20angle', 'SCOUT', 'drawString', 'LBY\x20mode', 'Left\x20foot', 'AddMultiDropdown', '\x20damage\x20(', 'five\x20seven', 'HEAVY\x20PISTOL', 'secondLayer', 'onCreateMove', 'Minimum\x20damage', 'Fake\x20angles', 'splice', 'CWeaponSSG08', 'fog_end', 'ak\x2047', 'SetEnabled', 'Wireframe', 'AddFont', 'player_death', 'Better\x20glow', 'ursus\x20knife', 'scar\x2020', 'classic\x20knife', 'hitbox', 'Anti-Aim', 'Unload', 'ExecuteCommand', 'AWP', 'IsDormant', 'draw', 'Pulse', 'Targeting', 'Color', 'Script\x20Items', 'fog_maxdensity', 'AddCheckbox', 'CFlashbang', 'GetFakeYaw', 'SetKeyValue', 'safepoint', 'Verdana\x20Bold', 'Hide\x20shots', 'GetClassName', 'Distance', 'Print', 'CreateMove', 'g3sg1', 'hitchance', 'mp5\x20sd', '$alpha', 'r8\x20revolver', '$envmap', 'max', 'Doubletap\x20|\x20tickbase(v):\x2016', 'Doubletap\x20|\x20tickbase(v):\x200', 'on_player_death', '\x20options', 'tick\x20|\x20', 'CWeaponTaser', 'c4\x20explosive', 'Refresh', 'Neck', 'GetEyePosition', 'Intensity', 'Tickcount', 'karambit', 'Tickbase_x', 'Hitlog\x20Color', 'GetTarget', 'Left\x20calf', 'GetProp', 'CC4', 'exploit', 'GetWeapon', 'm9\x20bayonet', 'onUnload', 'Yaw\x20offset', 'General', 'Exploits', 'OnBulletImpact', 'player_connect_full', 'nova', 'abs', 'GetColor', 'Heavy\x20Pistol\x20Mindmg', 'Doubletap', 'Inverter', 'mp9', 'GetUsername', 'CMolotovGrenade', 'GetInt', 'stiletto\x20knife', '1.33\x20is\x204:3\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x201.77\x20is\x2016:9', 'Right\x20upper\x20arm', 'paracord\x20knife', 'Auto\x20stop\x20mode', 'Realtime', 'CKnife', 'AUTOSNIPER', 'Auto\x20Mindmg', '$additive', 'GetName', 'substring', 'Enable\x20color\x20enhancement', 'm249', 'attacker', 'MISC', 'IsEnemy', 'String', 'RegisterCallback', 'player_connect', '$baseTexture', 'on_player_hurt', 'Tickrate', 'On\x20Hit', 'Tint', 'IsKeyPressed', 'SetValue', 'player_hurt', 'desert\x20eagle', 'fog_color', 'GetScreenSize', 'round_start', 'Draw', '(active\x20weapon)', 'Aspect\x20Ratio', 'getSeconds', 'knife', 'Doubletap\x20|\x20tickbase(v):\x207', 'Frametime', 'cos', 'GetString', 'Curtime', 'Right\x20hand', 'gut\x20knife', 'falchion\x20knife', 'bayonet', '$wireframe', 'AddSliderFloat', 'molotov', 'm_vecOrigin', 'Miscellaneous', 'onRagebotFire', '16:9\x20mode', 'fog_override', 'Right\x20calf', 'Rage', 'FilledRect', 'decoy\x20grenade', '$envmapfresnel', 'Color\x20correction', 'ump\x2045', 'RIGHT', 'round', 'userid', 'AWP\x20Mindmg', 'r_3dsky', 'Right\x20thigh', 'GetLocalPlayer', 'min', 'LEFT', 'AddDropdown', '\x20health\x20remaining', 'SetColor', 'onDraw', 'p90', 'firstLayer', 'CWeaponAWP', 'CHEGrenade', 'GetFloat', 'sin', 'Left\x20thigh', 'mag\x207', 'Left\x20forearm', 'Extra', 'Force\x20safe\x20point', 'length', 'GetRealYaw', 'navaja\x20knife', 'IsValid', 'CPlayerResource', 'sawed\x20off', '(fakeduck)', 'skeleton\x20knife', 'Accuracy', 'mac\x2010', 'famas', 'IsHotkeyActive', 'high\x20explosive\x20grenade', 'TextSize', 'vgui/white', 'survival\x20knife', 'xm1014', 'on_ragebot_fire', '$envmapfresnelminmaxexp', 'on_create_move', 'incendiary\x20grenade', 'Script\x20items', 'p250', 'DT\x20(fakeduck)', 'talon\x20knife', 'TextSizeCustom', 'Anti\x20Bruteforce', 'Density', 'StringCustom', 'HIDE\x20SHOTS', 'awp', 'SetString']; (function (_0x5d32e2, _0x2a7d96) { var _0x1b2c6d = function (_0x1e9ad0) { while (--_0x1e9ad0) { _0x5d32e2['push'](_0x5d32e2['shift']()); } }; _0x1b2c6d(++_0x2a7d96); }(_0x2a7d, 0x142)); var _0x1b2c = function (_0x5d32e2, _0x2a7d96) { _0x5d32e2 = _0x5d32e2 - 0x0; var _0x1b2c6d = _0x2a7d[_0x5d32e2]; return _0x1b2c6d; }; var _0x1a6a7c = _0x1b2c, screen_size = Global[_0x1a6a7c('0xa9')](); Main(); var heavy_cache = UI[_0x1a6a7c('0x8')](_0x1a6a7c('0xc2'), _0x1a6a7c('0x36'), _0x1a6a7c('0x4f'), _0x1a6a7c('0x39')), scout_cache = UI['GetValue']('Rage', 'SCOUT', _0x1a6a7c('0x4f'), _0x1a6a7c('0x39')), awp_cache = UI['GetValue']('Rage', _0x1a6a7c('0x4b'), 'Targeting', _0x1a6a7c('0x39')), auto_cache = UI[_0x1a6a7c('0x8')](_0x1a6a7c('0xc2'), _0x1a6a7c('0x92'), _0x1a6a7c('0x4f'), 'Minimum\x20damage'), isInverted, drawLeft = 0x0; drawHideReal = 0x1; var drawRight = 0x0, drawBack = 0x0, leftWasPressed = ![], rightWasPressed = ![], backWasPressed = ![], upWasPressed = ![]; function isActive(_0x1e9ad0) { var _0xdc2f1 = _0x1a6a7c; return UI[_0xdc2f1('0xeb')](_0xdc2f1('0xf5'), _0x1e9ad0); } function setValue(_0x388f4f, _0x322a7f) { var _0x213f93 = _0x1a6a7c; UI[_0x213f93('0xa5')](_0x213f93('0xc2'), _0x388f4f['toUpperCase'](), 'Targeting', _0x213f93('0x39'), _0x322a7f); } function isHeavyPistol(_0x353389) { if (_0x353389 == 'r8\x20revolver' || _0x353389 == 'desert\x20eagle') return !![]; } function isAutoSniper(_0x5cd215) { var _0x2b4a92 = _0x1a6a7c; if (_0x5cd215 == _0x2b4a92('0x45') || weapon_name == _0x2b4a92('0x5e')) return !![]; } function isDoubleTapActive() { var _0x532c0c = _0x1a6a7c, _0x53e05a = UI['GetValue'](_0x532c0c('0xc2'), _0x532c0c('0x7e'), _0x532c0c('0x85')), _0x1b59fe = UI['IsHotkeyActive'](_0x532c0c('0xc2'), _0x532c0c('0x7e'), _0x532c0c('0x85')); return _0x53e05a && _0x1b59fe; } function correctLBYMode() { var _0x27a455 = _0x1a6a7c; isDoubleTapActive() == 0x1 ? (UI['SetValue'](_0x27a455('0x48'), _0x27a455('0x3a'), _0x27a455('0x31'), '1'), UI['SetValue'](_0x27a455('0xc2'), _0x27a455('0x92'), _0x27a455('0xe8'), 'Auto\x20stop\x20mode', 0x6)) : (UI[_0x27a455('0xa5')]('Anti-Aim', _0x27a455('0x3a'), _0x27a455('0x31'), '1'), UI['SetValue'](_0x27a455('0xc2'), 'AUTOSNIPER', 'Accuracy', _0x27a455('0x8f'), 0x40)); } correctLBYMode(); var jump = ![], prefer_safe_backup = ![]; function drawString() { var _0x556341 = _0x1a6a7c; if (World[_0x556341('0x113')]() == '') return; correctLBYMode(), isDoubletap = UI[_0x556341('0xeb')]('Rage', _0x556341('0x7e'), _0x556341('0x85')), isInverted = UI[_0x556341('0xeb')](_0x556341('0x48'), _0x556341('0x3a'), 'Inverter'), isHideReal = UI['GetValue'](_0x556341('0x48'), _0x556341('0x3a'), _0x556341('0x2e')), isHIDESHOTS = UI[_0x556341('0xeb')](_0x556341('0xc2'), 'Exploits', 'Hide\x20shots'), isDMG = isActive(_0x556341('0x107')), isSP = UI[_0x556341('0xeb')](_0x556341('0xc2'), _0x556341('0x7d'), 'Force\x20safe\x20point'), isOVHBX = ![], isFD = UI[_0x556341('0xeb')](_0x556341('0x48'), _0x556341('0xde'), _0x556341('0x9')), dt_color = [0xff, 0x0, 0x0, 0xff]; var _0x11e9e0 = UI[_0x556341('0x8')](_0x556341('0x48'), _0x556341('0x3a'), _0x556341('0x31')) == '1', _0x400f8f = UI['GetValue'](_0x556341('0x48'), _0x556341('0x3a'), _0x556341('0x31')) == '1'; if (_0x11e9e0) Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x28, 0x0, _0x556341('0x5'), [0xb1, 0x97, 0xff, 0xff], 0x3); else _0x400f8f && Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x28, 0x0, _0x556341('0x5'), [0xb1, 0x97, 0xff, 0xff], 0x3); is_DT = ![], g_Local = Entity[_0x556341('0xce')](), g_Local_weapon = Entity[_0x556341('0x79')](g_Local), weapon_name = Entity[_0x556341('0x95')](g_Local_weapon), g_Local_classname = Entity['GetClassName'](g_Local_weapon); if (UI['GetValue'](_0x556341('0x0'), _0x556341('0x105'), 'Script\x20items', _0x556341('0x101')) && g_Local_classname == _0x556341('0xd7')) is_force_safe_point = UI['IsHotkeyActive'](_0x556341('0xc2'), _0x556341('0x11f'), 'General', _0x556341('0xdf')), !is_force_safe_point && (UI[_0x556341('0x14')](_0x556341('0xc2'), _0x556341('0x11f'), _0x556341('0x7d'), 'Force\x20safe\x20point'), prefer_safe_backup = !![]); else prefer_safe_backup && (UI[_0x556341('0x14')](_0x556341('0xc2'), 'GENERAL', 'General', 'Force\x20safe\x20point'), prefer_safe_backup = ![]); DT = _0x556341('0x1c'), add_y = 0x3a; UI[_0x556341('0x8')](_0x556341('0xc2'), _0x556341('0x11f'), _0x556341('0x7e'), 'Doubletap') && (isDoubletap ? dt_color = [0xff * (0x1 - Exploit[_0x556341('0x106')]()), 0xff * Exploit['GetCharge'](), 0x0, 0xff] : dt_color = [0xff, 0x0, 0x0, 0xff]); g_Local_classname == _0x556341('0x91') || g_Local_classname == _0x556341('0x3c') || g_Local_classname == _0x556341('0xd7') || weapon_name == _0x556341('0x62') || g_Local_classname == _0x556341('0xd8') || g_Local_classname == _0x556341('0x89') || g_Local_classname == 'CIncendiaryGrenade' || g_Local_classname == _0x556341('0x54') || g_Local_classname == 'CSmokeGrenade' || g_Local_classname == 'CDecoyGrenade' || g_Local_classname == _0x556341('0x6a') || g_Local_classname == _0x556341('0x77') ? (isFD ? DT = DT + _0x556341('0xe6') : DT = DT + _0x556341('0xac'), is_DT = ![]) : (DT = isFD ? _0x556341('0xf7') : _0x556341('0x1c'), is_DT = isFD == ![] && isDoubletap); UI['SetValue'](_0x556341('0xc2'), 'Exploits', _0x556341('0x85'), is_DT); if (drawLeft) Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? _0x556341('0xd0') : _0x556341('0xc8'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0xfd'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x11'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x111'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else { if (drawRight) Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? 'LEFT' : 'RIGHT', [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0xfd'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x11'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x111'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else { if (drawBack) Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isInverted ? 'LEFT' : _0x556341('0xc8'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0xfd'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'DMG', [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x111'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3)); else drawHideReal && (Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x31, 0x0, isHideReal ? 'DISCORD.GG/xBHzt5T' : _0x556341('0x20'), [0xd1, 0x8b, 0xe6, 0xff], 0x3), Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + 0x3a, 0x0, is_DT ? DT : DT, dt_color, 0x3), isHIDESHOTS && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0xfd'), [0x7c, 0xc3, 0xd, 0xff], 0x3)), isDMG && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x11'), [0xff, 0xff, 0xff, 0xff], 0x3)), isFD && (add_y = add_y + 0x9, Render['String'](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, _0x556341('0x111'), [0xff, 0xff, 0xff, 0xff], 0x3)), isSP && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'SP', [0x7c, 0xc3, 0xd, 0xff], 0x3)), isOVHBX && (add_y = add_y + 0x9, Render[_0x556341('0x9c')](screen_size[0x0] / 0x2 + 0x5, screen_size[0x1] / 0x2 + add_y, 0x0, 'FB', [0x7c, 0xc3, 0xd, 0xff], 0x3))); } } } var restore_values = ![]; function override_mindmg() { var _0x312f2d = _0x1a6a7c; if (!isActive(_0x312f2d('0x107'))) { restore_values ? (restore_values = ![], setValue(_0x312f2d('0x36'), heavy_cache), setValue(_0x312f2d('0x2f'), scout_cache), setValue('AWP', awp_cache), setValue('AUTOSNIPER', auto_cache)) : (heavy_cache = UI[_0x312f2d('0x8')](_0x312f2d('0xc2'), _0x312f2d('0x36'), 'Targeting', _0x312f2d('0x39')), scout_cache = UI[_0x312f2d('0x8')](_0x312f2d('0xc2'), _0x312f2d('0x2f'), _0x312f2d('0x4f'), 'Minimum\x20damage'), awp_cache = UI[_0x312f2d('0x8')](_0x312f2d('0xc2'), _0x312f2d('0x4b'), 'Targeting', 'Minimum\x20damage'), auto_cache = UI[_0x312f2d('0x8')](_0x312f2d('0xc2'), 'AUTOSNIPER', 'Targeting', _0x312f2d('0x39'))); return; } restore_values = !![], heavy_value = UI[_0x312f2d('0x8')](_0x312f2d('0xf5'), _0x312f2d('0x84')), scout_value = UI[_0x312f2d('0x8')]('Script\x20items', _0x312f2d('0x108')), awp_value = UI[_0x312f2d('0x8')](_0x312f2d('0xf5'), _0x312f2d('0xcb')), auto_value = UI[_0x312f2d('0x8')]('Script\x20items', 'Auto\x20Mindmg'), weapon_name = Entity['GetName'](Entity[_0x312f2d('0x79')](Entity[_0x312f2d('0xce')]())), isHeavyPistol(weapon_name) && setValue('HEAVY\x20PISTOL', heavy_value), weapon_name == _0x312f2d('0x109') && setValue(_0x312f2d('0x2f'), scout_value), weapon_name == _0x312f2d('0xfe') && setValue(_0x312f2d('0x4b'), awp_value), isAutoSniper(weapon_name) && setValue(_0x312f2d('0x92'), auto_value); } var oldTick = 0x0, lastPressed = 0x0, isHideRealActive = ![]; function onCreateMove() { var _0x2d04ff = _0x1a6a7c; override_mindmg(), isHideRealActive && (Global[_0x2d04ff('0x70')]() > oldTick + 0x10 && (backWasPressed = ![], rightWasPressed = ![], leftWasPressed = ![], upWasPressed = ![], oldTick = Global[_0x2d04ff('0x70')]()), drawLeft = 0x0, drawBack = 0x0, drawRight = 0x0, UI[_0x2d04ff('0xa5')](_0x2d04ff('0x48'), _0x2d04ff('0x2'), _0x2d04ff('0x7c'), -0x6), UI[_0x2d04ff('0xa5')](_0x2d04ff('0x48'), _0x2d04ff('0x3a'), _0x2d04ff('0x2e'), ![])), UI['SetValue'](_0x2d04ff('0x48'), _0x2d04ff('0x2'), 'At\x20targets', isHideRealActive ? !![] : ![]); } function player_connect() { lastPressed = Global['Tickcount'](), oldTick = Global['Tickcount'](); } function Main() { var _0x270176 = _0x1a6a7c; UI['AddCheckbox'](_0x270176('0x101')), UI[_0x270176('0x114')](_0x270176('0x107')), UI[_0x270176('0x2d')](_0x270176('0x84'), 0x0, 0x82), UI[_0x270176('0x2d')](_0x270176('0x108'), 0x0, 0x82), UI['AddSliderInt']('AWP\x20Mindmg', 0x0, 0x82), UI[_0x270176('0x2d')](_0x270176('0x93'), 0x0, 0x82), Global[_0x270176('0x9d')](_0x270176('0xab'), _0x270176('0x30')), Global[_0x270176('0x9d')](_0x270176('0x5d'), _0x270176('0x38')), Global[_0x270176('0x9d')](_0x270176('0x80'), _0x270176('0x9e')); } var waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1, misses = [0x40], safety_ents = [0x40]; reset_miss_logs(), UI['AddSliderInt'](_0x1a6a7c('0x119'), 0x1, 0x6); function on_ragebot_fire() { var _0x5d1964 = _0x1a6a7c; waiting_for_hit = !![], target_idx = Event[_0x5d1964('0x8a')]('target_index'), tick_count = Globals[_0x5d1964('0x70')](); } function on_player_hurt() { var _0x468a5d = _0x1a6a7c, _0x59f964 = Entity[_0x468a5d('0x115')](Event[_0x468a5d('0x8a')]('userid')); if (_0x59f964 == Entity['GetLocalPlayer']()) return; var _0x12b541 = Entity['GetEntityFromUserID'](Event[_0x468a5d('0x8a')](_0x468a5d('0x99'))); if (_0x12b541 != Entity['GetLocalPlayer']()) return; if (_0x59f964 != target_idx) return; waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1; } function on_create_move() { var _0x316794 = _0x1a6a7c, _0x1aa6e2 = 0x3e8 / Globals[_0x316794('0xa1')](), _0x477230 = 0x1 + Math['ceil'](Local[_0x316794('0x11a')]() * 0x2 / _0x1aa6e2); Globals[_0x316794('0x70')]() - tick_count >= _0x477230 && waiting_for_hit && (misses[target_idx]++, misses[target_idx] >= UI['GetValue'](_0x316794('0x0'), _0x316794('0x105'), _0x316794('0xf5'), _0x316794('0x119')) && (safety_ents[target_idx] = 0x1), waiting_for_hit = ![], target_idx = 0x0, tick_count = -0x1); var _0x41c9c4 = Ragebot[_0x316794('0x74')](); if (_0x41c9c4 == 0x0) return; safety_ents[_0x41c9c4] == 0x1 && Ragebot['ForceTargetSafety'](_0x41c9c4); } function on_player_death() { var _0x338e74 = _0x1a6a7c, _0x2c5719 = Entity[_0x338e74('0x115')](Event[_0x338e74('0x8a')](_0x338e74('0xca'))); reset_specific_miss_logs(_0x2c5719); } function reset_miss_logs() { for (var _0x4fe14e = 0x0; _0x4fe14e < 0x40; _0x4fe14e++) { reset_specific_miss_logs(_0x4fe14e); } } function reset_specific_miss_logs(_0x945333) { misses[_0x945333] = 0x0, safety_ents[_0x945333] = 0x0; } Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0x112'), _0x1a6a7c('0xf1')), Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0xa6'), _0x1a6a7c('0xa0')), Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0x5d'), _0x1a6a7c('0xf3')), Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0x42'), _0x1a6a7c('0x67')), Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0xaa'), 'reset_miss_logs'), UI[_0x1a6a7c('0xd1')](_0x1a6a7c('0xfa'), [_0x1a6a7c('0x18'), _0x1a6a7c('0xa2'), 'On\x20Shot']); function GetScriptOption(_0x36c22a) { var _0x5d05bf = _0x1a6a7c, _0x240e5a = UI[_0x5d05bf('0x8')](_0x5d05bf('0x0'), _0x5d05bf('0x105'), _0x5d05bf('0xf5'), _0x36c22a); return _0x240e5a; } function radian(_0x3bd8af) { return _0x3bd8af * Math['PI'] / 0xb4; } function ExtendVector(_0x2d2bd8, _0x1b6b06, _0x3403ae) { var _0x133bd = _0x1a6a7c, _0x2c402b = radian(_0x1b6b06); return [_0x3403ae * Math[_0x133bd('0xb2')](_0x2c402b) + _0x2d2bd8[0x0], _0x3403ae * Math[_0x133bd('0xda')](_0x2c402b) + _0x2d2bd8[0x1], _0x2d2bd8[0x2]]; } function VectorAdd(_0x169211, _0x221815) { return [_0x169211[0x0] + _0x221815[0x0], _0x169211[0x1] + _0x221815[0x1], _0x169211[0x2] + _0x221815[0x2]]; } function VectorSubtract(_0x1ce114, _0x283e0b) { return [_0x1ce114[0x0] - _0x283e0b[0x0], _0x1ce114[0x1] - _0x283e0b[0x1], _0x1ce114[0x2] - _0x283e0b[0x2]]; } function VectorMultiply(_0x11b1fd, _0x1c79c3) { return [_0x11b1fd[0x0] * _0x1c79c3[0x0], _0x11b1fd[0x1] * _0x1c79c3[0x1], _0x11b1fd[0x2] * _0x1c79c3[0x2]]; } function VectorLength(_0x2258c2, _0x5c0834, _0x11b8c8) { return Math['sqrt'](_0x2258c2 * _0x2258c2 + _0x5c0834 * _0x5c0834 + _0x11b8c8 * _0x11b8c8); } function VectorNormalize(_0x5b7585) { var _0x3366a4 = VectorLength(_0x5b7585[0x0], _0x5b7585[0x1], _0x5b7585[0x2]); return [_0x5b7585[0x0] / _0x3366a4, _0x5b7585[0x1] / _0x3366a4, _0x5b7585[0x2] / _0x3366a4]; } function VectorDot(_0x333d9a, _0x36aea9) { return _0x333d9a[0x0] * _0x36aea9[0x0] + _0x333d9a[0x1] * _0x36aea9[0x1] + _0x333d9a[0x2] * _0x36aea9[0x2]; } function VectorDistance(_0x2b0cea, _0x3fa20c) { return VectorLength(_0x2b0cea[0x0] - _0x3fa20c[0x0], _0x2b0cea[0x1] - _0x3fa20c[0x1], _0x2b0cea[0x2] - _0x3fa20c[0x2]); } function ClosestPointOnRay(_0x2313d8, _0x4b7fa9, _0x19c82a) { var _0x2fd96d = VectorSubtract(_0x2313d8, _0x4b7fa9), _0x1e865d = VectorSubtract(_0x19c82a, _0x4b7fa9), _0x440582 = VectorLength(_0x1e865d[0x0], _0x1e865d[0x1], _0x1e865d[0x2]); _0x1e865d = VectorNormalize(_0x1e865d); var _0x313f65 = VectorDot(_0x1e865d, _0x2fd96d); if (_0x313f65 < 0x0) return _0x4b7fa9; if (_0x313f65 > _0x440582) return _0x19c82a; return VectorAdd(_0x4b7fa9, VectorMultiply(_0x1e865d, [_0x313f65, _0x313f65, _0x313f65])); } function Flip() { var _0xfd7381 = _0x1a6a7c; UI[_0xfd7381('0x14')]('Anti-Aim', 'Fake\x20angles', _0xfd7381('0x86')); } var lastHitTime = 0x0, lastImpactTimes = [0x0], lastImpacts = [[0x0, 0x0, 0x0]]; function OnHurt() { var _0x1a0bce = _0x1a6a7c; if (GetScriptOption('Anti\x20Bruteforce') == 0x0) return; if (Entity[_0x1a0bce('0x115')](Event['GetInt']('userid')) !== Entity[_0x1a0bce('0xce')]()) return; var _0x36e21a = Event[_0x1a0bce('0x8a')](_0x1a0bce('0x2a')); if (_0x36e21a == 0x1 || _0x36e21a == 0x6 || _0x36e21a == 0x7) { var _0x4dd948 = Global['Curtime'](); Math['abs'](lastHitTime - _0x4dd948) > 0.5 && (lastHitTime = _0x4dd948, Flip()); } } function OnBulletImpact() { var _0x4e506a = _0x1a6a7c; if (GetScriptOption(_0x4e506a('0xfa')) !== 0x2) return; var _0x364381 = Global[_0x4e506a('0xb4')](); if (Math['abs'](lastHitTime - _0x364381) < 0.5) return; var _0xfdda8 = Entity['GetEntityFromUserID'](Event['GetInt'](_0x4e506a('0xca'))), _0x3cf2c6 = [Event[_0x4e506a('0xd9')]('x'), Event[_0x4e506a('0xd9')]('y'), Event['GetFloat']('z'), _0x364381], _0x48f94e; if (Entity[_0x4e506a('0xe3')](_0xfdda8) && Entity[_0x4e506a('0x9b')](_0xfdda8)) { if (!Entity[_0x4e506a('0x4c')](_0xfdda8)) _0x48f94e = Entity[_0x4e506a('0x6e')](_0xfdda8); else { if (Math[_0x4e506a('0x82')](lastImpactTimes[_0xfdda8] - _0x364381) < 0.1) _0x48f94e = lastImpacts[_0xfdda8]; else { lastImpacts[_0xfdda8] = _0x3cf2c6, lastImpactTimes[_0xfdda8] = _0x364381; return; } } var _0x5c2f80 = Entity[_0x4e506a('0xce')](), _0x2ceadd = Entity[_0x4e506a('0x6e')](_0x5c2f80), _0x4d8e48 = Entity[_0x4e506a('0x76')](_0x5c2f80, 'CBaseEntity', _0x4e506a('0xbc')), _0x1f634c = VectorMultiply(VectorAdd(_0x2ceadd, _0x4d8e48), [0.5, 0.5, 0.5]), _0x43cf05 = ClosestPointOnRay(_0x1f634c, _0x48f94e, _0x3cf2c6), _0x412b3f = VectorDistance(_0x1f634c, _0x43cf05); if (_0x412b3f < 0x55) { var _0x644e3b = Local[_0x4e506a('0xe1')](), _0x513d8b = Local[_0x4e506a('0x55')](), _0xfc64a8 = ClosestPointOnRay(_0x2ceadd, _0x48f94e, _0x3cf2c6), _0x41b59a = VectorDistance(_0x2ceadd, _0xfc64a8), _0x3879fb = ClosestPointOnRay(_0x4d8e48, _0x48f94e, _0x3cf2c6), _0x21e802 = VectorDistance(_0x4d8e48, _0x3879fb), _0x49c985, _0x373cf0, _0x267b2c; if (_0x412b3f < _0x41b59a && _0x412b3f < _0x21e802) _0x49c985 = _0x43cf05, _0x373cf0 = ExtendVector(_0x43cf05, _0x644e3b + 0xb4, 0xa), _0x267b2c = ExtendVector(_0x43cf05, _0x513d8b + 0xb4, 0xa); else { if (_0x21e802 < _0x41b59a) { _0x49c985 = _0x3879fb; var _0x58f69a = ExtendVector(_0x43cf05, _0x644e3b - 0x1e + 0x3c, 0xa), _0x20e99a = ExtendVector(_0x43cf05, _0x644e3b - 0x1e - 0x3c, 0xa), _0x2ed3a6 = ExtendVector(_0x43cf05, _0x513d8b - 0x1e + 0x3c, 0xa), _0xa4afaf = ExtendVector(_0x43cf05, _0x513d8b - 0x1e - 0x3c, 0xa); VectorDistance(_0x3879fb, _0x58f69a) < VectorDistance(_0x3879fb, _0x20e99a) ? _0x373cf0 = _0x58f69a : _0x373cf0 = _0x20e99a, VectorDistance(_0x3879fb, _0x2ed3a6) < VectorDistance(_0x3879fb, _0xa4afaf) ? _0x267b2c = _0x2ed3a6 : _0x267b2c = _0xa4afaf; } else _0x49c985 = _0xfc64a8, _0x373cf0 = ExtendVector(_0x43cf05, _0x644e3b, 0xa), _0x267b2c = ExtendVector(_0x43cf05, _0x513d8b, 0xa); } VectorDistance(_0x49c985, _0x267b2c) < VectorDistance(_0x49c985, _0x373cf0) && (lastHitTime = _0x364381, Flip()); } lastImpacts[_0xfdda8] = _0x3cf2c6, lastImpactTimes[_0xfdda8] = _0x364381; } } Cheat['RegisterCallback'](_0x1a6a7c('0xa6'), 'OnHurt'), Cheat[_0x1a6a7c('0x9d')]('bullet_impact', _0x1a6a7c('0x7f')); function draw() { var _0x7f423c = _0x1a6a7c, _0x278d92 = Render[_0x7f423c('0x41')](_0x7f423c('0x58'), 0x12, 0x320); Render[_0x7f423c('0xfc')](0x2b, 0x35c, 0x1, _0x7f423c('0x1b'), [0x80, 0xb6, 0x0, 0xff], _0x278d92), Render[_0x7f423c('0xfc')](0x2c, 0x35c, 0x1, _0x7f423c('0x1b'), [0x2d, 0x2d, 0x2d, 0x54], _0x278d92), UI[_0x7f423c('0xeb')](_0x7f423c('0xc2'), _0x7f423c('0x11f'), _0x7f423c('0x7e'), 'Hide\x20shots') && (Render[_0x7f423c('0xfc')](0x4d, 0x294, 0x1, 'HIDESHOT', [0x80, 0xb6, 0x0, 0xff], _0x278d92), Render['StringCustom'](0x4e, 0x294, 0x1, _0x7f423c('0x2b'), [0x2d, 0x2d, 0x2d, 0x54], _0x278d92)), UI[_0x7f423c('0xeb')](_0x7f423c('0xc2'), _0x7f423c('0x11f'), _0x7f423c('0x7e'), _0x7f423c('0x85')) && (Render[_0x7f423c('0xfc')](0x1a, 0x26c, 0x1, 'DT', [0x80, 0xb6, 0x0, 0xff], _0x278d92), Render[_0x7f423c('0xfc')](0x1b, 0x26c, 0x1, 'DT', [0x2d, 0x2d, 0x2d, 0x54], _0x278d92)); } Cheat['RegisterCallback'](_0x1a6a7c('0xab'), 'draw'), UI[_0x1a6a7c('0xd')]('Watermark'); var color = UI[_0x1a6a7c('0x83')]('Misc', _0x1a6a7c('0x105'), _0x1a6a7c('0xf5'), _0x1a6a7c('0xc')); if (color[0x3] == 0x0) UI[_0x1a6a7c('0xd3')](_0x1a6a7c('0x0'), _0x1a6a7c('0x105'), _0x1a6a7c('0xf5'), _0x1a6a7c('0xc'), [0x59, 0x77, 0xef, 0xff]); function draw() { var _0x1737da = _0x1a6a7c; if (!World['GetServerString']()) return; var _0x50fc7a = new Date(), _0x4c9fff = _0x50fc7a['getHours'](), _0x21cab8 = _0x50fc7a[_0x1737da('0x110')](), _0x27603e = _0x50fc7a[_0x1737da('0xae')](), _0x52ea95 = _0x4c9fff <= 0x9 ? '0' + _0x4c9fff + ':' : _0x4c9fff + ':', _0x65628a = _0x21cab8 <= 0x9 ? '0' + _0x21cab8 + ':' : _0x21cab8 + ':', _0x1f8b7d = _0x27603e <= 0x9 ? '0' + _0x27603e : _0x27603e, _0x325009 = Globals['Tickrate']()[_0x1737da('0x12')](), _0x177d58 = Math['round'](Entity[_0x1737da('0x76')](Entity[_0x1737da('0xce')](), _0x1737da('0xe4'), _0x1737da('0x29')))[_0x1737da('0x12')](); color = UI[_0x1737da('0x83')](_0x1737da('0x0'), _0x1737da('0x105'), _0x1737da('0xf5'), 'Watermark'); var _0x629ac9 = Render['AddFont']('Verdana', 0x7, 0x190), _0x3ff2bb = 'onetap.com\x20|\x20' + Cheat[_0x1737da('0x88')]() + _0x1737da('0xb') + _0x177d58 + _0x1737da('0xe') + _0x325009 + _0x1737da('0x69') + _0x52ea95 + _0x65628a + _0x1f8b7d, _0x2871ca = Render['TextSizeCustom'](_0x3ff2bb, _0x629ac9)[0x0] + 0x8, _0x115676 = Global['GetScreenSize']()[0x0]; _0x115676 = _0x115676 - _0x2871ca - 0xa, Render[_0x1737da('0xc3')](_0x115676, 0xa, _0x2871ca, 0x2, [color[0x0], color[0x1], color[0x2], 0xff]), Render[_0x1737da('0xc3')](_0x115676, 0xc, _0x2871ca, 0x12, [0x11, 0x11, 0x11, color[0x3]]), Render[_0x1737da('0xfc')](_0x115676 + 0x4, 0xa + 0x4, 0x0, _0x3ff2bb, [0xff, 0xff, 0xff, 0xff], _0x629ac9); } Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0xab'), _0x1a6a7c('0x4d')), UI[_0x1a6a7c('0x114')](_0x1a6a7c('0x11e')); var cache1 = UI[_0x1a6a7c('0x8')](_0x1a6a7c('0xc2'), _0x1a6a7c('0x11f'), _0x1a6a7c('0x4f'), _0x1a6a7c('0x103')), cache2 = UI[_0x1a6a7c('0x8')]('Rage', 'PISTOL', _0x1a6a7c('0x4f'), 'Hitboxes'), cache3 = UI[_0x1a6a7c('0x8')]('Rage', 'HEAVY\x20PISTOL', _0x1a6a7c('0x4f'), _0x1a6a7c('0x103')), cache4 = UI[_0x1a6a7c('0x8')](_0x1a6a7c('0xc2'), _0x1a6a7c('0x2f'), 'Targeting', _0x1a6a7c('0x103')), cache5 = UI[_0x1a6a7c('0x8')](_0x1a6a7c('0xc2'), _0x1a6a7c('0x4b'), _0x1a6a7c('0x4f'), _0x1a6a7c('0x103')), cache6 = UI[_0x1a6a7c('0x8')](_0x1a6a7c('0xc2'), _0x1a6a7c('0x92'), _0x1a6a7c('0x4f'), _0x1a6a7c('0x103')); function on_cm() { var _0x2f9180 = _0x1a6a7c; UI[_0x2f9180('0xeb')](_0x2f9180('0xf5'), _0x2f9180('0x11e')) ? (UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), 'GENERAL', _0x2f9180('0x4f'), _0x2f9180('0x103'), 0x1), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), 'PISTOL', _0x2f9180('0x4f'), _0x2f9180('0x103'), 0x1), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), 'HEAVY\x20PISTOL', _0x2f9180('0x4f'), _0x2f9180('0x103'), 0x1), UI[_0x2f9180('0xa5')]('Rage', _0x2f9180('0x2f'), _0x2f9180('0x4f'), 'Hitboxes', 0x1), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), _0x2f9180('0x4b'), _0x2f9180('0x4f'), _0x2f9180('0x103'), 0x1), UI['SetValue'](_0x2f9180('0xc2'), _0x2f9180('0x92'), _0x2f9180('0x4f'), _0x2f9180('0x103'), 0x1)) : (UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), _0x2f9180('0x11f'), 'Targeting', _0x2f9180('0x103'), cache1), UI['SetValue'](_0x2f9180('0xc2'), 'PISTOL', _0x2f9180('0x4f'), _0x2f9180('0x103'), cache2), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), _0x2f9180('0x36'), _0x2f9180('0x4f'), _0x2f9180('0x103'), cache3), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), _0x2f9180('0x2f'), _0x2f9180('0x4f'), _0x2f9180('0x103'), cache4), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), _0x2f9180('0x4b'), _0x2f9180('0x4f'), _0x2f9180('0x103'), cache5), UI[_0x2f9180('0xa5')](_0x2f9180('0xc2'), _0x2f9180('0x92'), _0x2f9180('0x4f'), _0x2f9180('0x103'), cache6)); } Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0x5d'), 'on_cm'); function get_icon(_0x57e453) { var _0x309e01 = _0x1a6a7c, _0x2e70d8 = ''; switch (_0x57e453) { case _0x309e01('0xa7'): _0x2e70d8 = 'a'; break; case 'dual\x20berettas': _0x2e70d8 = 'b'; break; case _0x309e01('0x35'): _0x2e70d8 = 'c'; break; case 'glock\x2018': _0x2e70d8 = 'd'; break; case _0x309e01('0x3e'): _0x2e70d8 = 'e'; break; case 'aug': _0x2e70d8 = 'f'; break; case _0x309e01('0xfe'): _0x2e70d8 = 'g'; break; case _0x309e01('0xea'): _0x2e70d8 = 'h'; break; case _0x309e01('0x98'): _0x2e70d8 = 'i'; break; case _0x309e01('0x5e'): _0x2e70d8 = 'j'; break; case _0x309e01('0x6'): _0x2e70d8 = 'k'; break; case _0x309e01('0x118'): _0x2e70d8 = 'l'; break; case 'm4a1\x20s': _0x2e70d8 = 'm'; break; case _0x309e01('0xe9'): _0x2e70d8 = 'n'; break; case _0x309e01('0x11c'): _0x2e70d8 = 'o'; break; case _0x309e01('0x60'): _0x2e70d8 = 'p'; break; case _0x309e01('0xc7'): _0x2e70d8 = 'q'; break; case _0x309e01('0xf0'): _0x2e70d8 = 'r'; break; case _0x309e01('0x1d'): _0x2e70d8 = 's'; break; case _0x309e01('0xdc'): _0x2e70d8 = 't'; break; case _0x309e01('0x117'): _0x2e70d8 = 'u'; break; case _0x309e01('0xe5'): _0x2e70d8 = 'v'; break; case 'tec\x209': _0x2e70d8 = 'w'; break; case _0x309e01('0x15'): _0x2e70d8 = 'x'; break; case _0x309e01('0xf6'): _0x2e70d8 = 'y'; break; case 'mp7': _0x2e70d8 = 'z'; break; case _0x309e01('0x87'): _0x2e70d8 = 'A'; break; case _0x309e01('0x81'): _0x2e70d8 = 'B'; break; case _0x309e01('0xd5'): _0x2e70d8 = 'C'; break; case _0x309e01('0x45'): _0x2e70d8 = 'D'; break; case 'sg\x20553': _0x2e70d8 = 'E'; break; case _0x309e01('0x109'): _0x2e70d8 = 'F'; break; case _0x309e01('0xaf'): _0x2e70d8 = 'G'; break; case 'flashbang': _0x2e70d8 = 'H'; break; case _0x309e01('0xec'): _0x2e70d8 = 'I'; break; case _0x309e01('0x10c'): _0x2e70d8 = 'J'; break; case _0x309e01('0xbb'): _0x2e70d8 = 'K'; break; case _0x309e01('0xc4'): _0x2e70d8 = 'L'; break; case _0x309e01('0xf4'): _0x2e70d8 = 'M'; break; case _0x309e01('0x6b'): _0x2e70d8 = 'N'; break; case _0x309e01('0x3'): _0x2e70d8 = 'P'; break; case 'cz75\x20auto': _0x2e70d8 = 'Q'; break; case _0x309e01('0x62'): _0x2e70d8 = 'R'; break; case _0x309e01('0xb8'): _0x2e70d8 = 'V'; break; case _0x309e01('0x28'): _0x2e70d8 = 'W'; break; case _0x309e01('0xb6'): _0x2e70d8 = 'X'; break; case _0x309e01('0x71'): _0x2e70d8 = 'Y'; break; case _0x309e01('0x7a'): _0x2e70d8 = 'Z'; break; case _0x309e01('0xb7'): _0x2e70d8 = '1'; break; case 'bowie\x20knife': _0x2e70d8 = '2'; break; case _0x309e01('0x26'): _0x2e70d8 = '3'; break; case 'shadow\x20daggers': _0x2e70d8 = '4'; break; case _0x309e01('0x44'): _0x2e70d8 = '5'; break; case _0x309e01('0xe2'): _0x2e70d8 = '6'; break; case _0x309e01('0x8b'): _0x2e70d8 = '7'; break; case _0x309e01('0xe7'): _0x2e70d8 = '8'; break; case 'huntsman\x20knife': _0x2e70d8 = '0'; break; case _0x309e01('0xf8'): _0x2e70d8 = '8'; break; case _0x309e01('0x46'): _0x2e70d8 = '25'; break; case _0x309e01('0x8e'): _0x2e70d8 = 'Z'; break; case _0x309e01('0xef'): _0x2e70d8 = 'Z'; break; case _0x309e01('0xa'): _0x2e70d8 = 'Z'; break; default: _0x2e70d8 = ''; break; }return _0x2e70d8; } UI['AddLabel']('\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20Tickbase\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20'), UI[_0x1a6a7c('0x2d')](_0x1a6a7c('0x72'), 0x0, Global[_0x1a6a7c('0xa9')]()[0x0]), UI['AddSliderInt'](_0x1a6a7c('0x17'), 0x0, Global[_0x1a6a7c('0xa9')]()[0x1]); function in_bounds(_0x199a7f, _0x71886e, _0x2507f2, _0x59b1c5, _0x2aaee2) { return _0x199a7f[0x0] > _0x71886e && _0x199a7f[0x1] > _0x2507f2 && _0x199a7f[0x0] < _0x59b1c5 && _0x199a7f[0x1] < _0x2aaee2; } var fa = 0x0, sa = 0x0; function main_dt() { var _0x141b47 = _0x1a6a7c; if (!World[_0x141b47('0x113')]()) return; const _0x59b691 = UI[_0x141b47('0x8')]('Misc', _0x141b47('0x105'), _0x141b47('0xf5'), _0x141b47('0x72')), _0x55bc12 = UI['GetValue'](_0x141b47('0x0'), _0x141b47('0x105'), _0x141b47('0xf5'), _0x141b47('0x17')); localplayer_index = Entity[_0x141b47('0xce')](), localplayer_weapon = Entity[_0x141b47('0x79')](localplayer_index), weapon_name = Entity[_0x141b47('0x95')](localplayer_weapon), g_Local_classname = Entity[_0x141b47('0x5a')](localplayer_weapon); var _0x16b040 = Entity['GetProp'](localplayer_weapon, 'CBaseCombatWeapon', 'm_flNextPrimaryAttack'), _0x44d515 = ![]; _0x16b040 <= Globals[_0x141b47('0xb4')]() && (_0x44d515 = !![]); var _0x4a252a = 0x8 * Globals[_0x141b47('0xb1')](), _0x34dd53 = Render[_0x141b47('0x41')]('Verdana', 0x7, 0x64), _0x49301a = Render[_0x141b47('0x41')](_0x141b47('0x104'), 0x12, 0x64); if (_0x44d515 && Exploit[_0x141b47('0x106')]() == 0x1 && UI[_0x141b47('0xeb')](_0x141b47('0xc2'), _0x141b47('0x7e'), _0x141b47('0x85'))) var _0x3e5a68 = _0x141b47('0x65'), _0x20fb44 = [0x59, 0x77, 0xef, 0xff]; else { if (_0x44d515 && Exploit[_0x141b47('0x106')]() == 0x1 && UI[_0x141b47('0xeb')](_0x141b47('0xc2'), _0x141b47('0x7e'), _0x141b47('0x59'))) var _0x3e5a68 = _0x141b47('0xb0'), _0x20fb44 = [0x59, 0x77, 0xef, 0xff]; else var _0x3e5a68 = _0x141b47('0x66'), _0x20fb44 = [0x59, 0x59, 0x59, 0xff]; } var _0x3961e5 = Render[_0x141b47('0xf9')](_0x3e5a68, _0x34dd53)[0x0] + 0x8; Render['FilledRect'](_0x59b691, _0x55bc12, _0x3961e5, 0x2, _0x20fb44), Render[_0x141b47('0xc3')](_0x59b691, _0x55bc12 + 0x2, _0x3961e5, 0x12, [0x11, 0x11, 0x11, 0xff]), Render['StringCustom'](_0x59b691 + 0x5, _0x55bc12 + 0x5, 0x0, _0x3e5a68, [0x0, 0x0, 0x0, 0xb4], _0x34dd53), Render[_0x141b47('0xfc')](_0x59b691 + 0x4, _0x55bc12 + 0x4, 0x0, _0x3e5a68, [0xff, 0xff, 0xff, 0xff], _0x34dd53), Render[_0x141b47('0x9c')](_0x59b691 + 0x4, _0x55bc12 + 0x16, 0x0, get_icon(weapon_name), [0xff, 0xff, 0xff, 0xff], 0x5); if (g_Local_classname == _0x141b47('0x91') || g_Local_classname == 'CWeaponSSG08' || g_Local_classname == _0x141b47('0xd7') || weapon_name == _0x141b47('0x62') || g_Local_classname == _0x141b47('0xd8') || g_Local_classname == 'CMolotovGrenade' || g_Local_classname == _0x141b47('0x102') || g_Local_classname == _0x141b47('0x54') || g_Local_classname == _0x141b47('0x10b') || g_Local_classname == _0x141b47('0xf') || g_Local_classname == 'CWeaponTaser' || g_Local_classname == _0x141b47('0x77')) { } else _0x44d515 ? (fa = Math[_0x141b47('0xcf')](fa + _0x4a252a, 0x1), Render['StringCustom'](_0x59b691 + 0xa + Render[_0x141b47('0xed')](get_icon(weapon_name), 0x5)[0x0], _0x55bc12 + 0x12, 0x0, 'A', [0xff, 0xff, 0xff, fa * 0xff], _0x49301a)) : fa = 0x0, _0x44d515 && Exploit[_0x141b47('0x106')]() == 0x1 && UI['IsHotkeyActive'](_0x141b47('0xc2'), _0x141b47('0x7e'), 'Doubletap') ? (sa = Math['min'](sa + _0x4a252a, 0x1), Render[_0x141b47('0xfc')](_0x59b691 + 0x1e + Render[_0x141b47('0xed')](get_icon(weapon_name), 0x5)[0x0], _0x55bc12 + 0x12, 0x0, 'A', [0xff, 0xff, 0xff, sa * 0xff], _0x49301a)) : sa = 0x0; if (Global[_0x141b47('0xa4')](0x1) && UI[_0x141b47('0x11d')]()) { const _0x284383 = Global[_0x141b47('0x4')](); in_bounds(_0x284383, _0x59b691, _0x55bc12, _0x59b691 + _0x3961e5, _0x55bc12 + 0x1e) && (UI[_0x141b47('0xa5')](_0x141b47('0x0'), _0x141b47('0x105'), _0x141b47('0xf5'), 'Tickbase_x', _0x284383[0x0] - _0x3961e5 / 0x2), UI[_0x141b47('0xa5')](_0x141b47('0x0'), _0x141b47('0x105'), 'Script\x20items', 'Tickbase_y', _0x284383[0x1] - 0x14)); } } Global[_0x1a6a7c('0x9d')](_0x1a6a7c('0xab'), _0x1a6a7c('0x25')); var materials = []; function createMat(_0x25a6e6) { var _0x1fcc17 = _0x1a6a7c; UI[_0x1fcc17('0xd')](_0x25a6e6 + _0x1fcc17('0x22')); var _0x513ca7 = [_0x1fcc17('0x23'), _0x1fcc17('0x4e'), _0x1fcc17('0x11b'), _0x1fcc17('0x40')]; UI[_0x1fcc17('0x33')](_0x25a6e6 + _0x1fcc17('0x68'), _0x513ca7), UI[_0x1fcc17('0xba')](_0x1fcc17('0x7') + _0x25a6e6['toLowerCase'](), 0x0, 0xa), Material['Create'](_0x25a6e6 + _0x1fcc17('0x22')), materials['push']([_0x25a6e6, _0x25a6e6 + _0x1fcc17('0x22'), _0x25a6e6 + _0x1fcc17('0x68'), _0x1fcc17('0x7') + _0x25a6e6[_0x1fcc17('0x10a')]()]); } function HSVtoRGB(_0x2aebb8, _0x3b485d, _0x9ca6b2) { var _0x183dcb = _0x1a6a7c, _0x301e95, _0x4ca8ac, _0xfa0f89, _0x516514, _0x4ed2b8, _0x1f5939, _0x2a072d, _0x1390e9; arguments['length'] === 0x1 && (_0x3b485d = _0x2aebb8['s'], _0x9ca6b2 = _0x2aebb8['v'], _0x2aebb8 = _0x2aebb8['h']); _0x516514 = Math['floor'](_0x2aebb8 * 0x6), _0x4ed2b8 = _0x2aebb8 * 0x6 - _0x516514, _0x1f5939 = _0x9ca6b2 * (0x1 - _0x3b485d), _0x2a072d = _0x9ca6b2 * (0x1 - _0x4ed2b8 * _0x3b485d), _0x1390e9 = _0x9ca6b2 * (0x1 - (0x1 - _0x4ed2b8) * _0x3b485d); switch (_0x516514 % 0x6) { case 0x0: _0x301e95 = _0x9ca6b2, _0x4ca8ac = _0x1390e9, _0xfa0f89 = _0x1f5939; break; case 0x1: _0x301e95 = _0x2a072d, _0x4ca8ac = _0x9ca6b2, _0xfa0f89 = _0x1f5939; break; case 0x2: _0x301e95 = _0x1f5939, _0x4ca8ac = _0x9ca6b2, _0xfa0f89 = _0x1390e9; break; case 0x3: _0x301e95 = _0x1f5939, _0x4ca8ac = _0x2a072d, _0xfa0f89 = _0x9ca6b2; break; case 0x4: _0x301e95 = _0x1390e9, _0x4ca8ac = _0x1f5939, _0xfa0f89 = _0x9ca6b2; break; case 0x5: _0x301e95 = _0x9ca6b2, _0x4ca8ac = _0x1f5939, _0xfa0f89 = _0x2a072d; break; }return [Math[_0x183dcb('0xc9')](_0x301e95 * 0xff), Math[_0x183dcb('0xc9')](_0x4ca8ac * 0xff), Math[_0x183dcb('0xc9')](_0xfa0f89 * 0xff), 0xff]; } function materialUpdate() { var _0x296d0a = _0x1a6a7c; for (i in materials) { var _0x1df13f = materials[i], _0x521f52 = Material['Get'](_0x1df13f[0x0] + _0x296d0a('0x22')); if (_0x521f52 > 0x0) { Material[_0x296d0a('0x56')](_0x521f52, _0x296d0a('0x9f'), _0x296d0a('0xee')); var _0x52d3a0 = UI[_0x296d0a('0x8')](_0x296d0a('0xf5'), _0x1df13f[0x2]) & 0x1; i == 0x1 && Cheat[_0x296d0a('0x5c')](UI[_0x296d0a('0x8')]('Script\x20items', _0x1df13f[0x2]) + '\x0a'); Material[_0x296d0a('0x56')](_0x521f52, _0x296d0a('0x94'), _0x52d3a0 ? '1' : '0'), Material['SetKeyValue'](_0x521f52, _0x296d0a('0x63'), 'models/effects/cube_white'), Material[_0x296d0a('0x56')](_0x521f52, _0x296d0a('0xc5'), '1'); var _0x3e2054 = UI[_0x296d0a('0x83')]('Script\x20items', _0x1df13f[0x0] + _0x296d0a('0x22')), _0x458025 = UI[_0x296d0a('0x8')]('Script\x20items', _0x1df13f[0x2]) & 0x2, _0x276fc9 = UI[_0x296d0a('0x8')](_0x296d0a('0xf5'), _0x1df13f[0x2]) & 0x4; _0x276fc9 && (_0x3e2054 = HSVtoRGB(Globals['Realtime']() / 0x5 % 0x1, 0x1, 0x1), _0x3e2054[0x0] /= 0xa, _0x3e2054[0x1] /= 0xa, _0x3e2054[0x2] /= 0xa); if (_0x458025) { var _0x427d3f = 0x7, _0x52d3a0 = 0x5, _0x2bf564 = 0.6, _0x369ee1 = (Math[_0x296d0a('0xda')](Globals[_0x296d0a('0x90')]() * 0x7) + 0x5) * _0x2bf564; _0x3e2054[0x0] *= _0x369ee1, _0x3e2054[0x1] *= _0x369ee1, _0x3e2054[0x2] *= _0x369ee1; } var _0x26d049 = UI[_0x296d0a('0x8')](_0x296d0a('0xf5'), _0x1df13f[0x2]) & 0x8; Material[_0x296d0a('0x56')](_0x521f52, _0x296d0a('0xb9'), _0x26d049 ? '1' : '0'); var _0x20781b = UI['GetValue'](_0x296d0a('0xf5'), _0x1df13f[0x3]); Material[_0x296d0a('0x56')](_0x521f52, _0x296d0a('0xf2'), _0x296d0a('0x10e') + (0xb - _0x20781b) + '\x20' + (0xb - _0x20781b) * 0x2 + ']'), Material['SetKeyValue'](_0x521f52, '$envmaptint', '[' + _0x3e2054[0x0] / 0xff + '\x20' + _0x3e2054[0x1] / 0xff + '\x20' + _0x3e2054[0x2] / 0xff + ']'), Material['SetKeyValue'](_0x521f52, _0x296d0a('0x61'), _0x3e2054[0x3] / 0xff + ''), Material[_0x296d0a('0x6c')](_0x521f52); } } } createMat(_0x1a6a7c('0x43')), Cheat['RegisterCallback'](_0x1a6a7c('0x10'), 'materialUpdate'); function onUnload() { for (i in materials) { Material['Destroy'](materials[i][0x1]); } } Cheat[_0x1a6a7c('0x9d')](_0x1a6a7c('0x49'), _0x1a6a7c('0x7b')); const enable = UI['AddCheckbox'](_0x1a6a7c('0x97')), cc = UI[_0x1a6a7c('0x53')](_0x1a6a7c('0xc6')), cc_tint = UI['AddSliderInt'](_0x1a6a7c('0xa3'), 0x0, 0x64), cc_intensity = UI[_0x1a6a7c('0x2d')]('Intensity', 0x0, 0x64), fog = UI[_0x1a6a7c('0x53')](_0x1a6a7c('0x1e')), fog_color = UI['AddColorPicker'](_0x1a6a7c('0x50')), fog_distance = UI['AddSliderInt'](_0x1a6a7c('0x5b'), 0x0, 0x9c4), fog_density = UI[_0x1a6a7c('0x2d')](_0x1a6a7c('0xfb'), 0x0, 0x64), handle_visibility = function () { var _0x5e54cb = _0x1a6a7c; const _0x5861a5 = UI[_0x5e54cb('0x8')](_0x5e54cb('0x0'), 'JAVASCRIPT', 'Script\x20items', _0x5e54cb('0x97')), _0x123c77 = UI[_0x5e54cb('0x8')]('Misc', _0x5e54cb('0x105'), _0x5e54cb('0xf5'), _0x5e54cb('0xc6')), _0x5da067 = UI['GetValue'](_0x5e54cb('0x0'), _0x5e54cb('0x105'), _0x5e54cb('0xf5'), 'Fog\x20correction'); UI[_0x5e54cb('0x3f')](_0x5e54cb('0x0'), 'JAVASCRIPT', _0x5e54cb('0xf5'), _0x5e54cb('0x97'), !![]), UI[_0x5e54cb('0x3f')](_0x5e54cb('0x0'), _0x5e54cb('0x105'), _0x5e54cb('0xf5'), _0x5e54cb('0xc6'), _0x5861a5), UI['SetEnabled'](_0x5e54cb('0x0'), _0x5e54cb('0x105'), _0x5e54cb('0xf5'), _0x5e54cb('0xa3'), _0x123c77), UI['SetEnabled'](_0x5e54cb('0x0'), _0x5e54cb('0x105'), 'Script\x20items', _0x5e54cb('0x6f'), _0x123c77), UI['SetEnabled']('Misc', _0x5e54cb('0x105'), _0x5e54cb('0xf5'), 'Fog\x20correction', _0x5861a5), UI['SetEnabled']('Misc', _0x5e54cb('0x105'), 'Script\x20items', _0x5e54cb('0x50'), _0x5da067), UI[_0x5e54cb('0x3f')](_0x5e54cb('0x0'), _0x5e54cb('0x105'), _0x5e54cb('0xf5'), _0x5e54cb('0x5b'), _0x5da067), UI[_0x5e54cb('0x3f')](_0x5e54cb('0x0'), 'JAVASCRIPT', _0x5e54cb('0xf5'), _0x5e54cb('0xfb'), _0x5da067); }, update_fog = function () { var _0x2b416c = _0x1a6a7c; if (!UI['GetValue'](_0x2b416c('0x0'), _0x2b416c('0x105'), _0x2b416c('0xf5'), _0x2b416c('0x1e'))) { Convar[_0x2b416c('0xb3')]('fog_override') !== '0' && Convar['SetString']('fog_override', '0'); return; } Convar[_0x2b416c('0xb3')]('fog_override') !== '1' && Convar['SetString'](_0x2b416c('0xc0'), '1'); const _0x2ba06d = UI[_0x2b416c('0x83')](_0x2b416c('0x0'), _0x2b416c('0x105'), _0x2b416c('0xf5'), _0x2b416c('0x50')), _0x2d50b3 = _0x2ba06d[0x0] + '\x20' + _0x2ba06d[0x1] + '\x20' + _0x2ba06d[0x2], _0x5b4c0a = UI[_0x2b416c('0xb3')](_0x2b416c('0x0'), _0x2b416c('0x105'), _0x2b416c('0xf5'), _0x2b416c('0x5b')), _0x48030c = (UI[_0x2b416c('0x8')](_0x2b416c('0x0'), _0x2b416c('0x105'), 'Script\x20items', 'Density') / 0x64)[_0x2b416c('0x12')](); Convar[_0x2b416c('0xb3')](_0x2b416c('0xa8')) !== _0x2d50b3 && Convar['SetString'](_0x2b416c('0xa8'), _0x2d50b3), Convar['GetString'](_0x2b416c('0x3d')) !== _0x5b4c0a && (Convar[_0x2b416c('0xff')]('fog_start', '0'), Convar[_0x2b416c('0xff')](_0x2b416c('0x3d'), _0x5b4c0a)), Convar[_0x2b416c('0xb3')](_0x2b416c('0x52')) !== _0x48030c && Convar[_0x2b416c('0xff')](_0x2b416c('0x52'), _0x48030c); }, draw_cc = function () { var _0x4787b3 = _0x1a6a7c; if (!UI[_0x4787b3('0x8')](_0x4787b3('0x0'), _0x4787b3('0x105'), _0x4787b3('0xf5'), _0x4787b3('0xc6'))) return; const _0x44efbb = UI[_0x4787b3('0x8')](_0x4787b3('0x0'), _0x4787b3('0x105'), 'Script\x20items', _0x4787b3('0xa3')), _0x7048c7 = UI['GetValue']('Misc', 'JAVASCRIPT', 'Script\x20items', _0x4787b3('0x6f')), _0x5b9eb0 = Global[_0x4787b3('0xa9')]()[0x0], _0x122a06 = Global[_0x4787b3('0xa9')]()[0x1]; Render['FilledRect'](0x0, 0x0, _0x5b9eb0, _0x122a06, [_0x44efbb, 0x0, 0xff - _0x44efbb, _0x7048c7]); }; handle_visibility(), Convar[_0x1a6a7c('0xff')](_0x1a6a7c('0xcc'), '0'); function main() { handle_visibility(), update_fog(), draw_cc(); } Global[_0x1a6a7c('0x9d')]('Draw', 'main'), UI[_0x1a6a7c('0xba')]('Aspect\x20Ratio', 0x1, 0x2), UI['AddLabel'](_0x1a6a7c('0x8c')), UI[_0x1a6a7c('0x53')]('4:3\x20mode'), UI[_0x1a6a7c('0x53')](_0x1a6a7c('0xbf')); var aspect_cache = 0x0; function aspect() { var _0x5742ae = _0x1a6a7c, _0x210403 = UI['GetValue'](_0x5742ae('0xad')), _0x1aab07 = UI[_0x5742ae('0x8')]('4:3\x20mode'), _0x36eebc = UI[_0x5742ae('0x8')](_0x5742ae('0xbf')); _0x1aab07 != 0x0 && (UI[_0x5742ae('0xa5')](_0x5742ae('0xad'), 1.33333333), UI[_0x5742ae('0xa5')](_0x5742ae('0x120'), 0x0)), _0x36eebc != 0x0 && (UI[_0x5742ae('0xa5')](_0x5742ae('0xad'), 1.77777777), UI[_0x5742ae('0xa5')]('16:9\x20mode', 0x0)), aspect_cache != _0x210403 && (aspect_cache = _0x210403, UI[_0x5742ae('0xa5')](_0x5742ae('0x0'), _0x5742ae('0x11f'), _0x5742ae('0xbd'), 'Hidden\x20cvars', 0x1), Global[_0x5742ae('0x4a')](_0x5742ae('0x19') + _0x210403)); } Cheat['RegisterCallback'](_0x1a6a7c('0x5d'), 'aspect'); const hitgroup = ['Head', _0x1a6a7c('0x6d'), _0x1a6a7c('0x21'), _0x1a6a7c('0x116'), _0x1a6a7c('0x16'), 'Chest', _0x1a6a7c('0x10d'), _0x1a6a7c('0xdb'), _0x1a6a7c('0xcd'), _0x1a6a7c('0x75'), _0x1a6a7c('0xc1'), _0x1a6a7c('0x32'), 'Right\x20foot', _0x1a6a7c('0x1a'), _0x1a6a7c('0xb5'), 'Left\x20upper\x20arm', _0x1a6a7c('0xdd'), _0x1a6a7c('0x8d'), 'Right\x20forearm'], activeLogs = [], ragebotTarget = {}; UI[_0x1a6a7c('0xd')]('Hitlog\x20Color'); var color = UI[_0x1a6a7c('0x83')](_0x1a6a7c('0x9a'), _0x1a6a7c('0x105'), _0x1a6a7c('0x51'), 'Hitlog\x20Color'); if (color[0x0] === 0x0 && color[0x1] === 0x0 && color[0x2] === 0x0 && color[0x3] === 0x0) UI[_0x1a6a7c('0xd3')](_0x1a6a7c('0x9a'), _0x1a6a7c('0x105'), _0x1a6a7c('0x51'), _0x1a6a7c('0x73'), [0xff, 0x0, 0x0, 0xff]); function getMultiColorTextSize(_0x333231) { var _0x349b2c = _0x1a6a7c, _0x5093f6 = 0x0; for (var _0xc9c229 = 0x0; _0xc9c229 < _0x333231[_0x349b2c('0xe0')]; _0xc9c229++) { _0x5093f6 += Render[_0x349b2c('0xed')](_0x333231[_0xc9c229][0x1], 0x8)[0x0]; } return _0x5093f6; } function drawMultiColorText(_0x3f084d, _0xd39143, _0x51a6fc) { var _0x429c26 = _0x1a6a7c, _0x4c1893 = 0x0; for (var _0xaf9fb2 = 0x0; _0xaf9fb2 < _0x51a6fc[_0x429c26('0xe0')]; _0xaf9fb2++) { const _0x12cebd = _0x51a6fc[_0xaf9fb2], _0x508a37 = _0x12cebd[0x1]; var _0x133bd2 = _0x12cebd[0x0]; typeof _0x12cebd[0x0] == _0x429c26('0x1') && (_0x133bd2 = UI[_0x429c26('0x83')](_0x429c26('0x9a'), 'JAVASCRIPT', _0x429c26('0x51'), 'Hitlog\x20Color')); Render[_0x429c26('0x9c')](_0x3f084d + _0x4c1893, _0xd39143, 0x0, _0x508a37, _0x133bd2, 0x8); const _0x5b4650 = Render[_0x429c26('0xed')](_0x508a37, 0x8)[0x0]; _0x4c1893 += _0x5b4650; } } function showLog(_0x4e6cd6, _0x4eb7e0) { var _0x24d910 = _0x1a6a7c; const _0x1bb3cd = _0x4eb7e0['text'], _0x3c4c4e = getMultiColorTextSize(_0x1bb3cd), _0x4ec576 = Global[_0x24d910('0x90')]() < _0x4eb7e0[_0x24d910('0x100')], _0x82d25b = 0x2d + 0x2a * (_0x4e6cd6 - 0x1), _0x2a6c14 = 0xc, _0x454138 = _0x3c4c4e < 0x96 ? 0x96 : _0x3c4c4e + 0xf, _0x48beea = 0x3, _0x211789 = 0xf; _0x4eb7e0['firstLayer'] = _0x4ec576 ? Math[_0x24d910('0xcf')](_0x4eb7e0['firstLayer'] + _0x454138 * 0.025, _0x454138 + _0x211789) : Math[_0x24d910('0x64')](_0x4eb7e0[_0x24d910('0xd6')] - _0x48beea, 0x0), _0x4eb7e0[_0x24d910('0x37')] = _0x4ec576 ? Math[_0x24d910('0xcf')](_0x4eb7e0[_0x24d910('0x37')] + _0x454138 * 0.015, _0x454138) : Math[_0x24d910('0x64')](_0x4eb7e0[_0x24d910('0x37')] - 0x2 * _0x48beea, 0x0); var _0x5cd706 = UI[_0x24d910('0x83')](_0x24d910('0x9a'), 'JAVASCRIPT', _0x24d910('0x51'), _0x24d910('0x73')); Render[_0x24d910('0xc3')](_0x4eb7e0[_0x24d910('0xd6')] - _0x4eb7e0[_0x24d910('0xd6')], _0x82d25b, _0x4eb7e0['firstLayer'], _0x2a6c14 + 0x14, _0x5cd706), Render['FilledRect'](_0x4eb7e0['secondLayer'] - _0x4eb7e0['secondLayer'], _0x82d25b, _0x4eb7e0[_0x24d910('0x37')], _0x2a6c14 + 0x14, [0x10, 0x0, 0x0, 0xff]), drawMultiColorText(_0x4eb7e0[_0x24d910('0x37')] - _0x454138 + 0x5, _0x82d25b + 0x3 + 0x6, _0x1bb3cd), activeLogs[_0x4e6cd6] = _0x4eb7e0, _0x4eb7e0[_0x24d910('0x37')] === 0x0 && activeLogs[_0x24d910('0x3b')](_0x4e6cd6, 0x1); } function onDraw() { var _0x2c9e58 = _0x1a6a7c; for (var _0x7d7032 = 0x0; _0x7d7032 < activeLogs[_0x2c9e58('0xe0')]; _0x7d7032++) { showLog(_0x7d7032, activeLogs[_0x7d7032]); } } function onRagebotFire() { var _0x128974 = _0x1a6a7c; ragebotTarget[Entity[_0x128974('0x95')](Event[_0x128974('0x8a')](_0x128974('0x10f')))] = { 'hitgroup': hitgroup[Event[_0x128974('0x8a')](_0x128974('0x47'))], 'hc': Event[_0x128974('0x8a')](_0x128974('0x5f')), 'safepoint': Event['GetInt'](_0x128974('0x57')), 'exploit': Event['GetInt'](_0x128974('0x78')) }; } function onPlayerHurt() { var _0x55c6d0 = _0x1a6a7c; const _0x5b3407 = Entity[_0x55c6d0('0x115')](Event[_0x55c6d0('0x8a')](_0x55c6d0('0x99'))), _0x150c6e = Entity[_0x55c6d0('0x115')](Event[_0x55c6d0('0x8a')](_0x55c6d0('0xca'))), _0xe63d91 = Entity[_0x55c6d0('0x95')](_0x150c6e); if (_0x5b3407 === Entity[_0x55c6d0('0xce')]() && _0x150c6e !== Entity[_0x55c6d0('0xce')]()) { const _0x3f5dbd = ragebotTarget[_0xe63d91]; if (_0x3f5dbd != null) { const _0x12cc1f = [[[0xff, 0xff, 0xff, 0xff], 'Hit\x20'], [0x0, _0xe63d91[_0x55c6d0('0x96')](0x0, 0x1c)], [[0xff, 0xff, 0xff, 0xff], _0x55c6d0('0x1f')], [0x0, _0x3f5dbd[_0x55c6d0('0x2a')]], [[0xff, 0xff, 0xff, 0xff], _0x55c6d0('0x2c')], [0x0, Event[_0x55c6d0('0x8a')](_0x55c6d0('0x27'))[_0x55c6d0('0x12')]()], [[0xff, 0xff, 0xff, 0xff], _0x55c6d0('0x34')], [0x0, Event[_0x55c6d0('0x8a')](_0x55c6d0('0x13')) + _0x55c6d0('0xd2')], [[0xff, 0xff, 0xff, 0xff], ')']]; activeLogs['push']({ 'text': _0x12cc1f, 'delay': Global[_0x55c6d0('0x90')]() + 0x5, 'firstLayer': 0x0, 'secondLayer': 0x0 }); } } } Global[_0x1a6a7c('0x9d')]('Draw', _0x1a6a7c('0xd4')), Global[_0x1a6a7c('0x9d')](_0x1a6a7c('0x112'), _0x1a6a7c('0xbe')), Global[_0x1a6a7c('0x9d')](_0x1a6a7c('0xa6'), _0x1a6a7c('0x24'));